{
    "version": "https://jsonfeed.org/version/1",
    "title": "Welcome to my tiny world • All posts by \"编程技巧\" tag",
    "description": "小樊&小小樊的学习笔记🌸",
    "home_page_url": "http://qianqiu-cell.github.io",
    "items": [
        {
            "id": "http://qianqiu-cell.github.io/2023/03/12/code/python_class_inherit/",
            "url": "http://qianqiu-cell.github.io/2023/03/12/code/python_class_inherit/",
            "title": "python类的继承",
            "date_published": "2023-03-11T16:00:00.000Z",
            "content_html": "<h1 id=\"情况1子类需要自动调用父类的方法\"><a class=\"markdownIt-Anchor\" href=\"#情况1子类需要自动调用父类的方法\">#</a> 情况 1：子类需要自动调用父类的方法</h1>\n<p>  如果在子类中需要父类的构造方法就需要显式地调用父类的构造方法，或者不重写父类的构造方法。子类不重写 <code>__init__</code> ，实例化子类时，会自动调用父类定义的 <code>__init__</code> ，实例如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"name: %s\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Father '</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">(</span>Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Son '</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    son<span class=\"token operator\">=</span>Son<span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> son<span class=\"token punctuation\">.</span>getName<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>输出结果为：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>name<span class=\"token punctuation\">:</span> runoob</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Son runoob</pre></td></tr></table></figure><h1 id=\"情况2子类不需要自动调用父类的方法\"><a class=\"markdownIt-Anchor\" href=\"#情况2子类不需要自动调用父类的方法\">#</a> 情况 2：子类不需要自动调用父类的方法</h1>\n<p>  如果重写了 <code>__init__</code> 时，实例化子类，就不会调用父类已经定义的 <code>__init__</code> ，语法格式如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"name: %s\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Father '</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">(</span>Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"hi\"</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span>  name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Son '</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    son<span class=\"token operator\">=</span>Son<span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> son<span class=\"token punctuation\">.</span>getName<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>输出结果为：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hi</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Son runoob</pre></td></tr></table></figure><h1 id=\"情况3子类需要重写init方法又需要调用父类的方法\"><a class=\"markdownIt-Anchor\" href=\"#情况3子类需要重写init方法又需要调用父类的方法\">#</a> 情况 3：子类需要重写 ——<strong>init</strong> () 方法，又需要调用父类的方法</h1>\n<p>  如果重写了 <code>__init__</code> 时，要继承父类的构造方法，可以使用 <code>super</code>  关键字：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>子类，self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>参数<span class=\"token number\">1</span>，参数<span class=\"token number\">2</span>，<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  还有一种经典写法：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>父类名称<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>参数<span class=\"token number\">1</span>，参数<span class=\"token number\">2</span>，<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实例如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"name: %s\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Father '</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">(</span>Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Son<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span>  name</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Son '</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    son<span class=\"token operator\">=</span>Son<span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> son<span class=\"token punctuation\">.</span>getName<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>输出结果为：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>name<span class=\"token punctuation\">:</span> runoob</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hi</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Son runoob</pre></td></tr></table></figure>",
            "tags": [
                "python",
                "编程技巧"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/12/code/python_enumerate/",
            "url": "http://qianqiu-cell.github.io/2023/03/12/code/python_enumerate/",
            "title": "python使用enumerate()给列表添加序号",
            "date_published": "2023-03-11T16:00:00.000Z",
            "content_html": "<p>   <code>enumerate(iteration, start)</code>  函数默认包含两个参数，其中 <code>iteration</code>  参数为需要遍历的参数，比如<mark>字典、列表、元组</mark>等， <code>start</code>  参数为开始的参数，默认为 <code>0</code> 。 <code>enumerate</code>  函数有两个返回值，第一个返回值为从 <code>start</code>  参数开始的数，第二个参数为 <code>iteration</code>  参数中的值。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Carl\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span>value <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>index<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span>value <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>index<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运行结果如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0</span><span class=\"token punctuation\">:</span> Alice</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Bob</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Carl</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Alice</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Bob</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">:</span> Carl</pre></td></tr></table></figure>",
            "tags": [
                "python",
                "编程技巧"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/03/code/python_json/",
            "url": "http://qianqiu-cell.github.io/2023/03/03/code/python_json/",
            "title": "python读取及保存json文件",
            "date_published": "2023-03-02T16:00:00.000Z",
            "content_html": "<h1 id=\"一-读取json文件\"><a class=\"markdownIt-Anchor\" href=\"#一-读取json文件\">#</a> 一、读取 json 文件</h1>\n<h2 id=\"loads传入一个json格式的字符串解码为python对象\"><a class=\"markdownIt-Anchor\" href=\"#loads传入一个json格式的字符串解码为python对象\">#</a>  <code>loads</code>  传入一个 <code>JSON</code>  格式的字符串，解码为 <code>python</code>  对象</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># loads 传入一个 JSON 格式的字符串，解码成 python 对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token string\">'[&#123;\"姓名\":\"张三\",\"年龄\":\"18\"&#125;,&#123;\"姓名\":\"李四\",\"年龄\":\"20\"&#125;]'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#返回 & lt;class'str'></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>new_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>new_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>new_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"load把json格式文件转换成python类型的数据\"><a class=\"markdownIt-Anchor\" href=\"#load把json格式文件转换成python类型的数据\">#</a>  <code>load</code>  把 <code>JSON</code>  格式文件，转换成 <code>python</code>  类型的数据</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'demo.json'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">#加载文件的对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    py_list <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>py_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>py_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"二-存储json文件\"><a class=\"markdownIt-Anchor\" href=\"#二-存储json文件\">#</a> 二、存储 json 文件</h1>\n<h2 id=\"dumps把python类型数据转换成json字符串\"><a class=\"markdownIt-Anchor\" href=\"#dumps把python类型数据转换成json字符串\">#</a>  <code>dumps</code>  把 <code>python</code>  类型数据转换成 <code>JSON</code>  字符串</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token string\">'[&#123;\"姓名\":\"张三\",\"年龄\":\"18\"&#125;,&#123;\"姓名\":\"李四\",\"年龄\":\"20\"&#125;]'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>new_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title.json'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># ensure_ascii=False 才能输入中文，否则是 Unicode 字符</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># indent=2 JSON 数据的缩进，美观</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>new_data<span class=\"token punctuation\">,</span>f2<span class=\"token punctuation\">,</span>ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>indent<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"dump把python类型的数据以json格式存储到文件中\"><a class=\"markdownIt-Anchor\" href=\"#dump把python类型的数据以json格式存储到文件中\">#</a>  <code>dump</code>  把 <code>python</code>  类型的数据以 <code>JSON</code>  格式存储到文件中</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token string\">'[&#123;\"姓名\":\"张三\",\"年龄\":\"18\"&#125;,&#123;\"姓名\":\"李四\",\"年龄\":\"20\"&#125;]'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>new_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title.json'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># ensure_ascii=False 才能输入中文，否则是 Unicode 字符</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># indent=2 JSON 数据的缩进，美观</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>new_data<span class=\"token punctuation\">,</span>f2<span class=\"token punctuation\">,</span>ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>indent<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"三-成功使用案例\"><a class=\"markdownIt-Anchor\" href=\"#三-成功使用案例\">#</a> 三、成功使用案例</h1>\n<h2 id=\"读取json文件\"><a class=\"markdownIt-Anchor\" href=\"#读取json文件\">#</a> 读取 json 文件</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 需要保存的数据有：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 仓库系列 (2)：仓库长度 (length)、仓库宽度 (weight)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 货架系列 (2)：货架数量 (n_pod)、货架容量限制 (pod_limitation)、货架位置 (loc_pod)、拣货口位置（loc_station）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 机器人系列 (4)：机器人数量 (n_robot)、机器人空载与负载速度比 (ratio_T)、机器人到达货架时间 (Tp、Td)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 商品系列 (3)：商品类型数量 (n_commodity_type)、每种商品总数量 (commodity_limitation)、货架 i 上包含商品 c 的数量 (A)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 订单系列 (3)：商品总需求量 (total_order)、订单数量 (n_order)、订单 i 中包含商品 c 的数量 (B)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 拣货系列 (1)：拣取一个商品所需时间 (Th)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token triple-quoted-string string\">'''读取json文件'''</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'datas/6p_2r.json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># ensure_ascii=False 才能输入中文，否则是 Unicode 字符</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># indent=2 JSON 数据的缩进，美观</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    json_datas <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>fp<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>json_datas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    length<span class=\"token punctuation\">,</span> weight <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    n_pod<span class=\"token punctuation\">,</span> pod_limitation<span class=\"token punctuation\">,</span> loc_pod<span class=\"token punctuation\">,</span> loc_station <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_pod'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'pod_limitation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'loc_pod'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'loc_station'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    n_robot<span class=\"token punctuation\">,</span> ratio_T<span class=\"token punctuation\">,</span> Tp<span class=\"token punctuation\">,</span> Td <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_robot'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'ratio_T'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Tp'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Td'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    n_commodity_type<span class=\"token punctuation\">,</span> commodity_limitation<span class=\"token punctuation\">,</span> A <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_commodity_type'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'commodity_limitation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    total_order<span class=\"token punctuation\">,</span> n_order<span class=\"token punctuation\">,</span> B <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'total_order'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_order'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    Th <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Th'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'th element of json file is successfully read'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"存储json文件\"><a class=\"markdownIt-Anchor\" href=\"#存储json文件\">#</a> 存储 json 文件</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> parameter <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 功能：以轮盘赌的方式选取选中的商品</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 输入参数：剩余商品数组，随机数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 输出参数：选中的商品类型</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_selected_commodity</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    array_sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    selected_index <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> array_sum <span class=\"token operator\">&lt;</span> number <span class=\"token operator\">&lt;=</span> array_sum <span class=\"token operator\">+</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            selected_index <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            array_sum <span class=\"token operator\">+=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> selected_index</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 功能：随机选取货架来放置商品</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 输入参数：货架状态数组</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 输出参数：选中的货架</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_selected_pod</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    random_index <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> array<span class=\"token punctuation\">[</span>random_index<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            random_index <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">return</span> random_index</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 函数功能：根据输入参数设计仓库布局（货架位置）</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 输出参数：机器人行走到每个货架所需时间（空载与负载）</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">g_pod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">if</span> length <span class=\"token operator\">*</span> weight <span class=\"token operator\">&lt;</span> n_pod<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\"># 仓库布局违法</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"仓库布局违法\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        Tp<span class=\"token punctuation\">,</span> Td <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        loc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 记录每个货架的位置</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        mark_numbers <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>length <span class=\"token operator\">*</span> weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 记录每个位置的编号</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        random<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>mark_numbers<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 随机打乱所有编号后取前 n 个作为货架位置</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            Tp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>c_tp<span class=\"token punctuation\">(</span>mark_numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            Td<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ratio_T <span class=\"token operator\">*</span> c_tp<span class=\"token punctuation\">(</span>mark_numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            loc<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>g_loc<span class=\"token punctuation\">(</span>mark_numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\"># print (\"每个货架的位置为：\", loc)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\"># print (\"拣货站台的位置为：\", [(weight - 1) / 2, length])</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">return</span> Tp<span class=\"token punctuation\">,</span> Td<span class=\"token punctuation\">,</span> loc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>weight <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># 函数功能：计算 Tp</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># 输入参数：仓库长度，仓库宽度，货架位置记号</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># 输出参数：机器人空载到达货架位置所需时间 Tp</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">c_tp</span><span class=\"token punctuation\">(</span>mark_number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    terminus <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>weight <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> g_loc<span class=\"token punctuation\">(</span>mark_number<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> terminus<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> terminus<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># 函数功能：根据标记获取货架位置</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\"># 输入参数：仓库长度，货架位置记号</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\"># 输出参数：货架位置（x, y）</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">g_loc</span><span class=\"token punctuation\">(</span>mark_number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    x <span class=\"token operator\">=</span> mark_number <span class=\"token operator\">//</span> length</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    y <span class=\"token operator\">=</span> mark_number <span class=\"token operator\">%</span> length</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">,</span> y</pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''检测布局是否合法'''</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">if</span> n_pod <span class=\"token operator\">></span> length <span class=\"token operator\">*</span> weight<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"****货架数量与仓库布局不匹配****\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span>pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>commodity_limitation<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> n_pod <span class=\"token operator\">&lt;</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"总商品存货数量与货架数量不匹配\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">if</span> total_order <span class=\"token operator\">&lt;</span> n_order <span class=\"token keyword\">or</span> total_order <span class=\"token operator\">></span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>commodity_limitation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"订单数量与订单总需求商品不匹配\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    json_datas <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># json 字符串格式变量，用来保存生成数据</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">for</span> n_data <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_datas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''生成货架分布'''</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        Tp<span class=\"token punctuation\">,</span> Td<span class=\"token punctuation\">,</span> loc_pod<span class=\"token punctuation\">,</span> loc_station <span class=\"token operator\">=</span> g_pod<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 生成仓库布局</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token comment\"># Tp, Td = np.array(Tp), np.array(Td)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token comment\"># print(Tp.tolist(), sep=',')</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token comment\"># print(Td.tolist(), sep=',')</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''生成商品分布'''</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        commodities_distribution <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 存储货架上商品数量</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        remain_commodity <span class=\"token operator\">=</span> commodity_limitation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 剩余商品</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># noqa, 剩余商品汇总</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        pod_commodity_sum <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n_pod</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        pod_state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n_pod  <span class=\"token comment\"># 货架存货状态，0 表示还未到达最小容量，1 表示达到最小容量，2 表示在最小容量及最大容量之间，3 表示已经达到最大容量</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token comment\"># 首先保证每个货架都满足最低限制</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            selected_pod <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                random_number <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> remain_commodity_sum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                selected_commodity <span class=\"token operator\">=</span> get_selected_commodity<span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">,</span> random_number<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                commodities_distribution<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">,</span> selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                remain_commodity<span class=\"token punctuation\">[</span>selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                pod_state<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                    <span class=\"token number\">1</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                        <span class=\"token number\">2</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token keyword\">while</span> remain_commodity_sum <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            selected_pod <span class=\"token operator\">=</span> get_selected_pod<span class=\"token punctuation\">(</span>pod_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            random_number <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> remain_commodity_sum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            selected_commodity <span class=\"token operator\">=</span> get_selected_commodity<span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">,</span> random_number<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            commodities_distribution<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">,</span> selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            remain_commodity<span class=\"token punctuation\">[</span>selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            pod_state<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>                <span class=\"token number\">1</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>                    <span class=\"token number\">2</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token comment\"># print(commodities_distribution.tolist(), sep=',')</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''生成订单分布'''</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        orders <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_order<span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 订单 o 中商品 c 的数量</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        remain_commodity <span class=\"token operator\">=</span> commodity_limitation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 剩余商品</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 剩余商品汇总</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        remain_order <span class=\"token operator\">=</span> total_order  <span class=\"token comment\"># 剩余订单需求商品数量</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>            selected_order <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>            random_number <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> remain_commodity_sum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            selected_commodity <span class=\"token operator\">=</span> get_selected_commodity<span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">,</span> random_number<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            orders<span class=\"token punctuation\">[</span>selected_order<span class=\"token punctuation\">,</span> selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            remain_commodity<span class=\"token punctuation\">[</span>selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            remain_order <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        <span class=\"token keyword\">while</span> remain_order <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>            selected_order <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n_order <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>            random_number <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> remain_commodity_sum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            selected_commodity <span class=\"token operator\">=</span> get_selected_commodity<span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">,</span> random_number<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            orders<span class=\"token punctuation\">[</span>selected_order<span class=\"token punctuation\">,</span> selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            remain_commodity<span class=\"token punctuation\">[</span>selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            remain_order <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        <span class=\"token comment\"># print (\"随机生成订单矩阵为：\")</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        <span class=\"token comment\"># print(orders.tolist(), sep=',')</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''生成json格式数据'''</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        <span class=\"token comment\"># 需要保存的数据有：</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        <span class=\"token comment\"># 仓库系列 (2)：仓库长度 (length)、仓库宽度 (weight)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        <span class=\"token comment\"># 货架系列 (2)：货架数量 (n_pod)、货架容量限制 (pod_limitation)、 货架位置 (loc_pod)、拣货口位置（loc_station）</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>        <span class=\"token comment\"># 机器人系列 (4)：机器人数量 (n_robot)、机器人空载与负载速度比 (ratio_T)、机器人到达货架时间 (Tp、Td)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>        <span class=\"token comment\"># 商品系列 (3)：商品类型数量 (n_commodity_type)、每种商品总数量 (commodity_limitation)、货架 i 上包含商品 c 的数量 (A)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        <span class=\"token comment\"># 订单系列 (3)：商品总需求量 (total_order)、订单数量 (n_order)、订单 i 中包含商品 c 的数量 (B)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token comment\"># 拣货系列 (1)：拣取一个商品所需时间 (Th)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        json_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">:</span> length<span class=\"token punctuation\">,</span> <span class=\"token string\">'weight'</span><span class=\"token punctuation\">:</span> weight<span class=\"token punctuation\">,</span> <span class=\"token string\">'n_pod'</span><span class=\"token punctuation\">:</span> n_pod<span class=\"token punctuation\">,</span> <span class=\"token string\">'pod_limitation'</span><span class=\"token punctuation\">:</span> pod_limitation<span class=\"token punctuation\">,</span> <span class=\"token string\">'loc_pod'</span><span class=\"token punctuation\">:</span> loc_pod<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>                     <span class=\"token string\">'loc_station'</span><span class=\"token punctuation\">:</span> loc_station<span class=\"token punctuation\">,</span> <span class=\"token string\">'n_robot'</span><span class=\"token punctuation\">:</span> n_robot<span class=\"token punctuation\">,</span> <span class=\"token string\">'ratio_T'</span><span class=\"token punctuation\">:</span> ratio_T<span class=\"token punctuation\">,</span> <span class=\"token string\">'Tp'</span><span class=\"token punctuation\">:</span> Tp<span class=\"token punctuation\">,</span> <span class=\"token string\">'Td'</span><span class=\"token punctuation\">:</span> Td<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>                     <span class=\"token string\">'n_commodity_type'</span><span class=\"token punctuation\">:</span> n_commodity_type<span class=\"token punctuation\">,</span> <span class=\"token string\">'commodity_limitation'</span><span class=\"token punctuation\">:</span> commodity_limitation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>                     <span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> commodities_distribution<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'total_order'</span><span class=\"token punctuation\">:</span> total_order<span class=\"token punctuation\">,</span> <span class=\"token string\">'n_order'</span><span class=\"token punctuation\">:</span> n_order<span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span> orders<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Th'</span><span class=\"token punctuation\">:</span> Th<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        json_datas<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''生成json文件'''</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'datas/'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'p_'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'r_'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_datas<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        <span class=\"token comment\"># ensure_ascii=False 才能输入中文，否则是 Unicode 字符</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token comment\"># indent=2 JSON 数据的缩进，美观</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>json_datas<span class=\"token punctuation\">,</span> fp<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    fp<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'json file \\''</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'p_'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'r_'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_datas<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.json\\''</span> <span class=\"token operator\">+</span> <span class=\"token string\">' generates succeed'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "python",
                "编程技巧"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/02/code/python_gurobi/",
            "url": "http://qianqiu-cell.github.io/2023/03/02/code/python_gurobi/",
            "title": "python+gurobi应用",
            "date_published": "2023-03-01T16:00:00.000Z",
            "content_html": "<p>  有关 <code>gurobi</code>  的使用可以参考官方手册（ <code>Gurobi</code>  安装路径 <code>\\win64\\docs</code>  下的 <code>quickstart_windows.pdf</code>  和 <code>refman.pdf</code> ）</p>\n<h1 id=\"一-一些使用技巧\"><a class=\"markdownIt-Anchor\" href=\"#一-一些使用技巧\">#</a> 一、一些使用技巧</h1>\n<h2 id=\"11-gurobi无穷大值\"><a class=\"markdownIt-Anchor\" href=\"#11-gurobi无穷大值\">#</a> 1.1 gurobi 无穷大值</h2>\n<p>  参考 <code>refman.pdf</code>  的 <code>13.2</code>  中的 <code>FeasRelaxBigM</code>  和 <code>29.3</code>  中的 <code>Dealing with big-M constraints</code> <br>\n<img data-src=\"/images/python_gurobi/1.1.png\" alt=\"\"></p>\n<h2 id=\"12-gurobi最大值\"><a class=\"markdownIt-Anchor\" href=\"#12-gurobi最大值\">#</a> 1.2 gurobi 最大值</h2>\n<p>  在模型中遇到如下所示求最小化数组中最大值的目标函数<br>\n<img data-src=\"https://i.postimg.cc/Nf2QFypg/1-2.jpg\"  style=\"zoom: 33%;\" /><br>\n  可构造辅助变量，令改变量大于数组中的所有分量，最后对辅助变量进行最大 / 最小化</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>obj1 <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addVar<span class=\"token punctuation\">(</span>vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>CONTINUOUS<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'obj1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>obj1 <span class=\"token operator\">>=</span> tH<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m<span class=\"token punctuation\">.</span>setObjective<span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">,</span> GRB<span class=\"token punctuation\">.</span>MINIMIZE<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"二-成功使用案例\"><a class=\"markdownIt-Anchor\" href=\"#二-成功使用案例\">#</a> 二、成功使用案例</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> parameter <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gurobipy <span class=\"token keyword\">as</span> gp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> gurobipy <span class=\"token keyword\">import</span> GRB</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># Create optimization model</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    m <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">(</span><span class=\"token string\">'RMFS'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># Create variables</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    x <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addMVar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_robot<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>BINARY<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 是机器人 r 第 k 个转运的任务（0，1 变量）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    y <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addMVar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>BINARY<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 是拣货人第 k 个处理的货架（0，1 变量）</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    z <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addMVar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_order<span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>INTEGER<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"z\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 为订单 o 提供的商品 c 的数量（自然数）</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    tP <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addVars<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>CONTINUOUS<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"tP\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人拿起的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    tD <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addVars<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>CONTINUOUS<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"tD\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人放下的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    tH <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addVars<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>CONTINUOUS<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"tH\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被拣货人开始拣货的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># Create auxiliary variable</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    obj1 <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addVar<span class=\"token punctuation\">(</span>vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>CONTINUOUS<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'obj1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    m<span class=\"token punctuation\">.</span>setParam<span class=\"token punctuation\">(</span>GRB<span class=\"token punctuation\">.</span>Param<span class=\"token punctuation\">.</span>FeasRelaxBigM<span class=\"token punctuation\">,</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>Td<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> n_pod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># Set objective</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>obj1 <span class=\"token operator\">>=</span> tH<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    m<span class=\"token punctuation\">.</span>setObjective<span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">,</span> GRB<span class=\"token punctuation\">.</span>MINIMIZE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># Add constraint</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># 1. 每个货架提供给所有订单的每种商品不超过其所包含的该商品的数量</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_commodity_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 2. 所有货架提供给某一订单的某种商品数等于该订单所需求的该种商品的数量</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_order<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_commodity_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\"># 3. 每个货架最多被安排给一个转运机器人的一个顺序号</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># 4. 每个机器人的每个顺序号最多安排一个货架</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\"># 5. 若机器人的后序顺序号被安排了一个货架，则其前序顺序号一定被安排了一个货架</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\"># 6. 若某一货架为订单提供了商品，则必须为该货架安排一个转运机器人</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>total_order <span class=\"token operator\">*</span> x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\"># 7. 某一货架被机器人放下的时间等于其被拿起的时间与转运时间之和</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>tD<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> tP<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>Td<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\"># 8. 机器人拿起下一货架的时间不小于机器人放下上一货架和运行至下一货架的时间和</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>tP<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> tD<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">.</span>Params<span class=\"token punctuation\">.</span>FeasRelaxBigM <span class=\"token keyword\">for</span> i1 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i2 <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                 <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\"># 9. 每个货架最多被安排给一个拣货顺序号</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\"># 10. 每个拣货顺序号最多安排一个货架</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\"># 11. 当前拣货顺序号被安排了一个货架，则其前序拣货顺序号一定被安排了一个货架</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> y<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\"># 12. 若货架被分配了一个转运机器人，则一定为其安排了拣货</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\"># 13. 货架的拣货时间不早于其被机器人送到拣货站的时间</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>tH<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> tD<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\"># 14. 拣货人拣取下一货架的时间不小于拣货人开始拣取上一货架和拣取上一货架的时间和</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>tH<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> tH<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> y<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">.</span>Params<span class=\"token punctuation\">.</span>FeasRelaxBigM <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                 <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i2 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i1 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\"># 15. 机器人拿起的第一个货架等于机器人空载运行到该货架的时间</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>tP<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> Tp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">.</span>Params<span class=\"token punctuation\">.</span>FeasRelaxBigM <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token comment\"># Optimize model</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    m<span class=\"token punctuation\">.</span>optimize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">.</span>getVars<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%s %g'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>VarName<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Obj: %g'</span> <span class=\"token operator\">%</span> m<span class=\"token punctuation\">.</span>ObjVal<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "python",
                "编程技巧"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/02/code/python_numba/",
            "url": "http://qianqiu-cell.github.io/2023/03/02/code/python_numba/",
            "title": "使用numba对python进行加速",
            "date_published": "2023-03-01T16:00:00.000Z",
            "content_html": "<h1 id=\"一-numba简介\"><a class=\"markdownIt-Anchor\" href=\"#一-numba简介\">#</a> 一、Numba 简介</h1>\n<p>  计算机只能执行二进制的机器码， <code>C</code> 、 <code>C++</code>  等<mark>编译型语言</mark>依靠编译器将源代码转化为可执行文件后才能运行， <code>Python</code> 、 <code>Java</code>  等<mark>解释型语言</mark>使用解释器将源代码翻译后在虚拟机上执行。对于 <code>Python</code> ，由于解释器的存在，其执行效率比 <code>C</code>  语言慢几倍甚至几十倍。通过下图对各种编程语言比较情况可见 <code>python</code>  在消耗电量、速度以及内存使用情况上与 <code>C</code> 、 <code>C++</code>  的差距。<br>\n<img data-src=\"/images/python_numba/1.1.jpg\" alt=\"\"><br>\n   <code>Numba</code>  是一个针对 <code>Python</code>  的开源 <code>JIT</code>  编译器，由 <code>Anaconda</code>  公司主导开发，可以对原生代码进行 <code>CPU</code>  和 <code>GPU</code>  加速。在使用 <code>Python</code>  进行高性能计算时， <code>Numba</code>  提供的加速效果可以比肩原生的 <code>C/C++</code>  程序。</p>\n<h1 id=\"二-numba的使用方式\"><a class=\"markdownIt-Anchor\" href=\"#二-numba的使用方式\">#</a> 二、numba 的使用方式</h1>\n<p>  通常，在对 <code>Python</code>  函数应用<mark>函数装饰器</mark>后，便可启用 <code>Numba</code>  编译器。装饰器即为函数修改器，使用十分简单的语法来转换所装饰的 <code>Python</code>  函数。</p>\n<h2 id=\"21-jit\"><a class=\"markdownIt-Anchor\" href=\"#21-jit\">#</a> 2.1 @jit</h2>\n<p>  我们只需要在原来的代码上添加一行 <code>@jit</code> ，即可将一个函数编译成机器码，其他地方都不需要更改。 <code>@</code> 符号装饰了原来的代码，所以称类似写法为装饰器。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> numba <span class=\"token keyword\">import</span> jit</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token decorator annotation punctuation\">@jit</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"22-njit\"><a class=\"markdownIt-Anchor\" href=\"#22-njit\">#</a> 2.2 @njit</h2>\n<p>   <code>@jit</code>  装饰器有一个参数 <code>nopython</code> ， 用于区分 <code>numba</code>  的运行模式， <code>numba</code>  有两种运行模式：一个是 <code>nopython</code>  模式，另一个就是 <code>object</code>  模式。只有在 <code>nopython</code>  模式下，才会获得最好的加速效果，如果 <code>numba</code>  发现代码有不能理解的东西，就会自动进入 <code>object</code>  模式，确保程序能够运行的。将装饰器改为 <code>@jit(nopython=True)</code>  或者 <code>@njit</code> ， <code>numba</code>  会强制使用加速的方式，不进入 <code>object</code>  模式，如编译不成功，则直接抛出异常。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> numba <span class=\"token keyword\">import</span> jit</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token decorator annotation punctuation\">@njit</span>  <span class=\"token comment\"># 相当于 @jit (nonpyhon=True)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"23-vectorize\"><a class=\"markdownIt-Anchor\" href=\"#23-vectorize\">#</a> 2.3 @vectorize</h2>\n<p>  通过使用 <code>@vectorize</code>  装饰器，你可以对仅能对标量操作的函数进行转换，例如，如果你使用的是仅适用于标量的 <code>python</code>  的 <code>math</code>  库，则转换后就可以用于数组。这提供了类似于 <code>numpy</code>  数组运算。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> numba <span class=\"token keyword\">import</span> jit<span class=\"token punctuation\">,</span> int32</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token decorator annotation punctuation\">@vectorize</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># Some operation on scalars</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><h1 id=\"三-使用注意事项\"><a class=\"markdownIt-Anchor\" href=\"#三-使用注意事项\">#</a> 三、使用注意事项</h1>\n<p>（1） <code>Numba</code>  简单到只需要在函数上加一个装饰就能加速程序，但也有缺点。目前 <code>Numba</code>  只支持了 <code>Python</code>  原生函数和部分 <code>NumPy</code>  函数，其他一些场景可能不适用。<br>\n  比如类似 <code>pandas</code>  这样的库是更高层次的封装， <code>Numba</code>  其实不能理解它里面做了什么，所以无法对其加速。一些大家经常用的机器学习框架，如 <code>scikit-learn</code> ， <code>tensorflow</code> ， <code>pytorch</code>  等，已经做了大量的优化，不适合再使用 <code>Numba</code>  做加速。<br>\n（2）原生 <code>Python</code>  速度慢的另一个重要原因是变量类型不确定。声明一个变量的语法很简单，如 <code>a = 1</code> ，但没有指定 <code>a</code>  到底是一个整数和一个浮点小数。 <code>Python</code>  解释器要进行大量的类型推断，会非常耗时。 引入 <code>Numba</code>  后， <code>Numba</code>  也要推断输入输出的类型，才能转化为机器码。针对这个问题， <code>Numba</code>  给出了名为 <code>Eager Compilation</code>  的优化方式。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> numba <span class=\"token keyword\">import</span> jit<span class=\"token punctuation\">,</span> int32</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token decorator annotation punctuation\">@jit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int32(int32, int32)\"</span><span class=\"token punctuation\">,</span> nopython<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr></table></figure><p>   <code>@jit(int32(int32, int32))</code>  告知 <code>Numba</code>  你的函数在使用什么样的输入和输出，括号内是输入，括号左侧是输出。这样不会加快执行速度，但是会加快编译速度，可以更快将函数编译到机器码上。</p>\n<h1 id=\"四-成功使用案例\"><a class=\"markdownIt-Anchor\" href=\"#四-成功使用案例\">#</a> 四、成功使用案例</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 功能：根据输入参数获得 z（货架 i 为订单 o 提供的商品 c 的数量）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 输入参数：各参数同 parameter.py</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 输出参数：z</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token decorator annotation punctuation\">@nb<span class=\"token punctuation\">.</span>njit</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    nb<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                     nb<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_z</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    z <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    transform_y <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> y<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                transform_y<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    remaining_orders <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 所有订单剩余量（n_order*n_commodity_type）</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 第 i 个货架</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        remaining_A <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span>transform_y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 当前货架的剩余量（1*n_commodity_type）</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 第 j 个订单</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 第 k 种商品</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">if</span> remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token keyword\">if</span> remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 货架 i 足够为订单 k 提供 z 种商品</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                        z<span class=\"token punctuation\">[</span>transform_y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                        remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                        remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 货架 i 不足够为订单 k 提供 z 种商品</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token comment\"># z[transform_y[i]][j][k] = remaining_A[k]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                        z<span class=\"token punctuation\">[</span>transform_y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                        remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> z</pre></td></tr></table></figure>",
            "tags": [
                "python",
                "编程技巧"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/02/code/python_try_except/",
            "url": "http://qianqiu-cell.github.io/2023/03/02/code/python_try_except/",
            "title": "python下的try-except处理异常",
            "date_published": "2023-03-01T16:00:00.000Z",
            "content_html": "<h1 id=\"一-什么是异常\"><a class=\"markdownIt-Anchor\" href=\"#一-什么是异常\">#</a> 一、什么是异常</h1>\n<p>  异常即是一个事件，该事件会在程序执行过程中发生，影响了程序的正常执行。 <code>python</code>  的标准异常及异常处理详解<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9weXRob24vcHl0aG9uLWV4Y2VwdGlvbnMuaHRtbA==\">戳此</span></p>\n<h1 id=\"二-异常处理\"><a class=\"markdownIt-Anchor\" href=\"#二-异常处理\">#</a> 二、异常处理</h1>\n<p>  捕捉异常可以使用 <code>try/except</code>  语句。 <code>try/except</code>  语句用来检测 <code>try</code>  语句块中的错误，从而让 <code>except</code>  语句捕获异常信息并处理。如果不想在异常发生时结束程序，只需在 <code>try</code>  里捕获它。</p>\n<h1 id=\"三-语法\"><a class=\"markdownIt-Anchor\" href=\"#三-语法\">#</a> 三、语法：</h1>\n<h2 id=\"31-try-except-else\"><a class=\"markdownIt-Anchor\" href=\"#31-try-except-else\">#</a> 3.1 try-except-else</h2>\n<p>  以下为简单的 <code>try....except...else</code>  的语法：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span>        <span class=\"token comment\">#运行别的代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">except</span> NameError：</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span>        <span class=\"token comment\">#如果在 try 部份引发了 'name' 异常，执行此语句</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span>        <span class=\"token comment\">#其他类型异常执行此语句</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span>        <span class=\"token comment\">#如果没有异常发生</span></pre></td></tr></table></figure><h2 id=\"32-try-finally\"><a class=\"markdownIt-Anchor\" href=\"#32-try-finally\">#</a> 3.2 try-finally</h2>\n<p>   <code>try-finally</code>  语句无论是否发生异常都将执行最后的代码。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span>    <span class=\"token comment\">#退出 try 时总会执行</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">raise</span></pre></td></tr></table></figure>",
            "tags": [
                "python",
                "编程技巧"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/01/code/CplusplusGetTime/",
            "url": "http://qianqiu-cell.github.io/2023/03/01/code/CplusplusGetTime/",
            "title": "C++获取程序运行时间",
            "date_published": "2023-02-28T16:00:00.000Z",
            "content_html": "<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;chrono></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token double-colon punctuation\">::</span>chrono<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> time1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">/*cout &lt;&lt; \"秒:\" &lt;&lt; duration_cast&lt;seconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tcout &lt;&lt; \"毫秒:\" &lt;&lt; duration_cast&lt;milliseconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tcout &lt;&lt; \"微秒:\" &lt;&lt; duration_cast&lt;microseconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tcout &lt;&lt; \"纳秒:\" &lt;&lt; duration_cast&lt;nanoseconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;*/</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> t1 <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">duration_cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>microseconds<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>system_clock<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">time_since_epoch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token comment\">//cout &lt;&lt; \"微秒:\" &lt;&lt; duration_cast&lt;microseconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">120000</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">%</span> <span class=\"token number\">9</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t\tcount <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t\tcount <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> t2 <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">duration_cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>microseconds<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>system_clock<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">time_since_epoch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\tcout <span class=\"token operator\">&lt;&lt;</span> t2 <span class=\"token operator\">-</span> t1 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token comment\">//cout &lt;&lt; \"微秒:\" &lt;&lt; duration_cast&lt;microseconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "C++"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/01/code/python_test/",
            "url": "http://qianqiu-cell.github.io/2023/03/01/code/python_test/",
            "title": "Python test in xxx问题",
            "date_published": "2023-02-28T16:00:00.000Z",
            "content_html": "<h1 id=\"一-问题描述\"><a class=\"markdownIt-Anchor\" href=\"#一-问题描述\">#</a> 一、问题描述</h1>\n<p><code>pycharm</code>  运行程序时，不是 <code>run xxx</code>  的格式。而是 <code>python tests in xxx</code>  的格式，如下图所示<br>\n<img data-src=\"/images/python_test/1.1.png\" alt=\"\"></p>\n<h1 id=\"二-问题原因\"><a class=\"markdownIt-Anchor\" href=\"#二-问题原因\">#</a> 二、问题原因</h1>\n<p>程序的文件名格式为 <code>test_.py</code>  或 <code>_test.py</code> ，在 <code>pycharm</code>  中自动进入了 <code>pytest</code>  的模式</p>\n<h1 id=\"三-解决方案\"><a class=\"markdownIt-Anchor\" href=\"#三-解决方案\">#</a> 三、解决方案</h1>\n<p>（1）将 <code>py</code>  文件的文件名称更改为其他格式<br>\n（2）进入 <code>File→Settings→Tools→Python integrated Tools</code> ，在 <code>Testing</code>  中将 <code>Default test runner</code>  选项由 <code>pytest</code>  更改为 <code>Unittests</code> <br>\n<img data-src=\"/images/python_test/3.1.png\" alt=\"\"></p>\n",
            "tags": [
                "python",
                "编程技巧"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/02/06/code/python/",
            "url": "http://qianqiu-cell.github.io/2023/02/06/code/python/",
            "title": "Python技巧",
            "date_published": "2023-02-05T16:00:00.000Z",
            "content_html": "<h1 id=\"一-基础概念\"><a class=\"markdownIt-Anchor\" href=\"#一-基础概念\">#</a> 一、基础概念</h1>\n<details class=\"info\"><summary>Python按位运算符 (Python Bitwise Operators)</summary><div>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Bitwise Operator</th>\n<th style=\"text-align:center\">Description</th>\n<th style=\"text-align:center\">Simple Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">Bitwise OR Operator</td>\n<td style=\"text-align:center\">10 &amp; 7 = 2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">|</td>\n<td style=\"text-align:center\">Bitwise XOR Operator</td>\n<td style=\"text-align:center\">10 | 7 = 15</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">Bitwise AND Operator</td>\n<td style=\"text-align:center\">10 ^ 7 = 13</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">~</td>\n<td style=\"text-align:center\">Bitwise Ones’ Compliment Operator</td>\n<td style=\"text-align:center\">~10 = -11</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;&lt;</td>\n<td style=\"text-align:center\">Bitwise Left Shift operator</td>\n<td style=\"text-align:center\">10&lt;&lt;2 = 40</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;&gt;</td>\n<td style=\"text-align:center\">Bitwise Right Shift Operator</td>\n<td style=\"text-align:center\">10&gt;&gt;1 = 5</td>\n</tr>\n</tbody>\n</table>\n</div></details>\n<details class=\"danger\"><summary>python字符串、列表、元组乘法</summary><div>\n<p><code>python</code>  中，支持相乘的有字符串，列表，元组，相乘是内容相乘 <code>n</code> ，新的内容会重复 <code>n</code>  次</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>str_a <span class=\"token operator\">=</span> <span class=\"token string\">\"我\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str_a <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>list_a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list_a <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>list_b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"我\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"爱\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"python\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list_b <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运行结果为<br>\n<img data-src=\"/images/python/1.1.1.png\" alt=\"\"></p>\n</div></details>\n<details class=\"warning\"><summary>浮点数运算不精确问题</summary><div>\n<p>由于 <code>Python</code>  的浮点数以二进制形式表示，计算机在进行浮点运算时会产生浮点误差，如下场景所示</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100.9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 输出：201.60000000000002</span></pre></td></tr></table></figure><p>解决方法： <code>round()</code>  是 <code>python</code>  自带的一个函数，用于数字的四舍五入</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.214</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 输出：5.21</span></pre></td></tr></table></figure></div></details>\n<details class=\"success\"><summary>python中的特殊注释</summary><div>\n<p>Python 的注释方式中存在一些特殊的用法，比如  <code># noqa</code> ，  <code># todo</code> ，  <code># type</code></p>\n<div class=\"tab\" data-id=\"id1\" data-title=\"# noqa\">\n<p><code>noqa</code>  指 <code>no quality assurance</code> ，用在一行代码后，表示这一行代码自动检查忽略错误，由 <code>IDE</code>  支持<br>\n比如以下命名拼写问题，不会出现下划线提醒：<br>\n<img data-src=\"/images/python/1.3.1.png\" alt=\"\"><br>\n也可以用作  <code># noqa: &lt;error&gt;</code> ，表示忽略某一特定类型的错误，例如<br>\n<img data-src=\"/images/python/1.3.2.jpg\" alt=\"\"><br>\n如上表示忽略了 <code>numpy</code>  引用但未使用的问题，不会出现提示</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"# todo\">\n<p>作为助记符，表示将要完成的功能或任务，由 <code>IDE</code>  支持，比如在 <code>PyCharm</code>  中会高亮表示，并可快速查询<br>\n<img data-src=\"/images/python/1.3.3.png\" alt=\"\"></p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"# type\">\n<p>用于指定期望的数据类型<br>\n<img data-src=\"/images/python/1.3.4.jpg\" alt=\"\"><br>\n上图中为 <code>a</code>  指定的类型为 <code>dict</code> ，但被赋予数字 <code>5</code> ，因此 <code>IDE</code>  会提示该问题<br>\n但 <code>a</code>  可使用 <code>dict</code>  的相关方法和属性</p>\n</div>\n</div></details>\n<details class=\"info\"><summary>python生成随机数</summary><div>\n<p>（1） <code>python</code>  自带的 <code>random</code>  模块<br>\n <code>python</code>  标准库中的 <code>random</code>  函数，可以生成随机浮点数、整数、字符串，甚至帮助你随机选择列表序列中的一个元素，打乱一组数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">)</span> <span class=\"token comment\">#生成一个 n 到 m 之间的随机数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#生成一个 0 到 1 之间的浮点数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>random<span class=\"token punctuation\">.</span>uniform<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">)</span> <span class=\"token comment\">#生成一个 n 到 m 之间的浮点数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#从列表之间随机选取一个数</span></pre></td></tr></table></figure><p>（2） <code>numpy</code>  模块生成随机数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand（n）<span class=\"token comment\">#产生 n 维的 0-1 均匀分布的随机数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn（n）<span class=\"token comment\">#产生 n 维的标准正态分布的随机数</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token comment\">#产生 n--m 之间的 k 个整数</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>uniform<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token comment\">#产生 n--m 之间的 k 个小数</span></pre></td></tr></table></figure></div></details>\n<h1 id=\"二-特定功能函数\"><a class=\"markdownIt-Anchor\" href=\"#二-特定功能函数\">#</a> 二、特定功能函数</h1>\n<details class=\"success\"><summary>生成n个随机数，其和为固定值</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        a <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 生成 n-1 个随机节点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        list1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    list1<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 节点排序</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    list1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 设置第 n 个节点为 amount，即总金额</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    list2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            b <span class=\"token operator\">=</span> list1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 第一段长度为第 1 个节点 - 0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            b <span class=\"token operator\">=</span> list1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> list1<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 其余段为第 n 个节点 - 第 n-1 个节点</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        list2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> list2</pre></td></tr></table></figure></div></details>\n<h1 id=\"三-numpy\"><a class=\"markdownIt-Anchor\" href=\"#三-numpy\">#</a> 三、numpy</h1>\n<details class=\"primary\"><summary>np.array和np.asarray区别</summary><div>\n<p><code>np.array</code>  和 <code>np.asarray</code>  都可将结构数据转换为 <code>ndarray</code>  类型<br>\n但是主要区别就是当数据源是 <code>ndarray</code>  时：<br>\n <code>np.array</code>  占用新的内存，即<mark>转换后的变量与原始变量相互独立</mark><br>\n但 <code>np.asarray</code>  不会占用新的内存，即<mark>转换后的变量与原始变量无关</mark></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#example 1:  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>data1<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>arr2<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>arr3<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>data1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'data1:\\n'</span><span class=\"token punctuation\">,</span>data1  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'arr2:\\n'</span><span class=\"token punctuation\">,</span>arr2  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'arr3:\\n'</span><span class=\"token punctuation\">,</span>arr3</pre></td></tr></table></figure><p>输出结果为：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data1<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>arr2<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>arr3<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#example 2:  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>arr1<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>arr2<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>arr3<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>arr1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'arr1:\\n'</span><span class=\"token punctuation\">,</span>arr1  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'arr2:\\n'</span><span class=\"token punctuation\">,</span>arr2  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'arr3:\\n'</span><span class=\"token punctuation\">,</span>arr3</pre></td></tr></table></figure><p>输出结果为</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr1<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">2.</span>  <span class=\"token number\">2.</span>  <span class=\"token number\">2.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>arr2<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>arr3<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">2.</span>  <span class=\"token number\">2.</span>  <span class=\"token number\">2.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure></div></details>\n",
            "tags": [
                "python",
                "编程技巧"
            ]
        }
    ]
}