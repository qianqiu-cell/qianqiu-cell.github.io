{
    "version": "https://jsonfeed.org/version/1",
    "title": "Keep Moving • All posts by \"编程技巧\" tag",
    "description": "🌸学习笔记🌸",
    "home_page_url": "http://qianqiu-cell.github.io",
    "items": [
        {
            "id": "http://qianqiu-cell.github.io/2025/01/19/code/python/init_file/",
            "url": "http://qianqiu-cell.github.io/2025/01/19/code/python/init_file/",
            "title": "__init.py__文件的作用",
            "date_published": "2025-01-18T16:00:00.000Z",
            "content_html": "<p>  在 Python 中，<strong>__init__.py 文件用于将一个目录标记为 Python 的包</strong>。这个机制允许 Python 进行模块导入和组织代码的分层结构。尽管在 Python 3.3 及以上版本中，引入了隐式的命名空间包，这意味着在某些情况下即使没有__init__.py 文件，目录也可以被视为包，但__init__.py 文件仍然有其独特的作用和用途。</p>\n<p>  __init__.py 的主要作用和用途包括：</p>\n<ul>\n<li>\n<p><strong>将目录标记为 Python 包</strong>：这是__init__.py 最基本的作用，它使得 Python 解释器知道该目录及其包含的文件应该被视为一个包。</p>\n</li>\n<li>\n<p>初始化包：__init__.py 可以包含包级别的初始化代码。这意味着<strong>当包被导入时，__init__.py 中的代码将被执行</strong>。这对于设置包所需的全局状态或者执行仅需在包首次导入时运行的代码很有用。</p>\n</li>\n<li>\n<p>控制包的导入：<strong>通过在__init__.py 文件中导入子模块或包内其他模块，可以定制 <code>from package import *</code>  时哪些模块被导入</strong>。虽然这种做法不推荐（因为显式导入通常更清晰），但它可以用来简化客户端代码的导入语句。</p>\n</li>\n<li>\n<p>包的命名空间管理：__init__.py 文件可以用来组织包的命名空间。<strong>通过在这个文件中导入函数、类或其他模块，可以提供一个经过精心设计的对外接口，使得包的结构对用户更加透明</strong>。</p>\n</li>\n</ul>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/08/27/code/python/python_ipdb/",
            "url": "http://qianqiu-cell.github.io/2024/08/27/code/python/python_ipdb/",
            "title": "IPython Debugger (ipdb)",
            "date_published": "2024-08-26T16:00:00.000Z",
            "content_html": "<p>   <code>IPython Debugger</code> （简称 <code>ipdb</code> ）是一个强大的交互式调试工具</p>\n<h1 id=\"启动ipdb\"><a class=\"markdownIt-Anchor\" href=\"#启动ipdb\">#</a> 启动 ipdb</h1>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> ipdb<span class=\"token punctuation\">;</span> ipdb<span class=\"token punctuation\">.</span>set_trace<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> 常用命令</h1>\n<ul>\n<li><code>c</code> ：继续执行代码，直到遇到下一个断点或程序结束。</li>\n<li><code>n</code> ：单步执行下一行代码（不会进入函数内部）。</li>\n<li><code>s</code> ：单步进入下一行代码（如果有函数调用，则进入函数内部）。</li>\n<li><code>q</code> ：退出调试器并终止程序的执行。</li>\n<li><code>l</code> ：查看当前位置附近的代码。</li>\n<li><code>p</code> ：打印变量的值，例如 <code>p variable_name</code> 。</li>\n<li><code>h</code> ：查看帮助信息，例如 <code>h command_name</code> 。</li>\n<li><code>w</code> ：查看当前的调用栈。</li>\n<li><code>u</code> ：向上移动一层调用栈。</li>\n<li><code>d</code> ：向下移动一层调用栈。</li>\n</ul>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/03/19/code/python/python_Iterators_and_Generators/",
            "url": "http://qianqiu-cell.github.io/2024/03/19/code/python/python_Iterators_and_Generators/",
            "title": "Python迭代器和生成器",
            "date_published": "2024-03-18T16:00:00.000Z",
            "content_html": "<h1 id=\"一-python迭代器\"><a class=\"markdownIt-Anchor\" href=\"#一-python迭代器\">#</a> 一、Python 迭代器</h1>\n<p>  迭代器在 <code>Python</code>  中无处不在。它们在 <code>for</code>  循环，理解，生成器等中优雅地实现，但却隐藏在眼皮底下。</p>\n<p>   <code>Python</code>  中的 <code>Iterator</code>  只是一个可以迭代的对象。一个将返回数据的对象，一次返回一个元素。</p>\n<p>  从技术上讲， <code>Python</code>  迭代器对象必须实现两个特殊方法， <code>__iter__()</code>  和 <code>__next__()</code>  统称为迭代器协议。</p>\n<p>  如果我们可以从对象获得迭代器，则该对象称为可迭代。 <code>Python</code>  中的大多数内置容器（例如： <code>list</code> ， <code>tuple</code> ， <code>string</code>  等）都是可迭代的。</p>\n<p>   <code>iter()</code>  函数（也就是 <code>__iter__()</code>  方法）从它们返回一个迭代器。</p>\n<h2 id=\"11-通过python中的迭代器进行迭代\"><a class=\"markdownIt-Anchor\" href=\"#11-通过python中的迭代器进行迭代\">#</a> 1.1 通过 Python 中的迭代器进行迭代</h2>\n<p>  我们使用该 <code>next()</code>  函数手动遍历迭代器的所有项目。 当我们到达末尾并且没有更多数据要返回时，它将引发 <code>StopIteration</code> 。 以下是一个示例：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 定义一个列表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 使用 iter () 获得迭代器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>my_iter <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">## 使用 iter () 获得迭代器 </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#输出 4</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>my_iter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#输出 7</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>my_iter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">## next（obj）与 obj .__ next __() 相同</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#输出 0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_iter<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#输出 3</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_iter<span class=\"token punctuation\">.</span>__next__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">## 这将引起错误，没有项目剩下</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>my_iter<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"12-for循环实际上如何工作\"><a class=\"markdownIt-Anchor\" href=\"#12-for循环实际上如何工作\">#</a> 1.2 for 循环实际上如何工作？</h2>\n<p>  实际上，for 循环可以迭代任何可迭代的对象。让我们仔细看看如何 for 在 Python 中实际实现循环。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> element <span class=\"token keyword\">in</span> iterable<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\"># 对元素做点什么</span></pre></td></tr></table></figure><p>实际上的实现为：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 创建一个迭代器对象 iterable</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>iter_obj <span class=\"token operator\">=</span> <span class=\"token builtin\">iter</span><span class=\"token punctuation\">(</span>iterable<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 无限循环</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># 获取下一项</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        element <span class=\"token operator\">=</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>iter_obj<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># 对元素做点什么</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">except</span> StopIteration<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 如果引发 StopIteration，则从循环中断</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr></table></figure><p>  因此，在内部， <code>for</code>  循环通过在 <code>iterable</code>  上调用 <code>iter()</code>  创建一个迭代器对象 <code>iter_obj</code> 。</p>\n<p>  在循环内部，它调用 <code>next()</code>  来获取下一个元素，并使用这个值执行 <code>for</code>  循环的主体。当所有的项都用完后， <code>StopIteration</code>  被抛出，它在内部被捕获，循环结束。注意，任何其他类型的异常都会通过。</p>\n<h1 id=\"二-python生成器\"><a class=\"markdownIt-Anchor\" href=\"#二-python生成器\">#</a> 二、Python 生成器</h1>\n<p>  用 <code>Python</code>  构建迭代器有很多开销；我们必须使用 <code>__iter__()</code>  和 <code>__next__()</code>  方法实现一个类，跟踪内部状态，在没有要返回的值时触发 <code>StopIteration</code>  等等。这既冗长又违反直觉。生成器在这种情况下可以派上用场。</p>\n<p>   <code>Python</code>  生成器是<mark>创建迭代器的简单方法</mark>。我们上面提到的所有开销都由 <code>Python</code>  的生成器自动处理。简而言之，生成器是一个函数，它返回一个对象（迭代器），我们可以对其进行迭代（一次一个值）。</p>\n<h2 id=\"21-在python中创建生成器\"><a class=\"markdownIt-Anchor\" href=\"#21-在python中创建生成器\">#</a> 2.1 在 Python 中创建生成器</h2>\n<p>  在 Python 中创建生成器非常简单。 就像使用 <code>yield</code>  语句而不是 <code>return</code>  语句定义普通函数一样容易。如果一个函数包含至少一个 <code>yield</code>  语句 (它可能包含其他 <code>yield</code>  或 <code>return</code>  语句)，那么它就成为一个生成器函数。 <code>yield</code>  和 <code>return</code>  都将从函数返回一些值。不同之处在于，当 <code>return</code>  语句完全终止一个函数时， <code>yield</code>  语句会<mark>暂停该函数保存其所有状态，然后在后续调用时继续执行</mark>。</p>\n<p>  生成器函数与常规函数的不同之处：</p>\n<ul>\n<li>生成器函数包含一个或多个 <code>yield</code>  语句；</li>\n<li><mark>调用时，它返回一个对象（迭代器），但不会立即开始执行</mark>；</li>\n<li>像 <code>__iter__()</code>  和 <code>__next__()</code>  这样的方法会自动实现。因此，我们可以使用 <code>next()</code>  来遍历项目；</li>\n<li>一旦函数产生了结果，函数就会暂停，控制就会转移给调用者；</li>\n<li><mark>局部变量及其状态在连续调用之间被记住</mark>；</li>\n<li>最后，<mark>当函数终止时，在进一步调用时会自动引发 <code>StopIteration</code> </mark>。</li>\n</ul>\n<p>  这是一个示例，用于说明上述所有要点。我们有一个 <code>my_gen()</code>  由几个 <code>yield</code>  语句命名的生成器函数。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 一个简单的生成器函数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">my_gen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    n <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是第一次打印'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># 生成器函数包含 yield 语句</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">yield</span> n</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    n <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是第二次打印'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">yield</span> n</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    n <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'这是最后一次打印'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">yield</span> n</pre></td></tr></table></figure><p>  解释器中的交互式运行如下所示。在 <code>Python Shell</code>  中运行这些命令以查看输出。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># 它返回一个对象，但不立即开始执行.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> my_gen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># 我们可以使用 next () 遍历这些项.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>这是第一次打印</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># 一旦函数产生了结果，函数就会暂停，控制就会转移给调用者。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># 局部变量及其状态在连续调用之间被记住。</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>这是第二次打印</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>这是最后一次打印</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token comment\"># 最后，当函数终止时，在进一步调用时将自动引发 StopIteration。</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>StopIteration</pre></td></tr></table></figure><p>  在上面的示例中要注意的一件有趣的事情是，每次调用之间都会记住变量 <code>n</code>  的值。与普通函数不同，局部变量在函数产生时不会被破坏。此外，生成器对象只能迭代一次。要重新启动该过程，我们需要使用 <code>= my_gen()</code>  之类的东西来创建另一个生成器对象。</p>\n<h2 id=\"22-生成器与for循环一起使用\"><a class=\"markdownIt-Anchor\" href=\"#22-生成器与for循环一起使用\">#</a> 2.2 生成器与 for 循环一起使用</h2>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">rev_str</span><span class=\"token punctuation\">(</span>my_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>my_str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">yield</span> my_str<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># For 循环以反转字符串</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 输出:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># o</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># l</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># l</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># e</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># h</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> rev_str<span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"23-python生成器表达式\"><a class=\"markdownIt-Anchor\" href=\"#23-python生成器表达式\">#</a> 2.3 Python 生成器表达式</h2>\n<p>  使用生成器表达式可以轻松地动态创建简单的生成器。它使建造生成器变得容易。与 <code>lambda</code>  函数创建匿名函数相同，生成器表达式创建匿名生成器函数。生成器表达式的语法类似于 <code>Python</code>  中的<mark>列表理解语法</mark>。但是将<mark>方括号替换为圆括号</mark>。列表理解与生成器表达式之间的主要区别在于，虽然<mark>列表理解生成整个列表，但生成器表达式一次生成一个项目</mark>。他们有点懒，只在需要时才生成项目。由于这个原因，<mark>生成器表达式比等价的列表理解的内存效率要高得多</mark>。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 初始化列表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>my_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 使用列表理解对每个项目进行平方</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 输出: [1, 9, 36, 100]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> my_list<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 同样的事情可以使用生成器表达式来完成</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 生成器表达式没有立即产生所需的结果。相反，它返回了一个生成器对象</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 输出: &lt;generator object &lt;genexpr> at 0x0000000002EBDAF8></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">(</span>x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> my_list<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  生成器表达式可以在函数内部使用。以这种方式使用时，可以删除圆括号。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> my_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> my_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">146</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> my_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">100</span></pre></td></tr></table></figure><h2 id=\"23-python生成器优点\"><a class=\"markdownIt-Anchor\" href=\"#23-python生成器优点\">#</a> 2.3 Python 生成器优点</h2>\n<ul>\n<li>易于实施，与它们的迭代器类对应项相比，生成器可以以一种清晰而简洁的方式实现。</li>\n<li>节省内存，一个普通的返回序列的函数会在返回结果之前在内存中创建整个序列。如果序列中的项目数量很大，会影响效率。而这种序列的生成器实现对内存友好，因此是首选的，因为它一次只能生成一项。</li>\n<li>表示无限流，生成器是表示无限数据流的绝佳媒介。无限流无法存储在内存中，并且由于生成器一次只生成一项，因此它可以表示无限数据流。（至少在理论上）</li>\n</ul>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/03/19/code/python/python_file/",
            "url": "http://qianqiu-cell.github.io/2024/03/19/code/python/python_file/",
            "title": "Python文件操作",
            "date_published": "2024-03-18T16:00:00.000Z",
            "content_html": "<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2Fpbmlhb2pjLmNvbS9weXRob24vcHl0aG9uLWZpbGUtb3BlcmF0aW9uLmh0bWw=\">https://www.cainiaojc.com/python/python-file-operation.html</span></p>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/03/19/code/python/python_lambda/",
            "url": "http://qianqiu-cell.github.io/2024/03/19/code/python/python_lambda/",
            "title": "python匿名函数",
            "date_published": "2024-03-18T16:00:00.000Z",
            "content_html": "<h1 id=\"一-匿名函数定义\"><a class=\"markdownIt-Anchor\" href=\"#一-匿名函数定义\">#</a> 一、匿名函数定义</h1>\n<p>  在 <code>Python</code>  中，匿名函数是<mark>没有定义名称的函数</mark>。虽然 <code>def</code>  在 <code>Python</code>  中使用关键字定义了普通函数，但使用关键字定义了匿名函数 <code>lambda</code> 。因此，匿名函数也称为 <code>lambda</code>  函数。</p>\n<h1 id=\"二-lambda函数\"><a class=\"markdownIt-Anchor\" href=\"#二-lambda函数\">#</a> 二、lambda 函数</h1>\n<p>   <code>python</code>  中 <code>Lambda</code>  函数的语法：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">lambda</span> arguments<span class=\"token punctuation\">:</span> expression</pre></td></tr></table></figure><p>   <code>Lambda</code>  函数可以具有任意数量的参数，但只能有一个表达式。表达式被求值并返回。 <code>Lambda</code>  函数可在需要函数对象的任何地方使用。</p>\n<h1 id=\"三-示例\"><a class=\"markdownIt-Anchor\" href=\"#三-示例\">#</a> 三、示例</h1>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 等同于：</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># def double(x):</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#    return x * 2</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>double <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x <span class=\"token operator\">*</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>double<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/03/19/code/python/python_private_property/",
            "url": "http://qianqiu-cell.github.io/2024/03/19/code/python/python_private_property/",
            "title": "Python——类的私有属性、公有属性、私有方法、公有方法",
            "date_published": "2024-03-18T16:00:00.000Z",
            "content_html": "<p>   <code>Python</code>  默认的成员函数和成员变量都是公开的， <code>Python</code>  私有属性和方法没有类似别的语言的 <code>public</code> 、 <code>private</code>  等关键词来修饰。 在 <code>python</code>  中定义私有变量<mark>只需要在变量名或函数名前加上 <code>__</code> 两个下划线</mark>，那么这个函数或变量就会为私有的了。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#问女性的姓名、工作是没有问题的，但是问女性的年龄、体重是不礼貌的，所以我们把女性年龄定义为私有属性</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#定义显示女性的姓名、工作为公有方法，显示女性年龄、体重为私有方法</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#类的定义部分</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Woman</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    name <span class=\"token operator\">=</span> <span class=\"token string\">\"Juckes\"</span>  <span class=\"token comment\">#类的公有属性</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    job <span class=\"token operator\">=</span> <span class=\"token string\">\"Teacher\"</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    __ages <span class=\"token operator\">=</span> <span class=\"token number\">30</span>      <span class=\"token comment\">#类的私有属性</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    __weight <span class=\"token operator\">=</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">disp_nj_info</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#类的（公有）方法</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name:&#123;&#125;, Job:&#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>job<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#类的内部调用公有属性</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__disp_aw_info</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#类的私有方法</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Age:&#123;&#125;, Weight:&#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>__ages<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>__weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#类的内部调用私有属性</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">dis_all_info</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        self<span class=\"token punctuation\">.</span>disp_nj_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#类的内部调用公有方法</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        self<span class=\"token punctuation\">.</span>__disp_aw_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#类的内部调用私有方法</span></pre></td></tr></table></figure><p>（1）类外使用类的公有属性，OK</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 主程序部分</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>womanA <span class=\"token operator\">=</span> Woman<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>womanA<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> womanA<span class=\"token punctuation\">.</span>job<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 运行结果：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># Juckes Teacher</span></pre></td></tr></table></figure><p>（2）类外使用类的私有属性， Error</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#主程序部分</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>womanA <span class=\"token operator\">=</span> Woman<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>womanA<span class=\"token punctuation\">.</span>__ages<span class=\"token punctuation\">,</span> womanA<span class=\"token punctuation\">.</span>__weight<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 运行结果：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># Traceback (most recent call last):</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#   File \"D:/untitled2/timer_test.py\", line 60, in &lt;module></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#     print(womanA.__ages, womanA.__weight)</span></pre></td></tr></table></figure><p>（3）类外使用公用方法，OK</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 主程序部分</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>womanA <span class=\"token operator\">=</span> Woman<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>womanA<span class=\"token punctuation\">.</span>disp_nj_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 运行结果：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># Name:Juckes, Job:Teacher</span></pre></td></tr></table></figure><p>（4）类外使用类的私有方法， Error</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 主程序部分</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>womanA <span class=\"token operator\">=</span> Woman<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>womanA<span class=\"token punctuation\">.</span>__disp_aw_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 运行结果：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># Traceback (most recent call last):</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#   File \"D:/untitled2/timer_test.py\", line 60, in &lt;module></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#     womanA.__disp_aw_info()</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># AttributeError: 'Woman' object has no attribute '__disp_aw_info'</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/03/18/code/python/python_decorators/",
            "url": "http://qianqiu-cell.github.io/2024/03/18/code/python/python_decorators/",
            "title": "Python函数装饰器",
            "date_published": "2024-03-17T16:00:00.000Z",
            "content_html": "<h1 id=\"一-闭包\"><a class=\"markdownIt-Anchor\" href=\"#一-闭包\">#</a> 一、闭包</h1>\n<p>  <mark>闭包</mark>是指在外部函数中再嵌套一个内部函数，并且内部函数引用外部函数的变量。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">outer</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">inner</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> inner</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>outer<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">11</span></pre></td></tr></table></figure><p>  如代码所示，在 <code>outer</code>  函数内，又定义了一个 <code>inner</code>  函数，并且 <code>inner</code>  函数又引用了外部函数 <code>outer</code>  的变量 <code>x</code> ，这就是一个闭包了。在输出时， <code>outer(6)(5)</code> , 第一个括号传进去的值返回 <code>inner</code>  函数，其实就是返回 <code>6 + y</code> ，所以再传第二个参数进去，就可以得到返回值， <code>6 + 5</code> 。</p>\n<h1 id=\"二-装饰器\"><a class=\"markdownIt-Anchor\" href=\"#二-装饰器\">#</a> 二、装饰器</h1>\n<p>  装饰器是闭包的一种应用。 <code>python</code>  装饰器就是用于拓展原来函数功能的一种函数，这个函数的特殊之处在于它的返回值也是一个函数，使用 <code>python</code>  装饰器的好处就是<mark>在不用更改原函数的代码前提下给函数增加新的功能</mark>。使用时，再需要的函数前加上 <code>@demo</code>  即可。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">func_wrapper</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        time_start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        result <span class=\"token operator\">=</span> func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        time_end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        time_spend <span class=\"token operator\">=</span> time_end <span class=\"token operator\">-</span> time_start</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n&#123;0&#125; cost time &#123;1&#125; s\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">,</span> time_spend<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> func_wrapper</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token decorator annotation punctuation\">@timer</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">example</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 相当于</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># example = timer(example)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># example()</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>example<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>hello world!</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>example cost time <span class=\"token number\">0.0</span> s</pre></td></tr></table></figure><h1 id=\"三-装饰器带参数\"><a class=\"markdownIt-Anchor\" href=\"#三-装饰器带参数\">#</a> 三、装饰器带参数</h1>\n<p>  现在如果有多个函数都可以加上  <code>@timer</code>  来看函数的执行时间了，如果想对其中部分函数除了看函数的执行时间外，还想执行的时候写入日志。这时候就需要给装饰器函数入参了。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">logger</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">func_wrapper</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            time_start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            result <span class=\"token operator\">=</span> func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            time_end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            time_spend <span class=\"token operator\">=</span> time_end <span class=\"token operator\">-</span> time_start</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&#123;0&#125; cost time &#123;1&#125; s'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">,</span> time_spend<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> flag<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'写入日志'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> func_wrapper</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> timer</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token decorator annotation punctuation\">@logger</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">example1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token decorator annotation punctuation\">@logger</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">example2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>example1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'**********'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>example2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>hello world!</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>example1 cost time <span class=\"token number\">0.0</span> s</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>写入日志</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token operator\">**</span><span class=\"token operator\">**</span><span class=\"token operator\">**</span><span class=\"token operator\">**</span><span class=\"token operator\">**</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>hello world!</pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>example2 cost time <span class=\"token number\">0.0</span> s</pre></td></tr></table></figure><h1 id=\"四-类装饰器\"><a class=\"markdownIt-Anchor\" href=\"#四-类装饰器\">#</a> 四、类装饰器</h1>\n<p>  装饰器也不一定只能用函数来写，也可以使用类装饰器，用法与函数装饰器并没有太大区别，实质是使用了类方法中的 <code>call</code>  魔法方法来实现类的直接调用。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">logging</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>func <span class=\"token operator\">=</span> func</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__call__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[DEBUG]: enter &#123;&#125;()\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>__name__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token decorator annotation punctuation\">@logging</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>hello<span class=\"token punctuation\">(</span><span class=\"token string\">\"hello,\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"good\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"morning\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span>DEBUG<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> enter hello<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span>hello<span class=\"token punctuation\">,</span> good morning</pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/03/03/code/python/python_pytorch_install/",
            "url": "http://qianqiu-cell.github.io/2024/03/03/code/python/python_pytorch_install/",
            "title": "Pytorch安装",
            "date_published": "2024-03-02T16:00:00.000Z",
            "content_html": "<p>  直接使用网站的命令，并在后面加清华镜像源会导致下载的是 <code>cpu</code>  版本，<br>\n  正确的安装方法是进入官网安装命令后的网址，下载所需的 <code>whl</code> 。目前下载的版本为：</p>\n<ul>\n<li><code>torch-1.13.1+cu116-cp39-cp39-win_amd64.whl</code></li>\n<li><code>torchaudio-0.13.1+cu116-cp39-cp39-win_amd64.whl</code></li>\n<li><code>torchvision-0.14.1+cu116-cp39-cp39-win_amd64.whl</code> <br>\n  之后再 <code>cmd</code>  命令行窗口运行 <code>pip install xxx</code> （目录需要转移到上述三个文件所在的目录）</li>\n</ul>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/02/20/code/python/python_pytorch_nn/",
            "url": "http://qianqiu-cell.github.io/2024/02/20/code/python/python_pytorch_nn/",
            "title": "Pytorch神经网络的搭建",
            "date_published": "2024-02-19T16:00:00.000Z",
            "content_html": "<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWhFNDExdDdSTi8/c3BtX2lkX2Zyb209MzMzLjMzNy5zZWFyY2gtY2FyZC5hbGwuY2xpY2smYW1wO3ZkX3NvdXJjZT1lMDExNzJlYTI5MmMxYzYwNWIzNDYxMDFkNzAwNmM2MQ==\">https://www.bilibili.com/video/BV1hE411t7RN/?spm_id_from=333.337.search-card.all.click&amp;vd_source=e01172ea292c1c605b346101d7006c61</span></p>\n<h1 id=\"一-直接搭建\"><a class=\"markdownIt-Anchor\" href=\"#一-直接搭建\">#</a> 一、直接搭建</h1>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> torch <span class=\"token keyword\">import</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">import</span> Conv2d<span class=\"token punctuation\">,</span> MaxPool2d<span class=\"token punctuation\">,</span> Flatten<span class=\"token punctuation\">,</span> Linear</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">SelfNet</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>SelfNet<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv1 <span class=\"token operator\">=</span> Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>maxpool1 <span class=\"token operator\">=</span> MaxPool2d<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv2 <span class=\"token operator\">=</span> Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>maxpool2 <span class=\"token operator\">=</span> MaxPool2d<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        self<span class=\"token punctuation\">.</span>conv3 <span class=\"token operator\">=</span> Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        self<span class=\"token punctuation\">.</span>maxpool3 <span class=\"token operator\">=</span> MaxPool2d<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        self<span class=\"token punctuation\">.</span>flatten <span class=\"token operator\">=</span> Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        self<span class=\"token punctuation\">.</span>linear1 <span class=\"token operator\">=</span> Linear<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        self<span class=\"token punctuation\">.</span>linear2 <span class=\"token operator\">=</span> Linear<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conv1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>maxpool1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conv2<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>maxpool2<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>conv3<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>maxpool3<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>linear1<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>linear2<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>selfNet <span class=\"token operator\">=</span> SelfNet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>selfNet<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>output <span class=\"token operator\">=</span> selfNet<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"二-使用直接搭建\"><a class=\"markdownIt-Anchor\" href=\"#二-使用直接搭建\">#</a> 二、使用直接搭建</h1>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> torch</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> torch <span class=\"token keyword\">import</span> nn</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> torch<span class=\"token punctuation\">.</span>nn <span class=\"token keyword\">import</span> Conv2d<span class=\"token punctuation\">,</span> MaxPool2d<span class=\"token punctuation\">,</span> Flatten<span class=\"token punctuation\">,</span> Linear</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">SelfNet</span><span class=\"token punctuation\">(</span>nn<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>SelfNet<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> nn<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            MaxPool2d<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            MaxPool2d<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            Conv2d<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> padding<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            MaxPool2d<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            Linear<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            Linear<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> x</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>selfNet <span class=\"token operator\">=</span> SelfNet<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>selfNet<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>output <span class=\"token operator\">=</span> selfNet<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/02/20/code/python/python_pytorch_tensorboard/",
            "url": "http://qianqiu-cell.github.io/2024/02/20/code/python/python_pytorch_tensorboard/",
            "title": "Pytorch下的Tensorboard的使用",
            "date_published": "2024-02-19T16:00:00.000Z",
            "content_html": "<h1 id=\"一-tensorboard的使用逻辑\"><a class=\"markdownIt-Anchor\" href=\"#一-tensorboard的使用逻辑\">#</a> 一、Tensorboard 的使用逻辑</h1>\n<p>   <code>Tensorboard</code>  的工作流程简单来说是：<br>\n1、将代码运行过程中所关心的数据保存在一个文件夹中（由代码中的 <code>writer</code>  完成）<br>\n2、再读取这个文件夹中的数据，用浏览器显示出来（在命令行中运行 <code>tensorboard</code>  完成）</p>\n<h1 id=\"二-代码中要做的事\"><a class=\"markdownIt-Anchor\" href=\"#二-代码中要做的事\">#</a> 二、代码中要做的事</h1>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 1、首先导入 tensorboard，这里的 SummaryWriter 的作用就是将数据以特定的格式存储到第一步提到的文件夹中。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> torch<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>tensorboard <span class=\"token keyword\">import</span> SummaryWriter</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 2、实例化，传入的参数就是指向文件夹的路径，之后我们使用这个 writer 对象 “拿出来” 的任何数据都保存在这个路径之下。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>writer <span class=\"token operator\">=</span> SummaryWriter<span class=\"token punctuation\">(</span><span class=\"token string\">'logs'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 3、接下来要向这个文件夹里写入数据，可以写入多种数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 3.1、比如写入数值可以调用 writer.add_scalar (tag, scalar_value, global_step=None, walltime=None)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># ----- 其中 tag 指定可视化时这个变量的名字，scalar_value 是你要存的值，global_step 可以理解为 x 轴坐标。</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># ----- 如下的例子会根据 [i,2i](i=0,...99) 生成一个 y=2x 的折线图</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    writer<span class=\"token punctuation\">.</span>add_scalar<span class=\"token punctuation\">(</span><span class=\"token string\">'y=2x'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 3.2、除了数值，还可以写入模型训练过程中的图像。</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># -----writer.add_image(tag, img_tensor, global_step=None, walltime=None, dataformats='CHW')</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># -----writer.add_images(tag, img_tensor, global_step=None, walltime=None, dataformats='NCHW')</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>image_path <span class=\"token operator\">=</span> <span class=\"token string\">\"hymenoptera_data/train/ants/5650366_e22b7e1065.jpg\"</span>  <span class=\"token comment\">#图片路径</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>image_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>writer<span class=\"token punctuation\">.</span>add_image<span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> dataformats<span class=\"token operator\">=</span><span class=\"token string\">'HWC'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"三-可视化\"><a class=\"markdownIt-Anchor\" href=\"#三-可视化\">#</a> 三、可视化</h1>\n<p>  通过上一节的步骤已经将关心的数据拿出来了，接下来我们只需要在命令行运行：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tensorboard <span class=\"token operator\">-</span><span class=\"token operator\">-</span>logdir<span class=\"token operator\">=</span>logs <span class=\"token comment\"># （命令行运行）logs 是第二步的路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># tensorboard --logdir=logs --port=6007 # 默认端口号是 6006，可以手动更改为 6007 或者其他</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/02/20/code/python/python_pytorch_transforms/",
            "url": "http://qianqiu-cell.github.io/2024/02/20/code/python/python_pytorch_transforms/",
            "title": "Pytorch数据预处理：transforms的使用",
            "date_published": "2024-02-19T16:00:00.000Z",
            "content_html": "<p>  在 <code>PyTorch</code>  中， <code>transforms</code>  是一种用于数据转换和增强的工具，特别是在构建神经网络训练数据集时非常有用。 <code>transforms</code>  模块提供了一系列用于对图像、文本和其他数据类型进行预处理和转换的函数。 <code>transforms</code>  工具箱提供了很多可以用于数据预处理的工具，可以总结为四大类：</p>\n<h1 id=\"一-裁剪crop\"><a class=\"markdownIt-Anchor\" href=\"#一-裁剪crop\">#</a> 一、裁剪 ——Crop</h1>\n<ul>\n<li>中心裁剪： <code>transforms.CenterCrop</code></li>\n<li>随机裁剪： <code>transforms.RandomCrop</code></li>\n<li>随机长宽比裁剪： <code>transforms.RandomResizedCrop</code></li>\n<li>上下左右中心裁剪： <code>transforms.FiveCrop</code></li>\n<li>上下左右中心裁剪后翻转， <code>transforms.TenCrop</code></li>\n</ul>\n<h1 id=\"二-翻转和旋转flip-and-rotation\"><a class=\"markdownIt-Anchor\" href=\"#二-翻转和旋转flip-and-rotation\">#</a> 二、翻转和旋转 ——Flip and Rotation</h1>\n<ul>\n<li>依概率 p 水平翻转： <code>transforms.RandomHorizontalFlip(p=0.5)</code></li>\n<li>依概率 p 垂直翻转： <code>transforms.RandomVerticalFlip(p=0.5)</code></li>\n<li>随机旋转： <code>transforms.RandomRotation</code></li>\n</ul>\n<h1 id=\"三-图像变换\"><a class=\"markdownIt-Anchor\" href=\"#三-图像变换\">#</a> 三、图像变换</h1>\n<ul>\n<li><mark>resize：transforms.Resize</mark></li>\n<li><mark>标准化：transforms.Normalize</mark></li>\n<li><mark>转为 tensor，并归一化至 [0-1]：transforms.ToTensor</mark></li>\n<li><mark>转灰度图：transforms.Grayscale</mark></li>\n<li>填充： <code>transforms.Pad</code></li>\n<li>修改亮度、对比度和饱和度： <code>transforms.ColorJitter</code></li>\n<li>线性变换： <code>transforms.LinearTransformation()</code></li>\n<li>仿射变换： <code>transforms.RandomAffine</code></li>\n<li>依概率 p 转为灰度图： <code>transforms.RandomGrayscale</code></li>\n<li>将数据转换为 PILImage： <code>transforms.ToPILImage</code></li>\n<li><code>transforms.Lambda</code> ：Apply a user-defined lambda as a transform.</li>\n</ul>\n<h1 id=\"四-对transform操作使数据增强更灵活\"><a class=\"markdownIt-Anchor\" href=\"#四-对transform操作使数据增强更灵活\">#</a> 四、对 transform 操作，使数据增强更灵活</h1>\n<ul>\n<li><mark>transforms.Compose：将 transforms 组合在一起</mark></li>\n<li><code>transforms.RandomChoice(transforms)</code> ， 从给定的一系列 <code>transforms</code>  中选一个进行操作</li>\n<li><code>transforms.RandomApply(transforms, p=0.5)</code> ，给一个 <code>transform</code>  加上概率，依概率进行操作</li>\n<li><code>transforms.RandomOrder</code> ，将 transforms 中的操作随机打乱</li>\n</ul>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2024/02/19/code/python/python_class_special_methods/",
            "url": "http://qianqiu-cell.github.io/2024/02/19/code/python/python_class_special_methods/",
            "title": "Python类的特殊方法",
            "date_published": "2024-02-18T16:00:00.000Z",
            "content_html": "<p>   <code>Python</code>  中的特殊方法是一类以双下划线（ <code>__</code> ）开头和结尾的方法，也称为魔术方法。这些方法在 <code>Python</code>  中具有特殊的用途和含义，可以让我们自定义类的行为和操作。</p>\n<h1 id=\"常见特殊方法汇总\"><a class=\"markdownIt-Anchor\" href=\"#常见特殊方法汇总\">#</a> 常见特殊方法汇总</h1>\n<ul>\n<li><strong>init</strong> (self [, …]): 构造函数，在对象创建时被调用。</li>\n<li><strong>del</strong> (self): 析构函数，在对象销毁时被调用。</li>\n<li><strong>repr</strong> (self): 用于计算对象的 “官方” 字符串表示形式。</li>\n<li><strong>str</strong> (self): 用于计算对象的 “非正式” 或 “用户友好” 字符串表示形式。</li>\n<li><strong>bytes</strong> (self): 用于计算对象的二进制形式表示。</li>\n<li><strong>format</strong> (self, format_spec): 用于格式化对象的字符串表示形式。</li>\n<li><strong>lt</strong> (self, other): 用于 “小于” 比较。</li>\n<li><strong>le</strong> (self, other): 用于 “小于等于” 比较。</li>\n<li><strong>eq</strong> (self, other): 用于 “等于” 比较。</li>\n<li><strong>ne</strong> (self, other): 用于 “不等于” 比较。</li>\n<li><strong>gt</strong> (self, other): 用于 “大于” 比较。</li>\n<li><strong>ge</strong> (self, other): 用于 “大于等于” 比较。</li>\n<li><strong>hash</strong> (self): 用于计算对象的哈希值。</li>\n<li><strong>bool</strong> (self): 用于计算对象的布尔值。</li>\n<li><strong>len</strong> (self): 用于计算对象的长度。</li>\n<li><strong>getitem</strong> (self, key): 用于实现索引操作。</li>\n<li><strong>setitem</strong> (self, key, value): 用于实现赋值操作。</li>\n<li><strong>delitem</strong> (self, key): 用于实现删除操作。</li>\n<li><strong>iter</strong> (self): 用于迭代对象。</li>\n<li><strong>reversed</strong> (self): 用于反转对象。</li>\n<li><strong>contains</strong> (self, item): 用于判断对象是否包含一个元素。</li>\n<li><strong>call</strong> (self [, args…]): 用于使一个对象变成可调用的。</li>\n<li><strong>enter</strong> (self): 用于进入上下文管理器。</li>\n<li><strong>exit</strong> (self, exc_type, exc_value, traceback): 用于离开上下文管理器。</li>\n<li><strong>await</strong> (self): 用于支持异步协议。</li>\n<li><strong>aiter</strong> (self): 用于异步迭代。</li>\n<li><strong>anext</strong> (self): 用于异步迭代器。</li>\n<li><strong>get</strong> (self, instance, owner): 用于实现描述符。</li>\n<li><strong>set</strong> (self, instance, value): 用于实现描述符。</li>\n<li><strong>delete</strong> (self, instance): 用于实现描述符。</li>\n</ul>\n<h1 id=\"initself-方法\"><a class=\"markdownIt-Anchor\" href=\"#initself-方法\">#</a> <strong>init</strong> (self, …) 方法</h1>\n<p>   <code>__init__</code> 是 <code>Python</code>  中最常用的特殊方法之一，也被称为构造函数。当我们创建一个类的实例时， <code>__init__</code> 方法会被自动调用，用于初始化对象的属性。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        self<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>person <span class=\"token operator\">=</span> Person<span class=\"token punctuation\">(</span><span class=\"token string\">'Tom'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  在这个例子中， <code>__init__</code> 方法的作用是将 <code>name</code>  和 <code>age</code>  属性初始化为传入的参数。</p>\n<h1 id=\"delself方法\"><a class=\"markdownIt-Anchor\" href=\"#delself方法\">#</a> <strong>del</strong> (self) 方法</h1>\n<p>   <code>__del__</code> 方法用于定义对象的删除操作，在对象被删除时自动调用。 <code>Python</code>  自带自动垃圾回收机制，一般情况下不需要手动调用该方法。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__del__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Person object deleted\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  在这个例子中， <code>__del__</code> 方法在对象被删除时打印一条消息。</p>\n<h1 id=\"getitemself-index方法\"><a class=\"markdownIt-Anchor\" href=\"#getitemself-index方法\">#</a> <strong>getitem</strong> (self, index) 方法</h1>\n<p>  该方法在类中实现后，对象就可以像使用列表或字典一样<mark>使用下标或者键获取其中的元素</mark>了，例如：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>my_obj <span class=\"token operator\">=</span> MyClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_obj<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_obj<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 4</span></pre></td></tr></table></figure><h1 id=\"setitemself-index-value方法\"><a class=\"markdownIt-Anchor\" href=\"#setitemself-index-value方法\">#</a> <strong>setitem</strong> (self, index, value) 方法</h1>\n<p>  该方法在类中实现后，对象就可以像使用列表或字典一样使用下标或者键设置其中的元素了，例如：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__setitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        self<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>my_obj <span class=\"token operator\">=</span> MyClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>my_obj<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_obj<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 [1, 2, 6, 4, 5]</span></pre></td></tr></table></figure><h1 id=\"delitemself-index-方法\"><a class=\"markdownIt-Anchor\" href=\"#delitemself-index-方法\">#</a> <strong>delitem</strong> (self, index) 方法</h1>\n<p>   <code>__delitem__()</code>  方法用于从对象中删除一个索引值。当你从对象中删除一个索引值时， <code>Python</code>  就会尝试调用该方法。你可以通过 <code>key</code>  参数来删除索引的值。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyList</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__delitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">del</span> self<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>my_list <span class=\"token operator\">=</span> MyList<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">del</span> my_list<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 输出 [1, 2, 4, 5]</span></pre></td></tr></table></figure><h1 id=\"lenself方法\"><a class=\"markdownIt-Anchor\" href=\"#lenself方法\">#</a> <strong>len</strong> (self) 方法</h1>\n<p>  该方法在类中实现后，对象就可以像使用 <code>len()</code>  函数一样使用 <code>len()</code>  获取其长度了，例如：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>my_obj <span class=\"token operator\">=</span> MyClass<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>my_obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 5</span></pre></td></tr></table></figure><h1 id=\"strself方法\"><a class=\"markdownIt-Anchor\" href=\"#strself方法\">#</a> <strong>str</strong> (self) 方法</h1>\n<p>  该方法在类中实现后，可以通过 <code>str()</code>  函数或者 <code>print()</code>  函数输出对象时，自定义输出的字符串表示形式，例如：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"My name is </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>my_obj <span class=\"token operator\">=</span> MyClass<span class=\"token punctuation\">(</span><span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>my_obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 \"My name is Tom\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_obj<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 \"My name is Tom\"</span></pre></td></tr></table></figure><h1 id=\"reprself方法\"><a class=\"markdownIt-Anchor\" href=\"#reprself方法\">#</a> <strong>repr</strong> (self) 方法</h1>\n<p>  该方法与 <code>__str__(self)</code>  类似，不同的是，它在对象被打印时，如果没有定义 <code>__str__(self)</code>  方法，或者使用 <code>repr()</code>  函数调用对象时，就会输出该方法返回的字符串表示形式，例如：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"MyClass(</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">)\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>my_obj <span class=\"token operator\">=</span> MyClass<span class=\"token punctuation\">(</span><span class=\"token string\">\"Tom\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">repr</span><span class=\"token punctuation\">(</span>my_obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 \"MyClass (Tom)\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>my_obj<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 输出 \"MyClass (Tom)\"</span></pre></td></tr></table></figure><h1 id=\"__call__方法\"><a class=\"markdownIt-Anchor\" href=\"#__call__方法\">#</a> __call__方法</h1>\n<p>   <code>__call__</code> 方法用于将对象当作函数调用。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Adder</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__call__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b</pre></td></tr></table></figure><p>  在这个例子中， <code>Adder</code>  对象可以像函数一样调用，返回两个数的和：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> adder <span class=\"token operator\">=</span> Adder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">>></span><span class=\"token operator\">></span> adder<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">3</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/11/06/code/leetcode/1000%E6%9C%AC%E5%BC%80%E6%BA%90%E7%94%B5%E5%AD%90%E4%B9%A6/",
            "url": "http://qianqiu-cell.github.io/2023/11/06/code/leetcode/1000%E6%9C%AC%E5%BC%80%E6%BA%90%E7%94%B5%E5%AD%90%E4%B9%A6/",
            "title": "1000本开源电子书",
            "date_published": "2023-11-05T16:00:00.000Z",
            "content_html": "<blockquote>\n<p>Free Ebook Foundation 维护了一个项目，包含了超过 10000 本免费的编程电子书，而其中中文书籍约 800 本</p>\n</blockquote>\n<p>1000 本完全可以<strong>作为小图书馆</strong>查找使用，给这个仓库点个  <code>star</code>  防止下次想看却找不到。</p>\n<h2 id=\"电子书目录\"><a class=\"markdownIt-Anchor\" href=\"#电子书目录\">#</a> 电子书目录</h2>\n<h3 id=\"语言无关\"><a class=\"markdownIt-Anchor\" href=\"#语言无关\">#</a> 语言无关</h3>\n<p>就是不限定具体编程语言，程序员软件开发都会用到通用的知识，这部分包括：IDE、Web、操作系统、设计模式、编译原理、数据库、大数据… 这些都是通识性的知识，程序员必修课，不管你用什么语言都需要学习和了解。</p>\n<p><strong>语言无关</strong></p>\n<p>众所周知现在编程世界里各种语言百花齐放，从列出来的目录也能看出，C\\C++\\Java\\Python\\PHP… 语言的种类那是非常之多，不管你是用的那种语言，在这都能找到相关的电子书学习资源。</p>\n<ul>\n<li><a href=\"#%E6%8E%A8%E8%8D%90%E4%B8%8B%E8%BD%BD\">推荐下载</a></li>\n<li><a href=\"#%E7%94%B5%E5%AD%90%E4%B9%A6%E7%9B%AE%E5%BD%95\">电子书目录</a>\n<ul>\n<li><a href=\"#%E8%AF%AD%E8%A8%80%E6%97%A0%E5%85%B3\">语言无关</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%AF%AD%E8%A8%80%E6%97%A0%E5%85%B3-1\">语言无关</a>\n<ul>\n<li><a href=\"#ide\">IDE</a></li>\n<li><a href=\"#web\">Web</a></li>\n<li><a href=\"#web%E6%9C%8D%E5%8A%A1%E5%99%A8\">WEB 服务器</a></li>\n<li><a href=\"#%E5%85%B6%E5%AE%83\">其它</a></li>\n<li><a href=\"#%E5%87%BD%E6%95%B0%E5%BC%8F%E6%A6%82%E5%BF%B5\">函数式概念</a></li>\n<li><a href=\"#%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F\">分布式系统</a></li>\n<li><a href=\"#%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2\">在线教育</a></li>\n<li><a href=\"#%E5%A4%A7%E6%95%B0%E6%8D%AE\">大数据</a></li>\n<li><a href=\"#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F\">操作系统</a></li>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93\">数据库</a></li>\n<li><a href=\"#%E6%99%BA%E8%83%BD%E7%B3%BB%E7%BB%9F\">智能系统</a></li>\n<li><a href=\"#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\">正则表达式</a></li>\n<li><a href=\"#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6\">版本控制</a></li>\n<li><a href=\"#%E7%A8%8B%E5%BA%8F%E5%91%98%E6%9D%82%E8%B0%88\">程序员杂谈</a></li>\n<li><a href=\"#%E7%AE%A1%E7%90%86%E5%92%8C%E7%9B%91%E6%8E%A7\">管理和监控</a></li>\n<li><a href=\"#%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF\">编程艺术</a></li>\n<li><a href=\"#%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86\">编译原理</a></li>\n<li><a href=\"#%E7%BC%96%E8%BE%91%E5%99%A8\">编辑器</a></li>\n<li><a href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6\">计算机图形学</a></li>\n<li><a href=\"#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F\">设计模式</a></li>\n<li><a href=\"#%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95\">软件开发方法</a></li>\n<li><a href=\"#%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3\">项目相关</a></li>\n</ul>\n</li>\n<li><a href=\"#%E8%AF%AD%E8%A8%80%E7%9B%B8%E5%85%B3\">语言相关</a>\n<ul>\n<li><a href=\"#android\">Android</a></li>\n<li><a href=\"#awk\">AWK</a></li>\n<li><a href=\"#c\">C</a></li>\n<li><a href=\"#c-sharp\">C Sharp</a></li>\n<li><a href=\"#c-1\">C++</a></li>\n<li><a href=\"#coffeescript\">CoffeeScript</a></li>\n<li><a href=\"#dart\">Dart</a></li>\n<li><a href=\"#elasticsearch\">Elasticsearch</a></li>\n<li><a href=\"#elixir\">Elixir</a></li>\n<li><a href=\"#erlang\">Erlang</a></li>\n<li><a href=\"#fortran\">Fortran</a></li>\n<li><a href=\"#golang\">Golang</a></li>\n<li><a href=\"#groovy\">Groovy</a></li>\n<li><a href=\"#haskell\">Haskell</a></li>\n<li><a href=\"#html--css\">HTML / CSS</a></li>\n<li><a href=\"#ios\">iOS</a></li>\n<li><a href=\"#java\">Java</a></li>\n<li><a href=\"#javascript\">JavaScript</a>\n<ul>\n<li><a href=\"#angularjs\">AngularJS</a></li>\n<li><a href=\"#backbonejs\">Backbone.js</a></li>\n<li><a href=\"#d3js\">D3.js</a></li>\n<li><a href=\"#deno\">Deno</a></li>\n<li><a href=\"#electronjs\">Electron.js</a></li>\n<li><a href=\"#extjs\">ExtJS</a></li>\n<li><a href=\"#impressjs\">impress.js</a></li>\n<li><a href=\"#jquery\">jQuery</a></li>\n<li><a href=\"#nodejs\">Node.js</a></li>\n<li><a href=\"#reactjs\">React.js</a></li>\n<li><a href=\"#vuejs\">Vue.js</a></li>\n<li><a href=\"#zeptojs\">Zepto.js</a></li>\n</ul>\n</li>\n<li><a href=\"#latex\">LaTeX</a></li>\n<li><a href=\"#lisp\">LISP</a></li>\n<li><a href=\"#lua\">Lua</a></li>\n<li><a href=\"#markdown\">Markdown</a></li>\n<li><a href=\"#mysql\">MySQL</a></li>\n<li><a href=\"#nosql\">NoSQL</a></li>\n<li><a href=\"#perl\">Perl</a></li>\n<li><a href=\"#php\">PHP</a>\n<ul>\n<li><a href=\"#laravel\">Laravel</a></li>\n<li><a href=\"#symfony\">Symfony</a></li>\n</ul>\n</li>\n<li><a href=\"#postgresql\">PostgreSQL</a></li>\n<li><a href=\"#python\">Python</a>\n<ul>\n<li><a href=\"#django\">Django</a></li>\n</ul>\n</li>\n<li><a href=\"#r\">R</a></li>\n<li><a href=\"#restructuredtext\">reStructuredText</a></li>\n<li><a href=\"#ruby\">Ruby</a></li>\n<li><a href=\"#rust\">Rust</a></li>\n<li><a href=\"#scala\">Scala</a></li>\n<li><a href=\"#scheme\">Scheme</a></li>\n<li><a href=\"#scratch\">Scratch</a></li>\n<li><a href=\"#shell\">Shell</a></li>\n<li><a href=\"#swift\">Swift</a></li>\n<li><a href=\"#typescript\">TypeScript</a></li>\n<li><a href=\"#vba-microsoft-visual-basic-applications\">VBA (Microsoft Visual Basic Applications)</a></li>\n<li><a href=\"#vim\">Vim</a></li>\n<li><a href=\"#visual-prolog\">Visual Prolog</a></li>\n<li><a href=\"#webassembly\">WebAssembly</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"语言无关-2\"><a class=\"markdownIt-Anchor\" href=\"#语言无关-2\">#</a> 语言无关</h2>\n<h3 id=\"ide\"><a class=\"markdownIt-Anchor\" href=\"#ide\">#</a> IDE</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2p1ZGFzbi9JbnRlbGxpSi1JREVBLVR1dG9yaWFs\">IntelliJ IDEA 简体中文专题教程</span></li>\n</ul>\n<h3 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> Web</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay9qdW50YW8vMy13ZWItZGVzaWducy1pbi0zLXdlZWtzL2RldGFpbHM=\">3 Web Designs in 3 Weeks</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NOLUNocm9tZS1EZXZUb29scy9DTi1DaHJvbWUtRGV2VG9vbHM=\">Chrome 开发者工具中文手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pdHVyaW5nLmNvbS5jbi9taW5pYm9vay85NTA=\">Chrome 扩展及应用开发</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL29wZW4uY2hyb21lLjM2MC5jbi9leHRlbnNpb25fZGV2L292ZXJ2aWV3Lmh0bWw=\">Chrome 扩展开发文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Bob2RhbC9ncm93dGgtZWJvb2s=\">Growth: 全栈增长工程师指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ncnVudGpzLm5ldA==\">Grunt 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25pbW9qcy9ndWxwLWJvb2s=\">Gulp 入门指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ndWxwanMuY29tLmNuL2RvY3Mv\">gulp 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JvbGFzYmxhY2svaHR0cC1hcGktZ3VpZGU=\">HTTP 接口设计指北</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3l1ZWR1LmJhaWR1LmNvbS9lYm9vay80NzhkMWE2MjM3NmJhZjFmZmM0ZmFkOTk/cG49MQ==\">HTTP/2.0 中文翻译</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay95ZTExb3cvaHR0cDItZXhwbGFpbmVkL2RldGFpbHM=\">http2 讲解</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhcmN5bGl1L2dvb2dsZS1zdHlsZWd1aWRlL2Jsb2IvbWFzdGVyL0pTT05TdHlsZUd1aWRlLm1k\">JSON 风格指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL21hbi5sdXBhd29ybGQuY29tL2NvbnRlbnQvbmV0d29yay93aXJlc2hhcmsvaW5kZXguaHRtbA==\">Wireshark 用户手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb21tdW5pdHkuZW1jLmNvbS90aHJlYWQvMTk0OTAx\">一站式学习 Wireshark</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy4yMHRoaW5nc2lsZWFybmVkLmNvbS96aC1DTi9ob21l\">关于浏览器和网络的 20 项须知</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NvZGVybG1uLmdpdGh1Yi5pby9jb2RlLXN0YW5kYXJkcy8=\">前端代码规范 及 最佳实践</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZvdWJlci9ibG9nL2lzc3Vlcy8y\">前端开发体系建设日记</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhY2tlMi9oYWNrZTIuZ2l0aHViLmlvL2lzc3Vlcy8x\">前端资源分享（一）</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhY2tlMi9oYWNrZTIuZ2l0aHViLmlvL2lzc3Vlcy8z\">前端资源分享（二）</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RlZXJjaGFvLm5ldC90dXRvcmlhbHMvcmVnZXgvcmVnZXguaHRt\">正则表达式 30 分钟入门教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2ppbmxvbmcuZ2l0aHViLmlvLzIwMTMvMDgvMjkvZGV2dG9vbHNlY3JldHMv\">浏览器开发工具的秘密</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0FsbG95VGVhbS9NYXJz\">移动 Web 前端知识库</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hvb3Npbi9tb2JpbGUtd2ViLWZhdm9yaXRlcw==\">移动前端开发收藏夹</span></li>\n</ul>\n<h3 id=\"web服务器\"><a class=\"markdownIt-Anchor\" href=\"#web服务器\">#</a> WEB 服务器</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dvcmtzLmppbmJ1Z3VvLmNvbS9hcGFjaGUvbWVudTIyL2luZGV4Lmh0bWw=\">Apache 中文手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3RlbmdpbmUudGFvYmFvLm9yZy9ib29rL2luZGV4Lmh0bWw=\">Nginx 开发从入门到精通</span> - 淘宝团队</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy50dGxzYS5jb20vbmdpbngvbmdpbngtc3R1LXBkZi8=\">Nginx 教程从入门到精通</span> - 运维生存时间 (PDF)</li>\n</ul>\n<h3 id=\"其它\"><a class=\"markdownIt-Anchor\" href=\"#其它\">#</a> 其它</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb21tdW5pdHkuZW1jLmNvbS9kb2NzL0RPQy0xNjA2Nw==\">SAN 管理入门系列</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3NrZXRjaGNuLmNvbS9za2V0Y2gtY2hpbmVzZS11c2VyLW1hbnVhbC5odG1sI2ludHJvZHVjZQ==\">Sketch 中文手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2lmZXZlLmNvbS9wZXJmYm9vay8=\">深入理解并行编程</span></li>\n</ul>\n<h3 id=\"函数式概念\"><a class=\"markdownIt-Anchor\" href=\"#函数式概念\">#</a> 函数式概念</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2p1c3RpbnlodWFuZy9GdW5jdGlvbmFsLVByb2dyYW1taW5nLUZvci1UaGUtUmVzdC1vZi1Vcy1Dbg==\">傻瓜函数编程</span></li>\n</ul>\n<h3 id=\"分布式系统\"><a class=\"markdownIt-Anchor\" href=\"#分布式系统\">#</a> 分布式系统</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RjYW95dWFuLmdpdGh1Yi5pby9wYXBlcnMvcGRmcy9TY2FsYWJpbGl0eS5wZGY=\">走向分布式</span> (PDF)</li>\n</ul>\n<h3 id=\"在线教育\"><a class=\"markdownIt-Anchor\" href=\"#在线教育\">#</a> 在线教育</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2VkdS41MWN0by5jb20=\">51CTO 学院</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29kZWNhZGVteS5jb20vP2xvY2FsZV9jb2RlPXpo\">Codecademy</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY29kZXNjaG9vbC5jb20=\">CodeSchool</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY291cnNlcmEub3JnL2NvdXJzZXM/b3JkZXJieT11cGNvbWluZyZhbXA7bG5ncz16aA==\">Coursera</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybnhpbnltaW51dGVzLmNvbQ==\">Learn X in Y minutes</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2hpeWFubG91LmNvbQ==\">shiyanlou</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90ZWFtdHJlZWhvdXNlLmNvbQ==\">TeamTreeHouse</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudWRhY2l0eS5jb20=\">Udacity</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueHVldGFuZ3guY29t\">xuetangX</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pbW9vYy5jb20vY291cnNlL2xpc3Q=\">慕课网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qaWtleHVleXVhbi5jb20=\">极客学院</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5odWJ3aXouY29t\">汇智网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qaXN1YW5rZS5jb20=\">计蒜客</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3l1bi5pdGhlaW1hLmNvbQ==\">黑马程序员</span></li>\n</ul>\n<h3 id=\"大数据\"><a class=\"markdownIt-Anchor\" href=\"#大数据\">#</a> 大数据</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9haXlhbmJvLmdpdGJvb2tzLmlvL3NwYXJrLXByb2dyYW1taW5nLWd1aWRlLXpoLWNuL2NvbnRlbnQv\">Spark 编程指南简体中文版</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpbnlpcXVuL0RhdGFNaW5pbmdBbGdvcml0aG0=\">数据挖掘中经典的算法实现和详细的注释</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RhdGFtaW5pbmdndWlkZS5ib29rcy55b3VydGlvbi5jb20=\">面向程序员的数据挖掘指南</span></li>\n</ul>\n<h3 id=\"操作系统\"><a class=\"markdownIt-Anchor\" href=\"#操作系统\">#</a> 操作系统</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3llYXN5L2RvY2tlcl9wcmFjdGljZQ==\">Docker —— 从入门到实践</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dpZHV1L2NoaW5lc2VfZG9ja2Vy\">Docker 中文指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3l1ZWR1LmJhaWR1LmNvbS9lYm9vay9kODE3OTY3NDE2ZmM3MDBhYmI2OGZjYTE=\">Docker 入门实战</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mcmVlYnNkLm9yZy9kb2MvemhfQ04uVVRGLTgvYm9va3MvaGFuZGJvb2sv\">FreeBSD 使用手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aW55bGFiLmdpdGJvb2tzLmlvL2xpbnV4LWRvYy9jb250ZW50L3poLWNuLw==\">Linux Documentation (中文版)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2hhcHB5cGV0ZXIuZ2l0aHViLmlvL0xHQ0IvYm9vay8=\">Linux Guide for Complete Beginners</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dvcmtzLmppbmJ1Z3VvLmNvbS9sZnMvbGZzNjIvaW5kZXguaHRtbA==\">Linux 构建指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3NvdXJjZWZvcmdlLm5ldC9wcm9qZWN0cy9lbHBpLw==\">Linux 系统高级编程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21lMTE1L2xpbnV4dG9vbHNfcnN0\">Linux 工具快速教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hYWFhYWFzaHUuZ2l0Ym9va3MuaW8vbWFjLWRldi1zZXR1cC9jb250ZW50Lw==\">Mac 开发配置手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3BhZ2VzLmNzLndpc2MuZWR1L35yZW16aS9PU1RFUC8=\">Operating Systems: Three Easy Pieces</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JpbGxpZTY2LmdpdGh1Yi5pby9UTENML2luZGV4Lmh0bWw=\">The Linux Command Line</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dpa2kudWJ1bnR1Lm9yZy5jbi9VYnVudHVNYW51YWw=\">Ubuntu 参考手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay9vYmplY3RrdWFuL3Vjb3JlLWRvY3MvZGV0YWlscw==\">uCore Lab: Operating System Course in Tsinghua University</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NiLnZ1L3VuaXh0b29sYm94X3poX0NOLnhodG1s\">UNIX TOOLBOX</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2psZXZ5L3RoZS1hcnQtb2YtY29tbWFuZC1saW5lL2Jsb2IvbWFzdGVyL1JFQURNRS16aC5tZA==\">命令行的艺术</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aW55bGFiLmdpdGJvb2tzLmlvL2VsaW51eC9jb250ZW50L3poLw==\">嵌入式 Linux 知识库 (eLinux.org 中文版)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2kubGludXh0b3kub3JnL2RvY3MvZ3VpZGUvaW5kZXguaHRtbA==\">开源世界旅行手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RvYmVnaXQzaHViL3VuZGVyc3RhbmRfbGludXhfcHJvY2Vzcw==\">理解 Linux 进程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NuLmxpbnV4LnZiaXJkLm9yZy9saW51eF9iYXNpYy9saW51eF9iYXNpYy5waHA=\">鸟哥的 Linux 私房菜 基础学习篇</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NuLmxpbnV4LnZiaXJkLm9yZy9saW51eF9zZXJ2ZXIv\">鸟哥的 Linux 私房菜 服务器架设篇</span></li>\n</ul>\n<h3 id=\"数据库\"><a class=\"markdownIt-Anchor\" href=\"#数据库\">#</a> 数据库</h3>\n<!-- Waiting to add in -->\n<h3 id=\"智能系统\"><a class=\"markdownIt-Anchor\" href=\"#智能系统\">#</a> 智能系统</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Bob2RhbC9kZXNpZ25pb3Q=\">一步步搭建物联网系统</span></li>\n</ul>\n<h3 id=\"正则表达式\"><a class=\"markdownIt-Anchor\" href=\"#正则表达式\">#</a> 正则表达式</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ydW5vb2IuY29tL3JlZ2V4cC9yZWdleHAtdHV0b3JpYWwuaHRtbA==\">正则表达式 - 菜鸟教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTYxMTE5MTQxMjM2L2h0dHA6Ly9kZWVyY2hhby5uZXQ6ODAvdHV0b3JpYWxzL3JlZ2V4L3JlZ2V4Lmh0bQ==\">正则表达式 30 分钟入门教程</span></li>\n</ul>\n<h3 id=\"版本控制\"><a class=\"markdownIt-Anchor\" href=\"#版本控制\">#</a> 版本控制</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3JvZ2VyZHVkbGVyLmdpdGh1Yi5pby9naXQtZ3VpZGUvaW5kZXguemguaHRtbA==\">Git - 简易指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZseWhpZ2hlcjEzOS9HaXQtQ2hlYXQtU2hlZXQ=\">Git-Cheat-Sheet</span> - flyhigher139</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dpdGJvb2subGl1aHVpOTk4LmNvbQ==\">Git Community Book 中文版</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RhbmllbGt1bW1lci5naXRodWIuaW8vZ2l0LWZsb3ctY2hlYXRzaGVldC9pbmRleC56aF9DTi5odG1s\">git-flow 备忘清单</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy1jcy1zdHVkZW50cy5zdGFuZm9yZC5lZHUvfmJseW5uL2dpdG1hZ2ljL2ludGwvemhfY24v\">Git magic</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy1jcy1zdHVkZW50cy5zdGFuZm9yZC5lZHUvfmJseW5uL2dpdG1hZ2ljL2ludGwvemhfY24v\">Git Magic</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dpdHJlZi5qdXN0amF2YWMuY29t\">Git 参考手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9naXRodWItaGVscA==\">Github 帮助文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zbm93ZHJlYW04Ni5naXRib29rcy5pby9naXRodWItY2hlYXQtc2hlZXQvY29udGVudC96aC8=\">GitHub 秘籍</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5saWFveHVlZmVuZy5jb20vd2lraS8wMDEzNzM5NTE2MzA1OTI5NjA2ZGQxODM2MTI0ODU3OGM2N2I4MDY3YzhjMDE3YjAwMA==\">Git 教程</span> - 廖雪峰</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvdGdpdC9nb3RnaXRodWI=\">Got GitHub</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53b3JsZGhlbGxvLm5ldC9nb3RnaXRodWIvaW5kZXguaHRtbA==\">GotGitHub</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC1oZ2luaXQucmVhZHRoZWRvY3MuaW8vZW4vbGF0ZXN0Lw==\">HgInit (中文版)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWVyY3VyaWFsLXNjbS5vcmcvd2lraS9DaGluZXNlVHV0b3JpYWw=\">Mercurial 使用教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poL3Yy\">Pro Git</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay8wNTMyL3Byb2dpdC9kZXRhaWxz\">Pro Git 中文版</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaW5nb2h1YW5nLmdpdGJvb2tzLmlvL3Byb2dpdDIvY29udGVudA==\">Pro Git 第二版 中文版</span> - Bingo Huang</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3N2bmJvb2sucmVkLWJlYW4uY29tL25pZ2h0bHkvemgvaW5kZXguaHRtbA==\">svn 手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmdpdGJyYW5jaGluZy5qcy5vcmc=\">学习 Git 分支</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2lnaXQubGludXh0b3kub3JnL2luZGV4Lmh0bWw=\">沉浸式学 Git</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JhY2tsb2d0b29sLmNvbS9naXQtZ3VpZGUvY24v\">猴子都能懂的 GIT 入门</span></li>\n</ul>\n<h3 id=\"程序员杂谈\"><a class=\"markdownIt-Anchor\" href=\"#程序员杂谈\">#</a> 程序员杂谈</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5rYW5jbG91ZC5jbi9rYW5jbG91ZC9hLXByb2dyYW1tZXItcHJlcGFyZXM=\">程序员的自我修养</span></li>\n</ul>\n<h3 id=\"管理和监控\"><a class=\"markdownIt-Anchor\" href=\"#管理和监控\">#</a> 管理和监控</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay9mdXhpYW9wYW5nL2xlYXJuZWxhc3RpY3NlYXJjaC9kZXRhaWxz\">ElasticSearch 权威指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2VzLnhpYW9sZWlsdS5jb20=\">Elasticsearch 权威指南（中文版）</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2tpYmFuYS5sb2dzdGFzaC5lcw==\">ELKstack 中文指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NoZW5yeW4vbG9nc3Rhc2gtYmVzdC1wcmFjdGljZS1jbg==\">Logstash 最佳实践</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Vkbi55eXVhcC5jb20vZG9jL21hc3RlcmluZy1lbGFzdGljc2VhcmNoLw==\">Mastering Elasticsearch (中文版)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay93aXphcmRmb3JjZWwvcHVwcGV0LTI3LWNvb2tib29rL2RldGFpbHM=\">Puppet 2.7 Cookbook 中文版</span></li>\n</ul>\n<h3 id=\"编程艺术\"><a class=\"markdownIt-Anchor\" href=\"#编程艺术\">#</a> 编程艺术</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vc2NoaW5hLm5ldC90cmFuc2xhdGUvd2hhdC1ldmVyeS1wcm9ncmFtbWVyLXNob3VsZC1rbm93LWFib3V0LW1lbW9yeS1wYXJ0MQ==\">每个程序员都应该了解的内存知识 (第一部分)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2p1bHljb2RpbmcvVGhlLUFydC1PZi1Qcm9ncmFtbWluZy1ieS1KdWx5\">程序员编程艺术</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5rYW5jbG91ZC5jbi9rYW5jbG91ZC9pbnRyby10by1wcm9nLzUyNTky\">编程入门指南</span></li>\n</ul>\n<h3 id=\"编译原理\"><a class=\"markdownIt-Anchor\" href=\"#编译原理\">#</a> 编译原理</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0RlYXRoS2luZy9MZWFybmluZy1TSUNQ\">《计算机程序的结构和解释》公开课 翻译项目</span></li>\n</ul>\n<h3 id=\"编辑器\"><a class=\"markdownIt-Anchor\" href=\"#编辑器\">#</a> 编辑器</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2V4dmltLmdpdGh1Yi5pby9kb2NzLXpoL2ludHJvLw==\">exvim–vim 改良成 IDE 项目</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZpbWNuL3ZpbWNkb2M=\">Vim 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3lhbmd5YW5nd2l0aGdudS91c2VfdmltX2FzX2lkZQ==\">所需即所获：像 IDE 一样使用 vim</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xlYXJudmltc2NyaXB0dGhlaGFyZHdheS5vbmVmbG93ZXJvbmV3b3JsZC5jb20=\">笨方法学 Vimscript 中译本</span></li>\n</ul>\n<h3 id=\"计算机图形学\"><a class=\"markdownIt-Anchor\" href=\"#计算机图形学\">#</a> 计算机图形学</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybm9wZW5nbC1jbi5naXRodWIuaW8=\">LearnOpenGL CN</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ppbG9uZ3NoYW5yZW4vb3BlbmdsLXR1dG9yaWFscw==\">OpenGL 教程</span></li>\n</ul>\n<h3 id=\"设计模式\"><a class=\"markdownIt-Anchor\" href=\"#设计模式\">#</a> 设计模式</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvbG92ZWxpb24vYXJ0aWNsZS9kZXRhaWxzLzE3NTE3MjEz\">史上最全设计模式导学目录</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21lMTE1L2Rlc2lnbl9wYXR0ZXJucw==\">图说设计模式</span></li>\n</ul>\n<h3 id=\"软件开发方法\"><a class=\"markdownIt-Anchor\" href=\"#软件开发方法\">#</a> 软件开发方法</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2p1c3RpbnlodWFuZy9GdW5jdGlvbmFsLVByb2dyYW1taW5nLUZvci1UaGUtUmVzdC1vZi1Vcy1Dbg==\">傻瓜函数编程</span> (《Functional Programming For The Rest of Us》中文版)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pbmZvcS5jb20vY24vbWluaWJvb2tzL3NjcnVtLXhwLWZyb20tdGhlLXRyZW5jaGVz\">硝烟中的 Scrum 和 XP</span></li>\n</ul>\n<h3 id=\"项目相关\"><a class=\"markdownIt-Anchor\" href=\"#项目相关\">#</a> 项目相关</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RvY3MuaHVpaG9vLmNvbS9nbnUvbGludXgvZ21ha2UuaHRtbA==\">GNU make 指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9HcmFkbGUtMi1Vc2VyLUd1aWRl\">Gradle 2 用户指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3l1ZWR1LmJhaWR1LmNvbS9lYm9vay9mMjNhZjI2NTk5OGZjYzIyYmNkMTBkYTI=\">Gradle 中文使用文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTcwNjE2MDEzMDI0L2h0dHA6Ly9sb2NhbC5qb2Vsb25zb2Z0d2FyZS5jb20vd2lraS9DaGluZXNlXyhTaW1wbGlmaWVkKQ==\">Joel 谈软件</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Zvb2wyZmlzaC9zZWxlbml1bS1kb2M=\">selenium 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pdHVyaW5nLmNvbS5jbi9ib29rLzExNDM=\">开源软件架构</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Vjb21mZS9zcGVj\">编码规范</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aXphcmRmb3JjZWwuZ2l0Ym9va3MuaW8vaWJtLWotYXA=\">让开发自动化系列专栏</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aXphcmRmb3JjZWwuZ2l0Ym9va3MuaW8vaWJtLWotY3E=\">追求代码质量</span></li>\n</ul>\n<h2 id=\"语言相关\"><a class=\"markdownIt-Anchor\" href=\"#语言相关\">#</a> 语言相关</h2>\n<h3 id=\"android\"><a class=\"markdownIt-Anchor\" href=\"#android\">#</a> Android</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hcGtidXMuY29tL2Rlc2lnbi9pbmRleC5odG1s\">Android Design (中文版)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NoYXJvbkNodWkvQW5kcm9pZE5vdGU=\">Android Note (开发过程中积累的知识点)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xlYW5vdGUuY29tL2Jsb2cvcG9zdC81NjE2NThmOTM4ZjQxMTI2YjIwMDAyOTg=\">Android6.0 新特性详解</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Jib3lmZWl5dS9hbmRyb2lkLXRlY2gtZnJvbnRpZXI=\">Android 开发技术前线 (android-tech-frontier)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2h1a2FpLm1lL2FuZHJvaWQtdHJhaW5pbmctY291cnNlLWluLWNoaW5lc2UvaW5kZXguaHRtbA==\">Google Android 官方培训课程中文版</span></li>\n<li>Google Material Design 正體中文版 (<span class=\"exturl\" data-url=\"aHR0cHM6Ly93Y2M3MjMuZ2l0Ym9va3MuaW8vZ29vZ2xlX2Rlc2lnbl90cmFuc2xhdGUvY29udGVudC9zdHlsZS1pY29ucy5odG1s\">译本一</span>，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzFzdGVycy9tYXRlcmlhbF9kZXNpZ25femg=\">译本二</span>)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dpa2kuamlrZXh1ZXl1YW4uY29tL3Byb2plY3QvbWF0ZXJpYWwtZGVzaWduLw==\">Material Design 中文版</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ZYLU1heC9Qb2ludC1vZi1BbmRyb2lk\">Point-of-Android</span></li>\n</ul>\n<h3 id=\"awk\"><a class=\"markdownIt-Anchor\" href=\"#awk\">#</a> AWK</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2F3ay5yZWFkdGhlZG9jcy5vcmcvZW4vbGF0ZXN0L2luZGV4Lmh0bWw=\">awk 中文指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3d1emhvdWh1aS9hd2s=\">awk 程序设计语言</span></li>\n</ul>\n<h3 id=\"c\"><a class=\"markdownIt-Anchor\" href=\"#c\">#</a> C</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9maXJlYmFzZXN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vdjAvYi9naXRib29rLTI4NDI3LmFwcHNwb3QuY29tL28vYXNzZXRzJTJGLU1FNXpSLTAzWkVIZ3Aya3Y3YlclMkYtTUY5RUlZLXMxOV93MTlfVW5hZSUyRi1NRjlGLUhDczFuTE9rWTFtTFZpJTJGQmVlai1jbi0yMDE0MDQyOS56aXA/YWx0PW1lZGlhJmFtcDt0b2tlbj1kZTI3Zjk2Yi0yYWVkLTRjOTctODg3OS02NDk2MzhjNzU1OWY=\">Beej’s Guide to Network Programming 簡體中文版</span> - B. Hall, 廖亚伦译 (PDF)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2MtZmFxLWNobi5zb3VyY2Vmb3JnZS5uZXQvY2NmYXEvY2NmYXEuaHRtbA==\">C 语言常见问题集</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RvY3MubGludXh0b25lLm9yZy9lYm9va3MvQyZhbXA7Q1BQL2Mv\">Linux C 编程一站式学习</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpbWluZ3RoL05DQ0w=\">新概念 C 语言教程</span></li>\n</ul>\n<h3 id=\"c-sharp\"><a class=\"markdownIt-Anchor\" href=\"#c-sharp\">#</a> C Sharp</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jvb2suZG91YmFuLmNvbS9zdWJqZWN0LzI0ODI3ODc5Lw==\">精通 C#(第 6 版)</span></li>\n</ul>\n<h3 id=\"c-2\"><a class=\"markdownIt-Anchor\" href=\"#c-2\">#</a> C++</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hlbGxvZ2NjLzEwMC1nY2MtdGlwcy9ibG9iL21hc3Rlci9zcmMvaW5kZXgubWQ=\">100 个 gcc 小技巧</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hlbGxvZ2NjLzEwMC1nZGItdGlwcy9ibG9iL21hc3Rlci9zcmMvaW5kZXgubWQ=\">100 个 gdb 小技巧</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aW55bGFiLmdpdGJvb2tzLmlvL2Nib29rL2NvbnRlbnQv\">C 语言编程透视</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FuZHljYWkvY3ByaW1lcg==\">C/C++ Primer</span> - andycai</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdW5pc3R1ZGlvLmNvbS9jcHBmYXEv\">C++ FAQ LITE (中文版)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01vb29waHkvQ3BwLVByaW1lcg==\">C++ Primer 5th Answers</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3d1eWU5MDM2L0NwcFRlbXBsYXRlVHV0b3JpYWw=\">C++ Template 进阶指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZvcmhhcHB5L0NwbHVzcGx1cy1Db25jdXJyZW5jeS1Jbi1QcmFjdGljZQ==\">C++ 并发编程指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xlZXlpdy9jZ2RiLW1hbnVhbC1pbi1jaGluZXNl\">CGDB 中文手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTcwNjE1MTc0MTQ0L2h0dHA6Ly9zZXdtLnBrdS5lZHUuY24vc3JjL3BhcmFkaXNlL3JlZmVyZW5jZS9DTWFrZSUyMFByYWN0aWNlLnBkZg==\">Cmake 实践</span> (PDF)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RvY3MuaHVpaG9vLmNvbS9nbnUvbGludXgvZ21ha2UuaHRtbA==\">GNU make 指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3poLWdvb2dsZS1zdHlsZWd1aWRlLnJlYWR0aGVkb2NzLm9yZy9lbi9sYXRlc3QvZ29vZ2xlLWNwcC1zdHlsZWd1aWRlL2NvbnRlbnRzLw==\">Google C++ 风格指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FuanVrZS96Z3VpZGUtY24=\">ZMQ 指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pdHVyaW5nLmNvbS5jbi9ib29rLzEyMDM=\">像计算机科学家一样思考（C++ 版)</span> (《How To Think Like a Computer Scientist: C++ Version》中文版)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ub3dhbWFnaWMubmV0L2xpYnJhcnlzL2Jvb2tzL2NvbnRlbnRzL2M=\">简单易懂的 C 魔法</span></li>\n</ul>\n<h3 id=\"coffeescript\"><a class=\"markdownIt-Anchor\" href=\"#coffeescript\">#</a> CoffeeScript</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NvZmZlZS1zY3JpcHQub3Jn\">CoffeeScript 中文</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dlZWtwbHV4L2NvZmZlZXNjcmlwdC1zdHlsZS1ndWlkZQ==\">CoffeeScript 编码风格指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2VscnJycnJyci9jb2ZmZWVzY3JpcHQtc3R5bGUtZ3VpZGUvYmxvYi9tYXN0ZXIvUkVBRE1FLVpILm1k\">CoffeeScript 编程风格指南</span></li>\n</ul>\n<h3 id=\"dart\"><a class=\"markdownIt-Anchor\" href=\"#dart\">#</a> Dart</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RhcnQubGlkaWFuLmluZm8vd2lraS9MYW5ndWFnZV9Ub3Vy\">Dart 语言导览</span></li>\n</ul>\n<h3 id=\"elasticsearch\"><a class=\"markdownIt-Anchor\" href=\"#elasticsearch\">#</a> Elasticsearch</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xvb2x5L2VsYXN0aWNzZWFyY2gtZGVmaW5pdGl2ZS1ndWlkZS1jbg==\">Elasticsearch 权威指南</span> （《Elasticsearch the definitive guide》中文版）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Vkbi55eXVhcC5jb20vZG9jL21hc3RlcmluZy1lbGFzdGljc2VhcmNoLw==\">Mastering Elasticsearch (中文版)</span></li>\n</ul>\n<h3 id=\"elixir\"><a class=\"markdownIt-Anchor\" href=\"#elixir\">#</a> Elixir</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xqem4vRWxpeHJHZXR0aW5nU3RhcnRlZENoaW5lc2U=\">Elixir Getting Started 中文翻译</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbGl4aXJzY2hvb2wuY29tL2NuLw==\">Elixir 编程语言教程</span> (Elixir School)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0xqem4vTWV0YVByb2dyYW1taW5nSW5FbGl4aXJDaGluZXNl\">Elixir 元编程与 DSL 中文翻译</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9teWRlYXJ4eW0uZ2l0Ym9va3MuaW8vcGhvZW5peC1kb2MtaW4tY2hpbmVzZS9jb250ZW50Lw==\">Phoenix 框架中文文档</span></li>\n</ul>\n<h3 id=\"erlang\"><a class=\"markdownIt-Anchor\" href=\"#erlang\">#</a> Erlang</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xpYW5jaGVuZy9jcGllLWNu\">Erlang 并发编程</span> (《Concurrent Programming in Erlang (Part I)》中文版)</li>\n</ul>\n<h3 id=\"fortran\"><a class=\"markdownIt-Anchor\" href=\"#fortran\">#</a> Fortran</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL21pY3JvLnVzdGMuZWR1LmNuL0ZvcnRyYW4vWkpEaW5nLw==\">Fortran77 和 90/95 编程入门</span></li>\n</ul>\n<h3 id=\"golang\"><a class=\"markdownIt-Anchor\" href=\"#golang\">#</a> Golang</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FzdGF4aWUvYnVpbGQtd2ViLWFwcGxpY2F0aW9uLXdpdGgtZ29sYW5n\">Go Web 编程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Vua253b24vdGhlLXdheS10by1nb19aSF9DTg==\">Go 入门指南</span> (《The Way to Go》中文版)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dvbGFuZy1jaGluYS9nb2xhbmdkb2MudHJhbnNsYXRpb25z\">Go 官方文档翻译</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90b3VyLmdvLXpoLm9yZy9saXN0\">Go 指南</span> (《A Tour of Go》中文版)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NvbmdsZW8vdGhlLWxpdHRsZS1nby1ib29rX1pIX0NO\">Go 简易教程</span> (《<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2thcmxzZWd1aW4vdGhlLWxpdHRsZS1nby1ib29r\">The Little Go Book</span>》中文版)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1Vua253b24vZ28tZnVuZGFtZW50YWwtcHJvZ3JhbW1pbmc=\">Go 编程基础</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NoYWkyMDEwL2dvLWFzdC1ib29r\">Go 语法树入门</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J1amV3cy9nby1pbi1hY3Rpb24tbm90ZXM=\">Go 语言实战笔记</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BvbGFyaXMxMTE5L1RoZS1Hb2xhbmctU3RhbmRhcmQtTGlicmFyeS1ieS1FeGFtcGxl\">Go 语言标准库</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NoYWkyMDEwL2FkdmFuY2VkLWdvLXByb2dyYW1taW5nLWJvb2s=\">Go 语言高级编程（Advanced Go Programming）</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h5cGVyLWNhcnJvdC9nb19jb21tYW5kX3R1dG9yaWFs\">Go 命令教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FzdGF4aWUvR28taW4tQWN0aW9u\">Go 实战开发</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FjaHVuL0dvLUJsb2ctSW4tQWN0aW9u\">Go 语言博客实践</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZGNfNzI2L2FydGljbGUvZGV0YWlscy80NjU2NTI0MQ==\">Java 程序员的 Golang 入门指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FzdGF4aWUvTlBXR196aA==\">Network programming with Go 中文翻译版本</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dvcmV2ZWwuY24vZG9jcy9tYW51YWwvaW5kZXguaHRtbA==\">Revel 框架手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL21pa2VzcG9vay5jb20vbGVhcm5pbmctZ28v\">学习 Go 语言</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2dvLmN0b2xpYi5jb20vZG9jcy9yZWFkL21hZ2ljYWwtZ28tYy1pbmRleC5odG1s\">神奇的 Go 语言</span></li>\n</ul>\n<h3 id=\"groovy\"><a class=\"markdownIt-Anchor\" href=\"#groovy\">#</a> Groovy</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pYm0uY29tL2RldmVsb3BlcndvcmtzL2NuL2phdmEvai1wZy8=\">实战 Groovy 系列</span></li>\n</ul>\n<h3 id=\"haskell\"><a class=\"markdownIt-Anchor\" href=\"#haskell\">#</a> Haskell</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xlYXJueW91YS5oYXNrZWxsLnNn\">Haskell 趣学指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NuaGFza2VsbC5jb20=\">Real World Haskell 中文版</span></li>\n</ul>\n<h3 id=\"html-css\"><a class=\"markdownIt-Anchor\" href=\"#html-css\">#</a> HTML / CSS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib290c3RyYXAuaGV4c2Nob29sLmNvbQ==\">Bootstrap 4 繁體中文手冊</span> - 六角學院</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9jc3MzLXR1dG9yaWFs\">CSS3 Tutorial 《CSS3 教程》</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Nzcy5kb3lvZS5jb20=\">CSS 参考手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3lhbnh5ei5naXRodWIuaW8vZW1tZXQtZG9jcy8=\">Emmet 文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53M3NjaG9vbC5jb20uY24vaHRtbDUvaW5kZXguYXNw\">HTML5 教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NvZGVndWlkZS5ib290Y3NzLmNvbQ==\">HTML 和 CSS 编码规范</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Nhc3MtZ3VpZGVsaW4uZXMvemgv\">Sass Guidelines 中文</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2FsbG95dGVhbS5naXRodWIuaW8vQ29kZUd1aWRlLw==\">前端代码规范</span> - 腾讯 AlloyTeam 团队</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3poLmxlYXJubGF5b3V0LmNvbQ==\">学习 CSS 布局</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NoYWRsdW8vQ1NTLUd1aWRlbGluZXMvYmxvYi9tYXN0ZXIvUkVBRE1FLm1k\">通用 CSS 笔记、建议与指导</span></li>\n</ul>\n<h3 id=\"ios\"><a class=\"markdownIt-Anchor\" href=\"#ios\">#</a> iOS</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL25pbHN1bi5naXRodWIuaW8vYXBwbGUtd2F0Y2gv\">Apple Watch 开发初探</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3poLWdvb2dsZS1zdHlsZWd1aWRlLnJlYWR0aGVkb2NzLm9yZy9lbi9sYXRlc3QvZ29vZ2xlLW9iamMtc3R5bGVndWlkZS8=\">Google Objective-C Style Guide 中文版</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2lzdXgudGVuY2VudC5jb20vaW9zLWh1bWFuLWludGVyZmFjZS1ndWlkZWxpbmVzLXVpLWRlc2lnbi1iYXNpY3MtaW9zNy5odG1s\">iOS7 人机界面指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Fpbmp4LzMwbWluX2d1aWRlcy9ibG9iL21hc3Rlci9pb3MubWQ=\">iOS 开发 60 分钟入门</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dpbGVhbS5jb20vaXBob25lLTYtc2NyZWVuLWNuLw==\">iPhone 6 屏幕揭秘</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2preWluL1N1YnRpdGxl\">网易斯坦福大学公开课：iOS 7 应用开发字幕文件</span></li>\n</ul>\n<h3 id=\"java\"><a class=\"markdownIt-Anchor\" href=\"#java\">#</a> Java</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9hY3Rpdml0aS01LngtdXNlci1ndWlkZQ==\">Activiti 5.x 用户指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9hcGFjaGUtbWluYS0yLngtdXNlci1ndWlkZQ==\">Apache MINA 2 用户指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9hcGFjaGUtc2hpcm8tMS4yLngtcmVmZXJlbmNl\">Apache Shiro 用户指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2hhd3N0ZWluLmNvbS8yMDE0LzAxLzIwL2dvb2dsZS1qYXZhLXN0eWxlLw==\">Google Java 编程风格指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9oMi1kYXRhYmFzZS1kb2M=\">H2 Database 教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9zZXJ2bGV0LTMuMS1zcGVjaWZpY2F0aW9u\">Java Servlet 3.1 规范</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9qYXZhLWNvZGUtY29udmVudGlvbnM=\">Java 编码规范</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qYXZhLnF1YW5rZS5uYW1l\">Java 编程思想</span> - quanke</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9KZXJzZXktMi54LVVzZXItR3VpZGU=\">Jersey 2.x 用户指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9qc3NlLXJlZmVyZW5jZS1ndWlkZQ==\">JSSE 参考指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL215YmF0aXMuZ2l0aHViLmlvL215YmF0aXMtMy96aC9pbmRleC5odG1s\">MyBatis 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9uZXR0eS00LXVzZXItZ3VpZGU=\">Netty 4.x 用户指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9lc3NlbnRpYWwtbmV0dHktaW4tYWN0aW9u\">Netty 实战 (精髓)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL251dHpib29rLndlbmRhbC5uZXQ=\">Nutz-book Nutz 烹调向导</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9udXR6YW0uY29tL2NvcmUvbnV0el9wcmVmYWNlLmh0bWw=\">Nutz 文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9yZXN0LWluLWFjdGlvbg==\">REST 实战</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3FpYmFvZ3VhbmcvU3ByaW5nLUJvb3QtUmVmZXJlbmNlLUd1aWRl\">Spring Boot 参考指南</span> (🚧 <em>翻译中</em>)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9zcHJpbmctZnJhbWV3b3JrLTQtcmVmZXJlbmNl\">Spring Framework 4.x 参考文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dheWxhdS9SZXN0RGVtbw==\">用 jersey 构建 REST 服务</span></li>\n</ul>\n<h3 id=\"javascript\"><a class=\"markdownIt-Anchor\" href=\"#javascript\">#</a> JavaScript</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FkYW1sdS9qYXZhc2NyaXB0LXN0eWxlLWd1aWRl\">Airbnb JavaScript 规范</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2VzNi5ydWFueWlmZW5nLmNvbQ==\">ECMAScript 6 入门</span> - 阮一峰</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JxNjkuY29tL2Jsb2cvYXJ0aWNsZXMvc2NyaXB0Lzg2OC9nb29nbGUtamF2YXNjcmlwdC1zdHlsZS1ndWlkZS5odG1s\">Google JavaScript 代码风格指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xpdWJpbi5naXRodWIuaW8vcHJvbWlzZXMtYm9vay8=\">JavaScript Promise 迷你书</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTcwMTEyMTY0OTQ1L2h0dHA6Ly90eXBlb2YubmV0L3MvanNtZWNoLw==\">Javascript 原理</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2phdmFzY3JpcHQucnVhbnlpZmVuZy5jb20=\">JavaScript 标准参考教程（alpha）</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2pheWxpL2phdmFzY3JpcHQtcGF0dGVybnM=\">《JavaScript 模式》</span> (《JavaScript patterns》译本)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2p1c3RqYXZhYy8xMi1qYXZhc2NyaXB0LXF1aXJrcw==\">javascript 的 12 个怪癖</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JvbnNhaWRlbi5naXRodWIuaW8vSmF2YVNjcmlwdC1HYXJkZW4vemgv\">JavaScript 秘密花园</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2ljb2RlaXQub3JnL2pzY2NwLw==\">JavaScript 核心概念及实践</span> (PDF)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3Bpai5yb2JpbnF1Lm1l\">Javascript 编程指南</span> (<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1JvYmluUXUvUHJvZ3JhbWluZy1Jbi1KYXZhc2NyaXB0\">源码</span>)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2dldGlmeS9Zb3UtRG9udC1Lbm93LUpTL3RyZWUvMWVkLXpoLUNO\">你不知道的 Javascript</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2p1c3RqYXZhYy5jb20vbmFtZWQtZnVuY3Rpb24tZXhwcmVzc2lvbnMtZGVteXN0aWZpZWQuaHRtbA==\">命名函数表达式探秘</span> - kangax、为之漫笔 (翻译) (原始地址无法打开，所以此处地址为 justjavac 博客上的备份)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vc2NoaW5hLm5ldC90cmFuc2xhdGUvbGVhcm5pbmctamF2YXNjcmlwdC1kZXNpZ24tcGF0dGVybnM=\">学用 JavaScript 设计模式</span> - 开源中国</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9Ub21YdS9hcmNoaXZlLzIwMTEvMTIvMTUvMjI4ODQxMS5odG1s\">深入理解 JavaScript 系列</span></li>\n</ul>\n<h4 id=\"angularjs\"><a class=\"markdownIt-Anchor\" href=\"#angularjs\">#</a> AngularJS</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3plbnNoL0FuZ3VsYXJqc1R1dG9yaWFsX2Nu\">AngularJS 入门教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21nZWNoZXYvYW5ndWxhcmpzLXN0eWxlLWd1aWRlL2Jsb2IvbWFzdGVyL1JFQURNRS16aC1jbi5tZA==\">AngularJS 最佳实践和风格指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53YXlsYXUuY29tL2J1aWxkLWFuZ3VsYXJqcy1hcHAtd2l0aC15ZW9tYW4taW4td2luZG93cy8=\">在 Windows 环境下用 Yeoman 构建 AngularJS 项目</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3h1ZmVpL01ha2UtWW91ci1Pd24tQW5ndWxhckpTL2Jsb2IvbWFzdGVyLzAxLm1k\">构建自己的 AngularJS</span></li>\n</ul>\n<h4 id=\"backbonejs\"><a class=\"markdownIt-Anchor\" href=\"#backbonejs\">#</a> Backbone.js</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jc3M4OC5jb20vZG9jL2JhY2tib25lLw==\">Backbone.js 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy50aGU1ZmlyZS5jb20vYmFja2JvbmUtanMtdHV0b3JpYWxzLXBkZi1kb3dubG9hZC5odG1s\">Backbone.js 入门教程</span> (PDF)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZTVmaXJlL2JhY2tib25lanMtbGVhcm5pbmctbm90ZQ==\">Backbone.js 入门教程第二版</span></li>\n</ul>\n<h4 id=\"d3js\"><a class=\"markdownIt-Anchor\" href=\"#d3js\">#</a> D3.js</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2QzLmRlY2VtYmVyY2FmZS5vcmc=\">Learning D3.JS</span> - 十二月咖啡馆</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21ib3N0b2NrL2QzL3dpa2kvQVBJLS0lRTQlQjglQUQlRTYlOTYlODclRTYlODklOEIlRTUlODYlOEM=\">官方 API 文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhbmdfX3RpYW54dS9hcnRpY2xlL2NhdGVnb3J5LzE2MjM0Mzc=\">张天旭的 D3 教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS93aW5sZWlzdXJlL3RhZy9EMy5qcy8=\">楚狂人的 D3 教程</span></li>\n</ul>\n<h4 id=\"deno\"><a class=\"markdownIt-Anchor\" href=\"#deno\">#</a> Deno</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZW5vLXR1dG9yaWFsLmpzLm9yZw==\">Deno 钻研之术</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGVuc2hlbmhhaS5jb20vZGVub19ub3Rl\">Deno 进阶开发笔记</span> - 大深海</li>\n</ul>\n<h4 id=\"electronjs\"><a class=\"markdownIt-Anchor\" href=\"#electronjs\">#</a> Electron.js</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aXphcmRmb3JjZWwuZ2l0Ym9va3MuaW8vZWxlY3Ryb24tZG9jL2NvbnRlbnQ=\">Electron 中文文档</span> - WizardForcel</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudzNjc2Nob29sLmNuL2VsZWN0cm9ubWFudWFs\">Electron 中文文档</span> - W3Cschool</li>\n</ul>\n<h4 id=\"extjs\"><a class=\"markdownIt-Anchor\" href=\"#extjs\">#</a> ExtJS</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2V4dGpzLWRvYy1jbi5naXRodWIuaW8vZXh0NGFwaS8=\">Ext4.1.0 中文文档</span></li>\n</ul>\n<h4 id=\"impressjs\"><a class=\"markdownIt-Anchor\" href=\"#impressjs\">#</a> impress.js</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2tva2RlbW8vaW1wcmVzcy5qcy10dXRvcmlhbC1pbi1DaGluZXNl\">impress.js 的中文教程</span></li>\n</ul>\n<h4 id=\"jquery\"><a class=\"markdownIt-Anchor\" href=\"#jquery\">#</a> jQuery</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2k1dGluZy5naXRodWIuaW8vSG93LXRvLXdyaXRlLWpRdWVyeS1wbHVnaW4vYnVpbGQvanF1ZXJ5LnBsdWdpbi5odG1s\">How to write jQuery plugin</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ub3dhbWFnaWMubmV0L2xpYnJhcnlzL2Jvb2tzL2NvbnRlbnRzL2pxdWVyeQ==\">简单易懂的 JQuery 魔法</span></li>\n</ul>\n<h4 id=\"nodejs\"><a class=\"markdownIt-Anchor\" href=\"#nodejs\">#</a> Node.js</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2V4cHJlc3Nqcy5qc2VyLnVz\">express.js 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2phdmFzY3JpcHQucnVhbnlpZmVuZy5jb20vbm9kZWpzL2V4cHJlc3MuaHRtbA==\">Express 框架</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2d1by15dS9rb2EtZ3VpZGU=\">koa 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvbGVhcm55b3Vub2RlLXpoLWNu\">Learn You The Node.js For Much Win! (中文版)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2k1dGluZy5naXRodWIuaW8vbm9kZS1kZWJ1Zy10dXRvcmlhbC8=\">Node debug 三法三例</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2pvbGxlbi9ub2RlanMtZnVsbHN0YWNrLWxlc3NvbnM=\">Node.js Fullstack《從零到一的進撃》</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Fsc290YW5nL25vZGUtbGVzc29ucw==\">Node.js 包教不包会</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy10dy9ub2RlanMtd2lraS1ib29r\">Nodejs Wiki Book</span> (繁体中文)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay8wNTMyL25vZGVqcy9kZXRhaWxz\">nodejs 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ub2RlYmVnaW5uZXIub3JnL2luZGV4LXpoLWNuLmh0bWw=\">Node 入门</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay8wNTMyL25vZGVqcy9kZXRhaWxz\">The NodeJS 中文文档</span> - 社区翻译</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL25xZGVuZy5naXRodWIuaW8vNy1kYXlzLW5vZGVqcy8=\">七天学会 NodeJS</span> - 阿里团队</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25zd2Jtdy9OLWJsb2c=\">使用 Express + MongoDB 搭建多人博客</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL25vZGVqcy5jdG9saWIuY29tL2RvY3Mvc2ZpbGUvanN0cmFpbmluZy9lbmdpbmVlcmluZy5odG1s\">JavaScript 全栈工程师培训材料</span></li>\n</ul>\n<h4 id=\"reactjs\"><a class=\"markdownIt-Anchor\" href=\"#reactjs\">#</a> React.js</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3RoZUppYW4vYnVpbGQtYS1obi1mcm9udC1wYWdl\">Learn React &amp; Webpack by building the Hacker News front page</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hhdGVvbmlvbi9yZWFjdC1iaXRzLUNO\">React-Bits 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dpa2kuamlrZXh1ZXl1YW4uY29tL3Byb2plY3QvcmVhY3QtbmF0aXZlLw==\">React Native 中文文档 (含最新 Android 内容)</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Zha2VmaXNoL3JlYWN0LXdlYnBhY2stY29va2Jvb2s=\">React webpack-cookbook</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kaXNjb3VudHJ5LmdpdGh1Yi5pby9yZWFjdC8=\">React.js 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2ZyYXNlcnh1Lm1lL2ludHJvLXRvLXJlYWN0Lw==\">React.js 入门教程</span></li>\n</ul>\n<h4 id=\"vuejs\"><a class=\"markdownIt-Anchor\" href=\"#vuejs\">#</a> Vue.js</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvZ3VpZGUv\">Vue.js 中文文档</span></li>\n</ul>\n<h4 id=\"zeptojs\"><a class=\"markdownIt-Anchor\" href=\"#zeptojs\">#</a> Zepto.js</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Nzczg4LmNvbS9kb2MvemVwdG9qc19hcGk=\">Zepto.js 中文文档</span></li>\n</ul>\n<h3 id=\"latex\"><a class=\"markdownIt-Anchor\" href=\"#latex\">#</a> LaTeX</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kcmFscGhhLmNvbS96aC90ZWNoL3RlY2guaHRt\">LaTeX 笔记</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2N0YW4ub3JnL3BrZy9sc2hvcnQtemgtY24=\">一份不太简短的 LaTeX2ε 介绍</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzQ5OTUxMzMxL2dyYWR1YXRlLXByb2plY3QtMTAycGovYmxvYi9tYXN0ZXIvZG9jcy9sYXRleDEyMy5wZGY=\">大家來學 LaTeX</span> (PDF)</li>\n</ul>\n<h3 id=\"lisp\"><a class=\"markdownIt-Anchor\" href=\"#lisp\">#</a> LISP</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2FjbC5yZWFkdGhlZG9jcy5vcmcvZW4vbGF0ZXN0Lw==\">ANSI Common Lisp 中文翻译版</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pdHVyaW5nLmNvbS5jbi9taW5pYm9vay84NjI=\">Common Lisp 高级编程技术</span> (《On Lisp》中文版)</li>\n</ul>\n<h3 id=\"lua\"><a class=\"markdownIt-Anchor\" href=\"#lua\">#</a> Lua</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53M2NzY2hvb2wuY2MvbWFudWFsL2x1YTUzZG9jL2NvbnRlbnRzLmh0bWw=\">Lua 5.3 参考手册</span></li>\n</ul>\n<h3 id=\"markdown\"><a class=\"markdownIt-Anchor\" href=\"#markdown\">#</a> Markdown</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJrZG93bi50dw==\">Markdown 語法說明</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qaWFuc2h1LmNvbS9wL3E4MVJFUg==\">献给写作者的 Markdown 新手指南</span></li>\n</ul>\n<h3 id=\"mysql\"><a class=\"markdownIt-Anchor\" href=\"#mysql\">#</a> MySQL</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbmJsb2dzLmNvbS9tci13aWQvYXJjaGl2ZS8yMDEzLzA1LzA5LzMwNjgyMjkuaHRtbA==\">21 分钟 MySQL 入门教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cuY29kaW5nbGFicy5vcmcvYXJ0aWNsZXMvdGhlb3J5LW9mLW15c3FsLWluZGV4Lmh0bWw=\">MySQL 索引背后的数据结构及算法原理</span></li>\n</ul>\n<h3 id=\"nosql\"><a class=\"markdownIt-Anchor\" href=\"#nosql\">#</a> NoSQL</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Rpc3F1ZS5odWFuZ3oubWU=\">Disque 使用教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3JlZGlzZG9jLmNvbQ==\">Redis 命令参考</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3JlZGlzYm9vay5jb20=\">Redis 设计与实现</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2p1c3RpbnlodWFuZy90aGUtbGl0dGxlLW1vbmdvZGItYm9vay1jbi9ibG9iL21hc3Rlci9tb25nb2RiLm1k\">The Little MongoDB Book</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0phc29uTGFpMjU2L3RoZS1saXR0bGUtcmVkaXMtYm9vay9ibG9iL21hc3Rlci9jbi9yZWRpcy5tZA==\">The Little Redis Book</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h1YW5nejE5OTAvYW5ub3RhdGVkX3JlZGlzX3NvdXJjZQ==\">带有详细注释的 Redis 2.6 代码</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2h1YW5nejE5OTAvcmVkaXMtMy4wLWFubm90YXRlZA==\">带有详细注释的 Redis 3.0 代码</span></li>\n</ul>\n<h3 id=\"perl\"><a class=\"markdownIt-Anchor\" href=\"#perl\">#</a> Perl</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZheWxhbmQvY2hpbmVzZS1wZXJsLWJvb2s=\">Master Perl Today</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTUwMzI2MDczMjM1L2h0dHA6Ly9uZXQucGt1LmVkdS5jbi9+eWhmL3R1dG9yaWFsL3BlcmwvcGVybC5odG1s\">Perl 5 教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy55aWliYWkuY29tL3Blcmw=\">Perl 教程</span></li>\n</ul>\n<h3 id=\"php\"><a class=\"markdownIt-Anchor\" href=\"#php\">#</a> PHP</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlaWduaXRlci5vcmcudHcvdXNlcmd1aWRlMw==\">CodeIgniter 使用手冊</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RvY3MucGhwY29tcG9zZXIuY29t\">Composer 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5teWxlZnRzdHVkaW8uY29t\">Phalcon7 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d1bGlqdW4uZ2l0aHViLmlvL3BocC10aGUtcmlnaHQtd2F5Lw==\">PHP 之道</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3BocC5uZXQvbWFudWFsL3poLw==\">PHP 中文手册</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wc3IucGhwaHViLm9yZw==\">PHP 标准规范中文版</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy55aWljaGluYS5jb20vZG9jL2d1aWRlLzIuMA==\">Yii2 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5waHAtaW50ZXJuYWxzLmNvbS9ib29rLw==\">深入理解 PHP 内核</span></li>\n</ul>\n<h4 id=\"laravel\"><a class=\"markdownIt-Anchor\" href=\"#laravel\">#</a> Laravel</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2QubGFyYXZlbC1jaGluYS5vcmcvZG9jcy81LjQ=\">Laravel 5.4 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmt1LmNvbS9kb2NzL2xhcmF2ZWwvNi54\">Laravel 6 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmt1LmNvbS9kb2NzL2xhcmF2ZWwvNy54\">Laravel 7 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmt1LmNvbS9kb2NzL2xhcmF2ZWwvOC54\">Laravel 8 中文文档</span></li>\n</ul>\n<h4 id=\"symfony\"><a class=\"markdownIt-Anchor\" href=\"#symfony\">#</a> Symfony</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93dXN1b3B1LmdpdGJvb2tzLmlvL3N5bWZvbnkyX3R1dG9yaWFsL2NvbnRlbnQ=\">Symfony 2 实例教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zeW1mb255LmNvbS9kb2MvNS4wL3RoZS1mYXN0LXRyYWNrL3poX0NOL2luZGV4Lmh0bWw=\">Symfony 5 快速开发</span></li>\n</ul>\n<h3 id=\"postgresql\"><a class=\"markdownIt-Anchor\" href=\"#postgresql\">#</a> PostgreSQL</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dvcmtzLmppbmJ1Z3VvLmNvbS9wb3N0Z3Jlc3FsL21lbnU4MjMvaW5kZXguaHRtbA==\">PostgreSQL 8.2.3 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wb3N0Z3Jlcy5jbi9kb2NzLzkuMy9pbmRleC5odG1s\">PostgreSQL 9.3.1 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wb3N0Z3Jlcy5jbi9kb2NzLzkuNC9pbmRleC5odG1s\">PostgreSQL 9.4.4 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wb3N0Z3Jlcy5jbi9kb2NzLzkuNS9pbmRleC5odG1s\">PostgreSQL 9.5.3 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5wb3N0Z3Jlcy5jbi9kb2NzLzkuNi9pbmRleC5odG1s\">PostgreSQL 9.6.0 中文文档</span></li>\n</ul>\n<h3 id=\"python\"><a class=\"markdownIt-Anchor\" href=\"#python\">#</a> Python</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vc2dlby5jbi9tYXRwbG90bGliLw==\">Matplotlib 3.0.3 中文文档</span> - (Online)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vc2dlby5jbi9udW1weS8=\">Numpy 1.16 中文文档</span> - (Online)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RvY3NweTN6aC5yZWFkdGhlZG9jcy5vcmcvZW4vbGF0ZXN0Lw==\">Python 3 文档 (简体中文) 3.2.2 documentation</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vc2dlby5jbi9jcHl0aG9uLw==\">Python 3.8.0a3 中文文档</span> - (目前在线最全的中文文档了，Online)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3B5dGhvbjMtY29va2Jvb2sucmVhZHRoZWRvY3MuaW8vemhfQ04vbGF0ZXN0Lw==\">Python Cookbook 第三版</span> - David Beazley、Brian K.Jones、熊能 (翻译)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5weXRob25kb2MuY29t\">Python 中文学习大本营</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9weXRob25ndWlkZWNuLnJlYWR0aGVkb2NzLmlvL3poL2xhdGVzdC8=\">Python 最佳实践指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2Z1bmhhY2tzLm5ldC9leHBsb3JlLXB5dGhvbg==\">Python 之旅</span> - Ethan</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5saWFveHVlZmVuZy5jb20vd2lraS8wMDE0MzE2MDg5NTU3MjY0YTZiMzQ4OTU4ZjQ0OTk0OWRmNDJhNmQzYTJlNTQyYzAwMA==\">Python 教程 - 廖雪峰的官方网站</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbnRlcnB5LmVhc3RsYWtlc2lkZS5jb20=\">Python 进阶</span> - eastlakeside</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vc2dlby5jbi90b3JuYWRvLw==\">Tornado 6.1 中文文档</span> - (网络上其他的都是较旧版本的，Online)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZGVyZWsxMTg0NDA1OTU5L3AvODU3OTQyOC5odG1s\">人生苦短，我用 python</span> - (内含丰富的笔记以及各类教程)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3RvbGliLmNvbS9kb2NzL3NmaWxlL3RoaW5rLXB5dGhvbi0yZS8wLmh0bWw=\">像计算机科学家一样思考 Python</span> - Allen B. Downey、大胖哥 (翻译)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ppZWNoaWMvZGl2ZWludG9weXRob24z\">深入 Python 3</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib3AubW9sdW4ubmV0\">简明 Python 教程</span> - Swaroop C H、沈洁元 (翻译)、漠伦 (翻译)</li>\n</ul>\n<h4 id=\"django\"><a class=\"markdownIt-Anchor\" href=\"#django\">#</a> Django</h4>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueWl5aWJvb2tzLmNuL3h4L0RqYW5nb18xLjExLjYvaW5kZXguaHRtbA==\">Django 1.11.6 中文文档</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5vc2dlby5jbi9kamFuZ28v\">Django 2.2.1 中文文档</span> - (这个很新，也很全，Online)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RqYW5nb2Jvb2sucHkzay5jbi8yLjAv\">Django book 2.0</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90dXRvcmlhbC5kamFuZ29naXJscy5vcmcvemgv\">Django Girls 教程 (1.11)</span> (HTML)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZHVzYWlwaG90by5jb20vYXJ0aWNsZS9kZXRhaWwvMg==\">Django 搭建个人博客教程 (2.1)</span> - (杜赛) (HTML)</li>\n</ul>\n<h3 id=\"r\"><a class=\"markdownIt-Anchor\" href=\"#r\">#</a> R</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NyYW4uci1wcm9qZWN0Lm9yZy9kb2MvY29udHJpYi9MaXUtRkFRLnBkZg==\">153 分钟学会 R</span> (PDF)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NyYW4uci1wcm9qZWN0Lm9yZy9kb2MvY29udHJpYi9EaW5nLVItaW50cm9fY24ucGRm\">R 导论</span> (《An Introduction to R》中文版) (PDF)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3lhbnBpbmcubWUvc2hpbnktdHV0b3JpYWwv\">用 R 构建 Shiny 应用程序</span> (《Building ‘Shiny’ Applications with R》中文版)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NyYW4uci1wcm9qZWN0Lm9yZy9kb2MvY29udHJpYi9YdS1TdGF0aXN0aWNzX2FuZF9SLnBkZg==\">统计学与 R 读书笔记</span> (PDF)</li>\n</ul>\n<h3 id=\"restructuredtext\"><a class=\"markdownIt-Anchor\" href=\"#restructuredtext\">#</a> reStructuredText</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5weXRob25kb2MuY29tL3NwaGlueC9yZXN0Lmh0bWw=\">reStructuredText 入门</span></li>\n</ul>\n<h3 id=\"ruby\"><a class=\"markdownIt-Anchor\" href=\"#ruby\">#</a> Ruby</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0p1YW5pdG9GYXRhcy9yYWlscy1zdHlsZS1ndWlkZS9ibG9iL21hc3Rlci9SRUFETUUtemhDTi5tZA==\">Rails 风格指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9paG93ZXIudHcvcmFpbHM0Lw==\">Ruby on Rails 实战圣经</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2d1aWRlcy5ydWJ5LWNoaW5hLm9yZw==\">Ruby on Rails 指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0p1YW5pdG9GYXRhcy9ydWJ5LXN0eWxlLWd1aWRlL2Jsb2IvbWFzdGVyL1JFQURNRS16aENOLm1k\">Ruby 风格指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zaW5hdHJhcmIuY29tL2ludHJvLXpoLmh0bWw=\">Sinatra</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xydGh3LmdpdGh1Yi5pbw==\">笨方法学 Ruby</span></li>\n</ul>\n<h3 id=\"rust\"><a class=\"markdownIt-Anchor\" href=\"#rust\">#</a> Rust</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0thaXNlclkvcnVzdC1ib29rLWNoaW5lc2U=\">Rust 官方教程</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Bob3Rpbm8vcnVzdC1ub3Rlcw==\">Rust 语言学习笔记</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J1c3RjYy9SdXN0UHJpbWVy\">RustPrimer</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3J1c3RjYy9ydXN0LWJ5LWV4YW1wbGUv\">通过例子学习 Rust</span></li>\n</ul>\n<h3 id=\"scala\"><a class=\"markdownIt-Anchor\" href=\"#scala\">#</a> Scala</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3R3aXR0ZXIuZ2l0aHViLmlvL2VmZmVjdGl2ZXNjYWxhL2luZGV4LWNuLmh0bWw=\">Effective Scala</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay93aW5kb3IvYmVnaW5uZXJzLWd1aWRlLXRvLXNjYWxhL2RldGFpbHM=\">Scala 初学者指南</span> (《The Neophyte’s Guide to Scala》中文版)</li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3R3aXR0ZXIuZ2l0aHViLmlvL3NjYWxhX3NjaG9vbC96aF9jbi9pbmRleC5odG1s\">Scala 课堂</span> (Twitter 的 Scala 中文教程)</li>\n</ul>\n<h3 id=\"scheme\"><a class=\"markdownIt-Anchor\" href=\"#scheme\">#</a> Scheme</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2RlYXRoa2luZy5naXRodWIuaW8veWFzdC1jbi8=\">Scheme 入门教程</span> (《Yet Another Scheme Tutorial》中文版)</li>\n</ul>\n<h3 id=\"scratch\"><a class=\"markdownIt-Anchor\" href=\"#scratch\">#</a> Scratch</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2NjY2djaGluZXNlLnN0cmlraW5nbHkuY29t\">创意计算课程指南</span></li>\n</ul>\n<h3 id=\"shell\"><a class=\"markdownIt-Anchor\" href=\"#shell\">#</a> Shell</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL21lLjUyZmh5LmNvbS9zaGVsbC1ib29rLw==\">shell-book</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dpa2kudWJ1bnR1Lm9yZy5jbi9TaGVsbCVFNyVCQyU5NiVFNyVBOCU4QiVFNSU5RiVCQSVFNyVBMSU4MA==\">Shell 编程基础</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aW55bGFiLmdpdGJvb2tzLmlvL3NoZWxsYm9vay9jb250ZW50\">Shell 编程范例</span> - 泰晓科技</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Fpbmp4LzMwbWluX2d1aWRlcy9ibG9iL21hc3Rlci9zaGVsbC5tZA==\">Shell 脚本编程 30 分钟入门</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2JpbGxpZTY2LmdpdGh1Yi5pby9UTENML2Jvb2sv\">The Linux Command Line 中文版</span></li>\n</ul>\n<h3 id=\"swift\"><a class=\"markdownIt-Anchor\" href=\"#swift\">#</a> Swift</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ2l0Ym9vay5jb20vYm9vay9udW1iYmJiYi8tdGhlLXN3aWZ0LXByb2dyYW1taW5nLWxhbmd1YWdlLS9kZXRhaWxz\">《The Swift Programming Language》中文版</span></li>\n</ul>\n<h3 id=\"typescript\"><a class=\"markdownIt-Anchor\" href=\"#typescript\">#</a> TypeScript</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2prY2hhby90eXBlc2NyaXB0LWJvb2stY2hpbmVzZQ==\">TypeScript Deep Dive 中文版</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudHNsYW5nLmNu\">TypeScript 中文网</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS93M2Nub3RlL2dldHRpbmctc3RhcnRlZC13aXRoLXR5cGVzY3JpcHQuaHRtbA==\">TypeScript 入门教程</span></li>\n</ul>\n<h3 id=\"vba-microsoft-visual-basic-applications\"><a class=\"markdownIt-Anchor\" href=\"#vba-microsoft-visual-basic-applications\">#</a> VBA (Microsoft Visual Basic Applications)</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1lvdWNoaWVuL2NvbmNpc2UtZXhjZWwtdmJh\">简明 Excel VBA</span></li>\n</ul>\n<h3 id=\"vim\"><a class=\"markdownIt-Anchor\" href=\"#vim\">#</a> Vim</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5zdHVkeS1hcmVhLm9yZy90aXBzL3ZpbS9pbmRleC5odG1s\">大家來學 VIM</span></li>\n</ul>\n<h3 id=\"visual-prolog\"><a class=\"markdownIt-Anchor\" href=\"#visual-prolog\">#</a> Visual Prolog</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dpa2kudmlzdWFsLXByb2xvZy5jb20vaW5kZXgucGhwP3RpdGxlPUFfQmVnaW5uZXJzX0d1aWRlX3RvX1Zpc3VhbF9Qcm9sb2dfaW5fQ2hpbmVzZQ==\">Visual Prolog 7 初学指南</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3dpa2kudmlzdWFsLXByb2xvZy5jb20vaW5kZXgucGhwP3RpdGxlPVZpc3VhbF9Qcm9sb2dfZm9yX1R5cm9zX2luX0NoaW5lc2U=\">Visual Prolog 7 边练边学</span></li>\n</ul>\n<h3 id=\"webassembly\"><a class=\"markdownIt-Anchor\" href=\"#webassembly\">#</a> WebAssembly</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tLzNkZ2VuL2NwcHdhc20tYm9vaw==\">C/C++ 面向 WebAssembly 编程</span></li>\n</ul>\n",
            "tags": [
                "leetcode",
                "编程技巧"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/10/31/code/leetcode/Binary_Search/",
            "url": "http://qianqiu-cell.github.io/2023/10/31/code/leetcode/Binary_Search/",
            "title": "二分查找的正确编写方法",
            "date_published": "2023-10-30T16:00:00.000Z",
            "content_html": "<p>  写二分法，区间的定义一般为两种，闭区间或者开区间</p>\n<p>（1）左闭右闭区间<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi><mo separator=\"true\">,</mo><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[left, right]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">]</span></span></span></span></p>\n<ul>\n<li><code>while(left&lt;=right)</code>  要使用 <code>&lt;=</code> ，因为 <code>left==right</code>  是有意义的，所以使用 <code>&lt;=</code></li>\n<li><code>if (nums[middle] &gt; target)</code> ， <code>right</code>  要赋值为 <code>middle - 1</code> ，因为当前这个 <code>nums[middle]</code>  一定不是 <code>target</code> ，那么接下来要查找的左区间结束下标位置就是 <code>middle - 1</code> ，反之同理。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        left<span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">while</span> left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            middle <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                left <span class=\"token operator\">=</span> middle <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">elif</span> nums<span class=\"token punctuation\">[</span>middle<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> target<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                right <span class=\"token operator\">=</span> middle <span class=\"token operator\">-</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">return</span> middle</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr></table></figure><p>（2）左闭右开区间<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>l</mi><mi>e</mi><mi>f</mi><mi>t</mi><mo separator=\"true\">,</mo><mi>r</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[left, right)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span></p>\n<ul>\n<li><code>while(left&lt;right)</code>  要使用 <code>&lt;</code> ，因为 <code>left==right</code>  是没有意义的，所以使用 <code>&lt;</code></li>\n<li><code>if (nums[middle] &gt; target)</code> ， <code>right</code>  要赋值为 <code>middle</code> ，因为当前 <code>nums[middle]</code>  不等于 <code>target</code> ，去左区间继续寻找，而寻找区间是左闭右开区间，所以 <code>right</code>  更新为 <code>middle</code> ，即：下一个查询区间不会去比较 <code>nums[middle]</code></li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">search</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        left<span class=\"token punctuation\">,</span>right  <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">while</span> left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> target<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                left <span class=\"token operator\">=</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">elif</span> nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> target<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                right <span class=\"token operator\">=</span> mid</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token keyword\">return</span> mid</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "编程技巧"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/10/16/code/leetcode/time_and_space_complexity/",
            "url": "http://qianqiu-cell.github.io/2023/10/16/code/leetcode/time_and_space_complexity/",
            "title": "时间及空间复杂度",
            "date_published": "2023-10-15T16:00:00.000Z",
            "content_html": "<h1 id=\"一-前言\"><a class=\"markdownIt-Anchor\" href=\"#一-前言\">#</a> 一、前言</h1>\n<p>  算法（Algorithm）是指用来操作数据、解决程序问题的一组方法。对于同一个问题，使用不同的算法，也许最终得到的结果是一样的，但在过程中消耗的资源和时间却会有很大的区别。不同算法之间的优劣主要从算法所占用的<mark>时间</mark>和<mark>空间</mark>两个维度去考量。</p>\n<ul>\n<li>时间维度：是指执行当前算法所消耗的时间，我们通常用<mark>时间复杂度</mark>来描述。</li>\n<li>空间维度：是指执行当前算法需要占用多少内存空间，我们通常用<mark>空间复杂度</mark>来描述。</li>\n</ul>\n<p>  因此，评价一个算法的效率主要是看它的时间复杂度和空间复杂度情况。然而，有的时候时间和空间却又是不可兼得的，那么我们就需要从中去取一个平衡点。目前在这两者之中，更加偏向于关注时间复杂度（时间是硬性指标，而空间可以通过增加内存的方式进行解决）。</p>\n<h1 id=\"二-时间复杂度\"><a class=\"markdownIt-Anchor\" href=\"#二-时间复杂度\">#</a> 二、时间复杂度</h1>\n<h2 id=\"21-概念介绍\"><a class=\"markdownIt-Anchor\" href=\"#21-概念介绍\">#</a> 2.1 概念介绍</h2>\n<p>  一种通用的方法为：<mark>大 O 符号表示法</mark>，即 <code>T(n) = O(f(n))</code> 。以一行代码的执行时间为单位，统计程序执行所需的所有时间，取最高阶且令系数为 1，即可得到代码的时间复杂度。常见的时间复杂度有：</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>常数阶</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></td>\n</tr>\n<tr>\n<td>对数阶</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(logn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></td>\n</tr>\n<tr>\n<td>线性阶</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></td>\n</tr>\n<tr>\n<td>线性对数阶</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nlogN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span></td>\n</tr>\n<tr>\n<td>平方阶</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td>\n</tr>\n<tr>\n<td>立方阶</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td>\n</tr>\n<tr>\n<td>K 次方阶</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.099108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td>\n</tr>\n<tr>\n<td>指数阶</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(2^n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></td>\n</tr>\n<tr>\n<td>阶乘阶</td>\n<td><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">!</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n!)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">!</span><span class=\"mclose\">)</span></span></span></span></td>\n</tr>\n</tbody>\n</table>\n<p>  有如下几点需要特别说明：</p>\n<ul>\n<li>表中的时间复杂度依次递增。在一般的工程实践当中，只要时间复杂度达到<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，那么这种算法在工程应用中就没有什么意义了，即使是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 在应用的过程中也需要谨慎考量。其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mi>k</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.099108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(2^n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">!</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n!)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">!</span><span class=\"mclose\">)</span></span></span></span> 被称为非多项式量级，也即 NP 难问题。</li>\n<li>需要注意的是在对数阶中，没有表明底数，因为可以通过换底公式将底数进行转换。</li>\n<li>当有多个变量决定时间复杂度时，时间复杂度可以表示为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m+n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>×</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m\\times n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> 等。</li>\n</ul>\n<h2 id=\"22-几个小栗子\"><a class=\"markdownIt-Anchor\" href=\"#22-几个小栗子\">#</a> 2.2 几个小栗子</h2>\n<p>（1）时间复杂度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">cal1</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        sum <span class=\"token operator\">=</span> sum <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>（2）时间复杂度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">cal2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            sum<span class=\"token operator\">=</span> sum <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>（3）时间复杂度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(logn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">cal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> n<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        i <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>（4）时间复杂度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m+n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">mnCal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> m，<span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">int</span> sum_1 <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> m<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        sun_1 <span class=\"token operator\">=</span> sum__1 <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">int</span> sum_2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        sum_2 <span class=\"token operator\">=</span> sum_2 <span class=\"token operator\">+</span> j<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> sun_1 <span class=\"token operator\">+</span> sun<span class=\"token punctuation\">.</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"二-空间复杂度\"><a class=\"markdownIt-Anchor\" href=\"#二-空间复杂度\">#</a> 二、空间复杂度</h1>\n<h2 id=\"21-概念介绍-2\"><a class=\"markdownIt-Anchor\" href=\"#21-概念介绍-2\">#</a> 2.1 概念介绍</h2>\n<p>  一种通用的方法为：<mark>大 O 符号表示法</mark>，即 <code>S(n) = O(f(n))</code> 。以单个变量所占用空间为单位，统计程序占用的总内存大小，取最高阶且令系数为 1，即可得到代码的空间复杂度。常见的空间复杂度有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<h2 id=\"22-几个小栗子-2\"><a class=\"markdownIt-Anchor\" href=\"#22-几个小栗子-2\">#</a> 2.2 几个小栗子</h2>\n<p>（1）空间复杂度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">++</span>i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> j<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>（2）空间复杂度<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> m <span class=\"token operator\">=</span> new <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   j <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "leetcode",
                "编程技巧"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/07/08/code/matlab/matlab_GA/",
            "url": "http://qianqiu-cell.github.io/2023/07/08/code/matlab/matlab_GA/",
            "title": "基于matlab-Sheffield工具箱实现遗传算法",
            "date_published": "2023-07-07T16:00:00.000Z",
            "content_html": "<h1 id=\"一-sheffield工具箱介绍\"><a class=\"markdownIt-Anchor\" href=\"#一-sheffield工具箱介绍\">#</a> 一、Sheffield 工具箱介绍</h1>\n<p>  谢菲尔德（ <code>Sheffield</code> ）遗传算法工具箱是英国谢菲尔德大学开发的遗传算法工具箱，能够为遗传算法研究者和初次使用遗传算法的用户提供了广泛多样的实用函数。但该工具箱不支持多目标优化。</p>\n<h1 id=\"二-sheffield工具箱的使用方法\"><a class=\"markdownIt-Anchor\" href=\"#二-sheffield工具箱的使用方法\">#</a> 二、Sheffield 工具箱的使用方法</h1>\n<ul>\n<li>（1）下载 <code>Sheffield</code>  工具箱，工具箱已保存至百度网盘进行备份（<mark>我的网盘 / 程序 /matlab 遗传算法工具箱 / 篇 1/gatbx</mark>）；</li>\n<li>（2）将工具箱文件夹（<mark>gatbx 文件夹</mark>）放在 matlab 的 toolbox 中；</li>\n<li>（3）将工具箱添加到 <code>matlab</code>  的搜索路径，添加的代码为 <code>addpath(genpath('C:\\Program Files\\Polyspace\\R2020a\\toolbox\\gatbx-toolbox'));</code> ，或在 <code>matlab</code>  主页面，依次点击<mark>主页→设置路径→添加并包含子文件夹→选择 gabtx 文件夹</mark>；</li>\n<li>（4）检查是否安装成功，可在命令行窗口输入 <code>ver('gatbx')</code>  进行查看，若显示如下信息，则证明安装成功；</li>\n</ul>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">></span><span class=\"token operator\">></span> <span class=\"token function\">ver</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gatbx'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>MATLAB 版本<span class=\"token operator\">:</span> <span class=\"token number\">9.12</span><span class=\"token number\">.0</span><span class=\"token number\">.1884302</span> <span class=\"token punctuation\">(</span>R2022a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>MATLAB 许可证编号<span class=\"token operator\">:</span> <span class=\"token number\">968398</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>操作系统<span class=\"token operator\">:</span> Microsoft Windows <span class=\"token number\">10</span> 家庭中文版 Version <span class=\"token number\">10.0</span> <span class=\"token punctuation\">(</span>Build <span class=\"token number\">19045</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Java 版本<span class=\"token operator\">:</span> Java <span class=\"token number\">1.8</span><span class=\"token number\">.0</span>_202<span class=\"token operator\">-</span>b08 with Oracle Corporation Java <span class=\"token function\">HotSpot</span><span class=\"token punctuation\">(</span>TM<span class=\"token punctuation\">)</span> <span class=\"token number\">64</span><span class=\"token operator\">-</span>Bit Server VM mixed mode</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Genetic Algorithm Toolbox                             版本 <span class=\"token number\">1.2</span></pre></td></tr></table></figure><h1 id=\"三-sheffield工具箱的使用案例\"><a class=\"markdownIt-Anchor\" href=\"#三-sheffield工具箱的使用案例\">#</a> 三、Sheffield 工具箱的使用案例</h1>\n<p>  针对 <code>Sheffield</code>  工具箱的使用，共有两个例子可供参考。第一个是工具箱自带的例程，文件位置为<mark>我的网盘 / 程序 /matlab 遗传算法工具箱 / 篇 1 / 遗传算法 /example2.m</mark>；第二个为凸模型奇异值分解文章在图像去噪算例的应用，程序如下：</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>clear all<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">%% 参数设置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>trun_1<span class=\"token operator\">=</span><span class=\"token number\">14</span><span class=\"token punctuation\">;</span>trun_2<span class=\"token operator\">=</span><span class=\"token number\">14</span><span class=\"token punctuation\">;</span>trun_3<span class=\"token operator\">=</span><span class=\"token number\">14</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">% 区间方法取的阶次</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>zhixindu<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">% 取 3 会漏不少，取 4 基本不会漏，大于 500 找到第一个</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>rand_state<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">% 噪声大小，越小噪声越大</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>img_gen_par<span class=\"token operator\">=</span><span class=\"token number\">16300</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">%% 图像的读取及初始化</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>original<span class=\"token operator\">=</span> <span class=\"token function\">imread</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img_50.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">% 读入图像</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>A0 <span class=\"token operator\">=</span> <span class=\"token function\">im2double</span><span class=\"token punctuation\">(</span>original<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>A0_1<span class=\"token operator\">=</span><span class=\"token function\">A0</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>dim<span class=\"token operator\">=</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>A0_1<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>A0_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">% 矩阵 A 的大小</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token number\">j</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token function\">A0_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">j</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token function\">A0_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">j</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>num_sub_1<span class=\"token operator\">=</span><span class=\"token function\">rank</span><span class=\"token punctuation\">(</span>A0_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">% 奇异值数量</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">[</span>U0_1<span class=\"token punctuation\">,</span>s0_1<span class=\"token punctuation\">,</span>V0_1<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">svd</span><span class=\"token punctuation\">(</span>A0_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">% 矩阵 A 的奇异值分解</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">U0_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>       U0_1<span class=\"token operator\">=</span><span class=\"token operator\">-</span>U0_1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">U0_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span>    <span class=\"token comment\">% 注意这里不是 V0，还是跟上一个循环一样是 U0</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>       V0_1<span class=\"token operator\">=</span><span class=\"token operator\">-</span>V0_1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>A0_2<span class=\"token operator\">=</span><span class=\"token function\">A0</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>A0_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">% 矩阵 A 的大小</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token number\">j</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token function\">A0_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">j</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token function\">A0_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">j</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>num_sub_2<span class=\"token operator\">=</span><span class=\"token function\">rank</span><span class=\"token punctuation\">(</span>A0_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">% 奇异值数量</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">[</span>U0_2<span class=\"token punctuation\">,</span>s0_2<span class=\"token punctuation\">,</span>V0_2<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">svd</span><span class=\"token punctuation\">(</span>A0_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">% 矩阵 A 的奇异值分解</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">U0_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>       U0_2<span class=\"token operator\">=</span><span class=\"token operator\">-</span>U0_2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">U0_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span>    <span class=\"token comment\">% 注意这里不是 V0，还是跟上一个循环一样是 U0</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>       V0_2<span class=\"token operator\">=</span><span class=\"token operator\">-</span>V0_2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>A0_3<span class=\"token operator\">=</span><span class=\"token function\">A0</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">% 矩阵 A 的大小</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token number\">j</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token function\">A0_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">j</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token function\">A0_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">j</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>num_sub_3<span class=\"token operator\">=</span><span class=\"token function\">rank</span><span class=\"token punctuation\">(</span>A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">% 奇异值数量</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token punctuation\">[</span>U0_3<span class=\"token punctuation\">,</span>s0_3<span class=\"token punctuation\">,</span>V0_3<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">svd</span><span class=\"token punctuation\">(</span>A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">% 矩阵 A 的奇异值分解</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">U0_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>       U0_3<span class=\"token operator\">=</span><span class=\"token operator\">-</span>U0_3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">U0_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span>    <span class=\"token comment\">% 注意这里不是 V0，还是跟上一个循环一样是 U0</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>       V0_3<span class=\"token operator\">=</span><span class=\"token operator\">-</span>V0_3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\">%% 不确定性设计</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>buquedingzhi<span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>cov_A_1<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token number\">j</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\">%         cov_A_1((i-1)*m+j)=(A0_1(i,j)/rand_state)^2;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token function\">cov_A_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>m<span class=\"token operator\">+</span><span class=\"token number\">j</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>buquedingzhi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>M_1<span class=\"token operator\">=</span>cov_A_1<span class=\"token operator\">.^</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"93\"></td><td><pre>DA_1<span class=\"token operator\">=</span><span class=\"token function\">reshape</span><span class=\"token punctuation\">(</span>cov_A_1<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token keyword\">while</span> true</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    A_rand_1<span class=\"token operator\">=</span><span class=\"token function\">normrnd</span><span class=\"token punctuation\">(</span>A0_1<span class=\"token punctuation\">,</span>DA_1<span class=\"token operator\">.^</span><span class=\"token number\">0.5</span><span class=\"token operator\">/</span>zhixindu<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    sum_temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token keyword\">for</span> i_temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">for</span> j_temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            sum_temp <span class=\"token operator\">=</span> sum_temp <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token function\">A_rand_1</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">A0_1</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">M_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>n<span class=\"token operator\">+</span>j_temp<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token function\">A_rand_1</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">A0_1</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    sum_temp</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">if</span> sum_temp<span class=\"token operator\">&lt;=</span>img_gen_par</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token punctuation\">[</span>U_rand_1<span class=\"token punctuation\">,</span>s_rand_1<span class=\"token punctuation\">,</span>V_rand_1<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">svd</span><span class=\"token punctuation\">(</span>A_rand_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>RA_1<span class=\"token operator\">=</span>cov_A_1<span class=\"token operator\">.^</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'找到第一个不确定性矩阵'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>cov_A_2<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token number\">j</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\">%         cov_A_2((i-1)*m+j)=(A0_2(i,j)/rand_state)^2/12*10;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token function\">cov_A_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>m<span class=\"token operator\">+</span><span class=\"token number\">j</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>buquedingzhi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>M_2<span class=\"token operator\">=</span>cov_A_2<span class=\"token operator\">.^</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"122\"></td><td><pre>DA_2<span class=\"token operator\">=</span><span class=\"token function\">reshape</span><span class=\"token punctuation\">(</span>cov_A_2<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token keyword\">while</span> true</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    A_rand_2<span class=\"token operator\">=</span><span class=\"token function\">normrnd</span><span class=\"token punctuation\">(</span>A0_2<span class=\"token punctuation\">,</span>DA_2<span class=\"token operator\">.^</span><span class=\"token number\">0.5</span><span class=\"token operator\">/</span>zhixindu<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    sum_temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">for</span> i_temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token keyword\">for</span> j_temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            sum_temp <span class=\"token operator\">=</span> sum_temp <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token function\">A_rand_2</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">A0_2</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">M_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>n<span class=\"token operator\">+</span>j_temp<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token function\">A_rand_2</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">A0_2</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    sum_temp</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">if</span> sum_temp<span class=\"token operator\">&lt;=</span>img_gen_par</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token punctuation\">[</span>U_rand_2<span class=\"token punctuation\">,</span>s_rand_2<span class=\"token punctuation\">,</span>V_rand_2<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">svd</span><span class=\"token punctuation\">(</span>A_rand_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>RA_2<span class=\"token operator\">=</span>cov_A_2<span class=\"token operator\">.^</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'找到第二个不确定性矩阵'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>cov_A_3<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token number\">j</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token comment\">%         cov_A_3((i-1)*m+j)=(A0_3(i,j)/rand_state)^2/12*10;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        <span class=\"token function\">cov_A_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>m<span class=\"token operator\">+</span><span class=\"token number\">j</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>buquedingzhi<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>M_3<span class=\"token operator\">=</span>cov_A_3<span class=\"token operator\">.^</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"152\"></td><td><pre>DA_3<span class=\"token operator\">=</span><span class=\"token function\">reshape</span><span class=\"token punctuation\">(</span>cov_A_3<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token keyword\">while</span> true</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    A_rand_3<span class=\"token operator\">=</span><span class=\"token function\">normrnd</span><span class=\"token punctuation\">(</span>A0_3<span class=\"token punctuation\">,</span>DA_3<span class=\"token operator\">.^</span><span class=\"token number\">0.5</span><span class=\"token operator\">/</span>zhixindu<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    sum_temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token keyword\">for</span> i_temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token keyword\">for</span> j_temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            sum_temp <span class=\"token operator\">=</span> sum_temp <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token function\">A_rand_3</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">A0_3</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">M_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>n<span class=\"token operator\">+</span>j_temp<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token function\">A_rand_3</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">A0_3</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span> j_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    sum_temp</pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token keyword\">if</span> sum_temp<span class=\"token operator\">&lt;=</span>img_gen_par</pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre><span class=\"token punctuation\">[</span>U_rand_3<span class=\"token punctuation\">,</span>s_rand_3<span class=\"token punctuation\">,</span>V_rand_3<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">svd</span><span class=\"token punctuation\">(</span>A_rand_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>RA_3<span class=\"token operator\">=</span>cov_A_3<span class=\"token operator\">.^</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'找到第三个不确定性矩阵'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre></pre></td></tr><tr><td data-num=\"172\"></td><td><pre></pre></td></tr><tr><td data-num=\"173\"></td><td><pre></pre></td></tr><tr><td data-num=\"174\"></td><td><pre><span class=\"token comment\">%% 一阶区间 </span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre><span class=\"token comment\">% 根据公式 52 计算奇异值对不确定性参数的导数 Hs，矩阵大小为 512*512,512，第 m*n 个元素表示第 n 个奇异值对第 m 个不确定性参数的导数</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>Hs_1<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span>num_sub_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre><span class=\"token keyword\">for</span> k<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>num_sub_1</pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token number\">j</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"180\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token number\">i</span><span class=\"token operator\">==</span><span class=\"token number\">j</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>                <span class=\"token function\">Hs_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>n<span class=\"token operator\">+</span><span class=\"token number\">j</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">U0_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">j</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">V0_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>            <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre></pre></td></tr><tr><td data-num=\"187\"></td><td><pre><span class=\"token comment\">% 根据公式 56 计算奇异值的半径 Rs，矩阵大小为 2*1</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>Rs_1<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>num_sub_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>num_sub_1</pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    sum_temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token keyword\">for</span> i_temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>m<span class=\"token operator\">*</span>n</pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        sum_temp <span class=\"token operator\">=</span> sum_temp <span class=\"token operator\">+</span> <span class=\"token function\">Hs_1</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">cov_A_1</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">Hs_1</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>    <span class=\"token function\">Rs_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>sum_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre></pre></td></tr><tr><td data-num=\"197\"></td><td><pre></pre></td></tr><tr><td data-num=\"198\"></td><td><pre></pre></td></tr><tr><td data-num=\"199\"></td><td><pre><span class=\"token comment\">% 根据公式 52 计算奇异值对不确定性参数的导数 Hs，矩阵大小为 512*512,512，第 m*n 个元素表示第 n 个奇异值对第 m 个不确定性参数的导数</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>Hs_2<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span>num_sub_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre><span class=\"token keyword\">for</span> k<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>num_sub_2</pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"203\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token number\">j</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"204\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token number\">i</span><span class=\"token operator\">==</span><span class=\"token number\">j</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>                <span class=\"token function\">Hs_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>n<span class=\"token operator\">+</span><span class=\"token number\">j</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">U0_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">j</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">V0_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>            <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre></pre></td></tr><tr><td data-num=\"211\"></td><td><pre><span class=\"token comment\">% 根据公式 56 计算奇异值的半径 Rs，矩阵大小为 2*1</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>Rs_2<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>num_sub_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>num_sub_2</pre></td></tr><tr><td data-num=\"214\"></td><td><pre>    sum_temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>    <span class=\"token keyword\">for</span> i_temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>m<span class=\"token operator\">*</span>n</pre></td></tr><tr><td data-num=\"216\"></td><td><pre>        sum_temp <span class=\"token operator\">=</span> sum_temp <span class=\"token operator\">+</span> <span class=\"token function\">Hs_2</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">cov_A_2</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">Hs_2</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>    <span class=\"token function\">Rs_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>sum_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre></pre></td></tr><tr><td data-num=\"221\"></td><td><pre></pre></td></tr><tr><td data-num=\"222\"></td><td><pre></pre></td></tr><tr><td data-num=\"223\"></td><td><pre></pre></td></tr><tr><td data-num=\"224\"></td><td><pre></pre></td></tr><tr><td data-num=\"225\"></td><td><pre><span class=\"token comment\">% 根据公式 52 计算奇异值对不确定性参数的导数 Hs，矩阵大小为 512*512,512，第 m*n 个元素表示第 n 个奇异值对第 m 个不确定性参数的导数</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>Hs_3<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">*</span>n<span class=\"token punctuation\">,</span>num_sub_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre><span class=\"token keyword\">for</span> k<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>num_sub_3</pre></td></tr><tr><td data-num=\"228\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>m</pre></td></tr><tr><td data-num=\"229\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token number\">j</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>n</pre></td></tr><tr><td data-num=\"230\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token number\">i</span><span class=\"token operator\">==</span><span class=\"token number\">j</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>                <span class=\"token function\">Hs_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>n<span class=\"token operator\">+</span><span class=\"token number\">j</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">U0_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">j</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">V0_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>            <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre>        <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre></pre></td></tr><tr><td data-num=\"237\"></td><td><pre><span class=\"token comment\">% 根据公式 56 计算奇异值的半径 Rs，矩阵大小为 2*1</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>Rs_3<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>num_sub_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>num_sub_3</pre></td></tr><tr><td data-num=\"240\"></td><td><pre>    sum_temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>    <span class=\"token keyword\">for</span> i_temp <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>m<span class=\"token operator\">*</span>n</pre></td></tr><tr><td data-num=\"242\"></td><td><pre>        sum_temp <span class=\"token operator\">=</span> sum_temp <span class=\"token operator\">+</span> <span class=\"token function\">Hs_3</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">cov_A_3</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">Hs_3</span><span class=\"token punctuation\">(</span>i_temp<span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>    <span class=\"token function\">Rs_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>sum_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre></pre></td></tr><tr><td data-num=\"247\"></td><td><pre><span class=\"token comment\">% disp (\"理论奇异值半径与单次蒙卡奇异值半径之差\")</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre><span class=\"token comment\">% diag(Rs_1)-abs(diag(s_rand_1-s0_1));</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre></pre></td></tr><tr><td data-num=\"250\"></td><td><pre><span class=\"token comment\">%% 计算去噪图像</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre></pre></td></tr><tr><td data-num=\"252\"></td><td><pre><span class=\"token comment\">% best_s_1=s_rand_1(1:trun_1,1:trun_1);</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre><span class=\"token comment\">% </span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre><span class=\"token comment\">% cc_1=U_rand_1(:,1:trun_1)*best_s_1*V_rand_1(:,1:trun_1)';</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre><span class=\"token comment\">% cc_1(find(cc_1>1))=1;</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre><span class=\"token comment\">% cc_1(find(cc_1&lt;0))=0;</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre><span class=\"token comment\">% gaijin=calculate_SINR(cc_1, A0_1)</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre><span class=\"token comment\">% </span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre><span class=\"token comment\">% cc_1=U_rand_1(:,1:trun_1)*s_rand_1(1:trun_1,1:trun_1)*V_rand_1(:,1:trun_1)';</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre><span class=\"token comment\">% cc_1(find(cc_1>1))=1;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre><span class=\"token comment\">% cc_1(find(cc_1&lt;0))=0;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre><span class=\"token comment\">% zaosheng=calculate_SINR(cc_1, A0_1)</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre><span class=\"token comment\">% </span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre><span class=\"token comment\">% cc_1=U_rand_1(:,1:trun_1)*s0_1(1:trun_1,1:trun_1)*V_rand_1(:,1:trun_1)';</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre><span class=\"token comment\">% cc_1(find(cc_1>1))=1;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre><span class=\"token comment\">% cc_1(find(cc_1&lt;0))=0;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre><span class=\"token comment\">% yuanshi=calculate_SINR(cc_1, A0_1)</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre><span class=\"token comment\">% </span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre><span class=\"token comment\">% s_temp=s_rand_1(1:trun_1,1:trun_1);</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre><span class=\"token comment\">% s_temp(1,1)=s0_1(1,1);</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre><span class=\"token comment\">% cc_1=U_rand_1(:,1:trun_1)*s_temp*V_rand_1(:,1:trun_1)';</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre><span class=\"token comment\">% cc_1(find(cc_1>1))=1;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre><span class=\"token comment\">% cc_1(find(cc_1&lt;0))=0;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre><span class=\"token comment\">% gaibian1=calculate_SINR(cc_1, A0_1)</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre><span class=\"token comment\">% </span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre><span class=\"token comment\">% s_temp=s0_1(1:trun_1,1:trun_1);</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre><span class=\"token comment\">% cc_1=U_rand_1(:,1:trun_1)*s_temp*V_rand_1(:,1:trun_1)';</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre><span class=\"token comment\">% cc_1(find(cc_1>1))=1;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre><span class=\"token comment\">% cc_1(find(cc_1&lt;0))=0;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre><span class=\"token comment\">% gaibiansuoyou=calculate_SINR(cc_1, A0_1)</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre></pre></td></tr><tr><td data-num=\"282\"></td><td><pre></pre></td></tr><tr><td data-num=\"283\"></td><td><pre><span class=\"token comment\">%% 遗传算法</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>NIND<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">% 个体数目</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>MAXGEN<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">% 最大遗传代数</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>PRECI<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">% 变量的二进制位数</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>GGAP<span class=\"token operator\">=</span><span class=\"token number\">0.95</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">% 代沟</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>px<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">% 交叉概率</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>pm<span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">% 变异概率</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>trace_1<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>trun_1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>MAXGEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">% 寻优结果的初始值</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>Chrom<span class=\"token operator\">=</span><span class=\"token function\">crtbp</span><span class=\"token punctuation\">(</span>NIND<span class=\"token punctuation\">,</span>PRECI<span class=\"token operator\">*</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">% 初始种群</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre><span class=\"token comment\">% FieldD=[PRECI PRECI;lbx lby;ubx uby;1 1;0 0;1 1;1 1];                      % 区域描述器</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>FieldD<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1</pre></td></tr><tr><td data-num=\"296\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>PRECI<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">s0_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">Rs_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">s0_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">Rs_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre></pre></td></tr><tr><td data-num=\"302\"></td><td><pre></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>gen<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                                  <span class=\"token comment\">% 代计数器</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>XY<span class=\"token operator\">=</span><span class=\"token function\">bs2rv</span><span class=\"token punctuation\">(</span>Chrom<span class=\"token punctuation\">,</span>FieldD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">% 计算初始种群的十进制转换</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>ObjV<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>    best_s_1<span class=\"token operator\">=</span><span class=\"token function\">diag</span><span class=\"token punctuation\">(</span><span class=\"token function\">XY</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>    cc_1<span class=\"token operator\">=</span><span class=\"token function\">U_rand_1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>best_s_1<span class=\"token operator\">*</span><span class=\"token function\">V_rand_1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre>    <span class=\"token function\">cc_1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>    <span class=\"token function\">cc_1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>    <span class=\"token function\">ObjV</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token punctuation\">,</span> A0_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"313\"></td><td><pre></pre></td></tr><tr><td data-num=\"314\"></td><td><pre></pre></td></tr><tr><td data-num=\"315\"></td><td><pre><span class=\"token keyword\">while</span> gen<span class=\"token operator\">&lt;</span>MAXGEN</pre></td></tr><tr><td data-num=\"316\"></td><td><pre>   FitnV<span class=\"token operator\">=</span><span class=\"token function\">ranking</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>ObjV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                              <span class=\"token comment\">% 分配适应度值</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>   SelCh<span class=\"token operator\">=</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sus'</span><span class=\"token punctuation\">,</span>Chrom<span class=\"token punctuation\">,</span>FitnV<span class=\"token punctuation\">,</span>GGAP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">% 选择</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>   SelCh<span class=\"token operator\">=</span><span class=\"token function\">recombin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xovsp'</span><span class=\"token punctuation\">,</span>SelCh<span class=\"token punctuation\">,</span>px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">% 重组</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>   SelCh<span class=\"token operator\">=</span><span class=\"token function\">mut</span><span class=\"token punctuation\">(</span>SelCh<span class=\"token punctuation\">,</span>pm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                               <span class=\"token comment\">% 变异</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>   XY<span class=\"token operator\">=</span><span class=\"token function\">bs2rv</span><span class=\"token punctuation\">(</span>SelCh<span class=\"token punctuation\">,</span>FieldD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">% 子代个体的十进制转换</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>   ObjVSel<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>       best_s_1<span class=\"token operator\">=</span><span class=\"token function\">diag</span><span class=\"token punctuation\">(</span><span class=\"token function\">XY</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>       cc_1<span class=\"token operator\">=</span><span class=\"token function\">U_rand_1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>best_s_1<span class=\"token operator\">*</span><span class=\"token function\">V_rand_1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>       <span class=\"token function\">cc_1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>       <span class=\"token function\">cc_1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>       <span class=\"token function\">ObjVSel</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token punctuation\">,</span> A0_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>   <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"332\"></td><td><pre>   <span class=\"token punctuation\">[</span>Chrom<span class=\"token punctuation\">,</span>ObjV<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">reins</span><span class=\"token punctuation\">(</span>Chrom<span class=\"token punctuation\">,</span>SelCh<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ObjV<span class=\"token punctuation\">,</span>ObjVSel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">% 重插入子代到父代，得到新种群</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>   XY<span class=\"token operator\">=</span><span class=\"token function\">bs2rv</span><span class=\"token punctuation\">(</span>Chrom<span class=\"token punctuation\">,</span>FieldD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>   gen<span class=\"token operator\">=</span>gen<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                                             <span class=\"token comment\">% 代计数器增加</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>   <span class=\"token comment\">% 获取每代的最优解及其序号，Y 为最优解，I 为个体的序号</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>   <span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">,</span>I<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>ObjV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>   <span class=\"token function\">trace_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">,</span>gen<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">XY</span><span class=\"token punctuation\">(</span>I<span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                       <span class=\"token comment\">% 记下每代的最优值</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>   <span class=\"token function\">trace_1</span><span class=\"token punctuation\">(</span>trun_1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>gen<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>Y<span class=\"token punctuation\">;</span>                               <span class=\"token comment\">% 记下每代的最优值</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>optimal_line<span class=\"token operator\">=</span><span class=\"token function\">trace_1</span><span class=\"token punctuation\">(</span>trun_1<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre></pre></td></tr><tr><td data-num=\"343\"></td><td><pre></pre></td></tr><tr><td data-num=\"344\"></td><td><pre></pre></td></tr><tr><td data-num=\"345\"></td><td><pre></pre></td></tr><tr><td data-num=\"346\"></td><td><pre></pre></td></tr><tr><td data-num=\"347\"></td><td><pre></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>trace_2<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>trun_2<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>MAXGEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">% 寻优结果的初始值</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>Chrom<span class=\"token operator\">=</span><span class=\"token function\">crtbp</span><span class=\"token punctuation\">(</span>NIND<span class=\"token punctuation\">,</span>PRECI<span class=\"token operator\">*</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">% 初始种群</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre><span class=\"token comment\">% FieldD=[PRECI PRECI;lbx lby;ubx uby;1 1;0 0;1 1;1 1];                      % 区域描述器</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>FieldD<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2</pre></td></tr><tr><td data-num=\"353\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>PRECI<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">s0_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">Rs_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">s0_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">Rs_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre></pre></td></tr><tr><td data-num=\"359\"></td><td><pre></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>gen<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                                  <span class=\"token comment\">% 代计数器</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>XY<span class=\"token operator\">=</span><span class=\"token function\">bs2rv</span><span class=\"token punctuation\">(</span>Chrom<span class=\"token punctuation\">,</span>FieldD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">% 计算初始种群的十进制转换</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>ObjV<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>    best_s_2<span class=\"token operator\">=</span><span class=\"token function\">diag</span><span class=\"token punctuation\">(</span><span class=\"token function\">XY</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>    cc_2<span class=\"token operator\">=</span><span class=\"token function\">U_rand_2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>best_s_2<span class=\"token operator\">*</span><span class=\"token function\">V_rand_2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>    <span class=\"token function\">cc_2</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>    <span class=\"token function\">cc_2</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>    <span class=\"token function\">ObjV</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token punctuation\">,</span> A0_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre></pre></td></tr><tr><td data-num=\"371\"></td><td><pre></pre></td></tr><tr><td data-num=\"372\"></td><td><pre><span class=\"token keyword\">while</span> gen<span class=\"token operator\">&lt;</span>MAXGEN</pre></td></tr><tr><td data-num=\"373\"></td><td><pre>   FitnV<span class=\"token operator\">=</span><span class=\"token function\">ranking</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>ObjV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                              <span class=\"token comment\">% 分配适应度值</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>   SelCh<span class=\"token operator\">=</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sus'</span><span class=\"token punctuation\">,</span>Chrom<span class=\"token punctuation\">,</span>FitnV<span class=\"token punctuation\">,</span>GGAP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">% 选择</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>   SelCh<span class=\"token operator\">=</span><span class=\"token function\">recombin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xovsp'</span><span class=\"token punctuation\">,</span>SelCh<span class=\"token punctuation\">,</span>px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">% 重组</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>   SelCh<span class=\"token operator\">=</span><span class=\"token function\">mut</span><span class=\"token punctuation\">(</span>SelCh<span class=\"token punctuation\">,</span>pm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                               <span class=\"token comment\">% 变异</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>   XY<span class=\"token operator\">=</span><span class=\"token function\">bs2rv</span><span class=\"token punctuation\">(</span>SelCh<span class=\"token punctuation\">,</span>FieldD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">% 子代个体的十进制转换</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>   ObjVSel<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>       best_s_2<span class=\"token operator\">=</span><span class=\"token function\">diag</span><span class=\"token punctuation\">(</span><span class=\"token function\">XY</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>       cc_2<span class=\"token operator\">=</span><span class=\"token function\">U_rand_2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>best_s_2<span class=\"token operator\">*</span><span class=\"token function\">V_rand_2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>       <span class=\"token function\">cc_2</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre>       <span class=\"token function\">cc_2</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>       <span class=\"token function\">ObjVSel</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token punctuation\">,</span> A0_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre>   <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre></pre></td></tr><tr><td data-num=\"388\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"389\"></td><td><pre>   <span class=\"token punctuation\">[</span>Chrom<span class=\"token punctuation\">,</span>ObjV<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">reins</span><span class=\"token punctuation\">(</span>Chrom<span class=\"token punctuation\">,</span>SelCh<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ObjV<span class=\"token punctuation\">,</span>ObjVSel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">% 重插入子代到父代，得到新种群</span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>   XY<span class=\"token operator\">=</span><span class=\"token function\">bs2rv</span><span class=\"token punctuation\">(</span>Chrom<span class=\"token punctuation\">,</span>FieldD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"391\"></td><td><pre>   gen<span class=\"token operator\">=</span>gen<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                                             <span class=\"token comment\">% 代计数器增加</span></pre></td></tr><tr><td data-num=\"392\"></td><td><pre>   <span class=\"token comment\">% 获取每代的最优解及其序号，Y 为最优解，I 为个体的序号</span></pre></td></tr><tr><td data-num=\"393\"></td><td><pre>   <span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">,</span>I<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>ObjV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre>   <span class=\"token function\">trace_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">,</span>gen<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">XY</span><span class=\"token punctuation\">(</span>I<span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                       <span class=\"token comment\">% 记下每代的最优值</span></pre></td></tr><tr><td data-num=\"395\"></td><td><pre>   <span class=\"token function\">trace_2</span><span class=\"token punctuation\">(</span>trun_2<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>gen<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>Y<span class=\"token punctuation\">;</span>                               <span class=\"token comment\">% 记下每代的最优值</span></pre></td></tr><tr><td data-num=\"396\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"397\"></td><td><pre></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>optimal_line<span class=\"token operator\">=</span><span class=\"token function\">trace_2</span><span class=\"token punctuation\">(</span>trun_2<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre></pre></td></tr><tr><td data-num=\"400\"></td><td><pre></pre></td></tr><tr><td data-num=\"401\"></td><td><pre></pre></td></tr><tr><td data-num=\"402\"></td><td><pre></pre></td></tr><tr><td data-num=\"403\"></td><td><pre></pre></td></tr><tr><td data-num=\"404\"></td><td><pre></pre></td></tr><tr><td data-num=\"405\"></td><td><pre>trace_3<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span>trun_3<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>MAXGEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\">% 寻优结果的初始值</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>Chrom<span class=\"token operator\">=</span><span class=\"token function\">crtbp</span><span class=\"token punctuation\">(</span>NIND<span class=\"token punctuation\">,</span>PRECI<span class=\"token operator\">*</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                      <span class=\"token comment\">% 初始种群</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre><span class=\"token comment\">% FieldD=[PRECI PRECI;lbx lby;ubx uby;1 1;0 0;1 1;1 1];                      % 区域描述器</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>FieldD<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"409\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3</pre></td></tr><tr><td data-num=\"410\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>PRECI<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">s0_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">Rs_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"412\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">s0_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">Rs_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre>    <span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token function\">FieldD</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"414\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre></pre></td></tr><tr><td data-num=\"416\"></td><td><pre></pre></td></tr><tr><td data-num=\"417\"></td><td><pre>gen<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                                  <span class=\"token comment\">% 代计数器</span></pre></td></tr><tr><td data-num=\"418\"></td><td><pre>XY<span class=\"token operator\">=</span><span class=\"token function\">bs2rv</span><span class=\"token punctuation\">(</span>Chrom<span class=\"token punctuation\">,</span>FieldD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">% 计算初始种群的十进制转换</span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>ObjV<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"420\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>    best_s_3<span class=\"token operator\">=</span><span class=\"token function\">diag</span><span class=\"token punctuation\">(</span><span class=\"token function\">XY</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>    cc_3<span class=\"token operator\">=</span><span class=\"token function\">U_rand_3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>best_s_3<span class=\"token operator\">*</span><span class=\"token function\">V_rand_3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"423\"></td><td><pre>    <span class=\"token function\">cc_3</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>    <span class=\"token function\">cc_3</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre>    <span class=\"token function\">ObjV</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token punctuation\">,</span> A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"426\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"427\"></td><td><pre></pre></td></tr><tr><td data-num=\"428\"></td><td><pre></pre></td></tr><tr><td data-num=\"429\"></td><td><pre><span class=\"token keyword\">while</span> gen<span class=\"token operator\">&lt;</span>MAXGEN</pre></td></tr><tr><td data-num=\"430\"></td><td><pre>   FitnV<span class=\"token operator\">=</span><span class=\"token function\">ranking</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>ObjV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                              <span class=\"token comment\">% 分配适应度值</span></pre></td></tr><tr><td data-num=\"431\"></td><td><pre>   SelCh<span class=\"token operator\">=</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sus'</span><span class=\"token punctuation\">,</span>Chrom<span class=\"token punctuation\">,</span>FitnV<span class=\"token punctuation\">,</span>GGAP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">% 选择</span></pre></td></tr><tr><td data-num=\"432\"></td><td><pre>   SelCh<span class=\"token operator\">=</span><span class=\"token function\">recombin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'xovsp'</span><span class=\"token punctuation\">,</span>SelCh<span class=\"token punctuation\">,</span>px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">% 重组</span></pre></td></tr><tr><td data-num=\"433\"></td><td><pre>   SelCh<span class=\"token operator\">=</span><span class=\"token function\">mut</span><span class=\"token punctuation\">(</span>SelCh<span class=\"token punctuation\">,</span>pm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                               <span class=\"token comment\">% 变异</span></pre></td></tr><tr><td data-num=\"434\"></td><td><pre>   XY<span class=\"token operator\">=</span><span class=\"token function\">bs2rv</span><span class=\"token punctuation\">(</span>SelCh<span class=\"token punctuation\">,</span>FieldD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">% 子代个体的十进制转换</span></pre></td></tr><tr><td data-num=\"435\"></td><td><pre></pre></td></tr><tr><td data-num=\"436\"></td><td><pre>   ObjVSel<span class=\"token operator\">=</span><span class=\"token function\">zeros</span><span class=\"token punctuation\">(</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"437\"></td><td><pre>   <span class=\"token keyword\">for</span> <span class=\"token number\">i</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span>XY<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"438\"></td><td><pre>       best_s_3<span class=\"token operator\">=</span><span class=\"token function\">diag</span><span class=\"token punctuation\">(</span><span class=\"token function\">XY</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"439\"></td><td><pre>       cc_3<span class=\"token operator\">=</span><span class=\"token function\">U_rand_3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>best_s_3<span class=\"token operator\">*</span><span class=\"token function\">V_rand_3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"440\"></td><td><pre>       <span class=\"token function\">cc_3</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"441\"></td><td><pre>       <span class=\"token function\">cc_3</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"442\"></td><td><pre>       <span class=\"token function\">ObjVSel</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token punctuation\">,</span> A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"443\"></td><td><pre>   <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"444\"></td><td><pre></pre></td></tr><tr><td data-num=\"445\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"446\"></td><td><pre>   <span class=\"token punctuation\">[</span>Chrom<span class=\"token punctuation\">,</span>ObjV<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">reins</span><span class=\"token punctuation\">(</span>Chrom<span class=\"token punctuation\">,</span>SelCh<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ObjV<span class=\"token punctuation\">,</span>ObjVSel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">% 重插入子代到父代，得到新种群</span></pre></td></tr><tr><td data-num=\"447\"></td><td><pre>   XY<span class=\"token operator\">=</span><span class=\"token function\">bs2rv</span><span class=\"token punctuation\">(</span>Chrom<span class=\"token punctuation\">,</span>FieldD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"448\"></td><td><pre>   gen<span class=\"token operator\">=</span>gen<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>                                             <span class=\"token comment\">% 代计数器增加</span></pre></td></tr><tr><td data-num=\"449\"></td><td><pre>   <span class=\"token comment\">% 获取每代的最优解及其序号，Y 为最优解，I 为个体的序号</span></pre></td></tr><tr><td data-num=\"450\"></td><td><pre>   <span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">,</span>I<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>ObjV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"451\"></td><td><pre>   <span class=\"token function\">trace_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">,</span>gen<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token function\">XY</span><span class=\"token punctuation\">(</span>I<span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                       <span class=\"token comment\">% 记下每代的最优值</span></pre></td></tr><tr><td data-num=\"452\"></td><td><pre>   <span class=\"token function\">trace_3</span><span class=\"token punctuation\">(</span>trun_3<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>gen<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>Y<span class=\"token punctuation\">;</span>                               <span class=\"token comment\">% 记下每代的最优值</span></pre></td></tr><tr><td data-num=\"453\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"454\"></td><td><pre></pre></td></tr><tr><td data-num=\"455\"></td><td><pre>optimal_line<span class=\"token operator\">=</span><span class=\"token function\">trace_3</span><span class=\"token punctuation\">(</span>trun_3<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"456\"></td><td><pre></pre></td></tr><tr><td data-num=\"457\"></td><td><pre></pre></td></tr><tr><td data-num=\"458\"></td><td><pre></pre></td></tr><tr><td data-num=\"459\"></td><td><pre></pre></td></tr><tr><td data-num=\"460\"></td><td><pre><span class=\"token comment\">%% 绘制对比图像</span></pre></td></tr><tr><td data-num=\"461\"></td><td><pre>best_s_1<span class=\"token operator\">=</span><span class=\"token function\">diag</span><span class=\"token punctuation\">(</span><span class=\"token function\">trace_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">,</span>MAXGEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"462\"></td><td><pre>cc_1_c<span class=\"token operator\">=</span><span class=\"token function\">U_rand_1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>best_s_1<span class=\"token operator\">*</span><span class=\"token function\">V_rand_1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"463\"></td><td><pre><span class=\"token function\">cc_1_c</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_1_c<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"464\"></td><td><pre><span class=\"token function\">cc_1_c</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_1_c<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"465\"></td><td><pre></pre></td></tr><tr><td data-num=\"466\"></td><td><pre>cc_1<span class=\"token operator\">=</span><span class=\"token function\">U_rand_1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">s0_1</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">V_rand_1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_1<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"467\"></td><td><pre><span class=\"token function\">cc_1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"468\"></td><td><pre><span class=\"token function\">cc_1</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"469\"></td><td><pre></pre></td></tr><tr><td data-num=\"470\"></td><td><pre></pre></td></tr><tr><td data-num=\"471\"></td><td><pre></pre></td></tr><tr><td data-num=\"472\"></td><td><pre>best_s_2<span class=\"token operator\">=</span><span class=\"token function\">diag</span><span class=\"token punctuation\">(</span><span class=\"token function\">trace_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">,</span>MAXGEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"473\"></td><td><pre>cc_2_c<span class=\"token operator\">=</span><span class=\"token function\">U_rand_2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>best_s_2<span class=\"token operator\">*</span><span class=\"token function\">V_rand_2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"474\"></td><td><pre><span class=\"token function\">cc_2_c</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_2_c<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"475\"></td><td><pre><span class=\"token function\">cc_2_c</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_2_c<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"476\"></td><td><pre></pre></td></tr><tr><td data-num=\"477\"></td><td><pre>cc_2<span class=\"token operator\">=</span><span class=\"token function\">U_rand_2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">s0_2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">V_rand_2</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_2<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"478\"></td><td><pre><span class=\"token function\">cc_2</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"479\"></td><td><pre><span class=\"token function\">cc_2</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"480\"></td><td><pre></pre></td></tr><tr><td data-num=\"481\"></td><td><pre></pre></td></tr><tr><td data-num=\"482\"></td><td><pre></pre></td></tr><tr><td data-num=\"483\"></td><td><pre></pre></td></tr><tr><td data-num=\"484\"></td><td><pre>best_s_3<span class=\"token operator\">=</span><span class=\"token function\">diag</span><span class=\"token punctuation\">(</span><span class=\"token function\">trace_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">,</span>MAXGEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"485\"></td><td><pre>cc_3_c<span class=\"token operator\">=</span><span class=\"token function\">U_rand_3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>best_s_3<span class=\"token operator\">*</span><span class=\"token function\">V_rand_3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"486\"></td><td><pre><span class=\"token function\">cc_3_c</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_3_c<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"487\"></td><td><pre><span class=\"token function\">cc_3_c</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_3_c<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"488\"></td><td><pre></pre></td></tr><tr><td data-num=\"489\"></td><td><pre>cc_3<span class=\"token operator\">=</span><span class=\"token function\">U_rand_3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">s0_3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">V_rand_3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token operator\">:</span>trun_3<span class=\"token punctuation\">)</span><span class=\"token operator\">'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"490\"></td><td><pre><span class=\"token function\">cc_3</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"491\"></td><td><pre><span class=\"token function\">cc_3</span><span class=\"token punctuation\">(</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"492\"></td><td><pre></pre></td></tr><tr><td data-num=\"493\"></td><td><pre></pre></td></tr><tr><td data-num=\"494\"></td><td><pre><span class=\"token function\">figure</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"495\"></td><td><pre><span class=\"token function\">subplot</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"496\"></td><td><pre><span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span>A0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"497\"></td><td><pre><span class=\"token comment\">% title (' 原始图像 ')</span></pre></td></tr><tr><td data-num=\"498\"></td><td><pre><span class=\"token function\">subplot</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"499\"></td><td><pre><span class=\"token function\">A_rand</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> A_rand_1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"500\"></td><td><pre><span class=\"token function\">A_rand</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> A_rand_2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"501\"></td><td><pre><span class=\"token function\">A_rand</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> A_rand_3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"502\"></td><td><pre><span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span>A_rand<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"503\"></td><td><pre><span class=\"token comment\">% title (' 去噪前图像 ')</span></pre></td></tr><tr><td data-num=\"504\"></td><td><pre></pre></td></tr><tr><td data-num=\"505\"></td><td><pre><span class=\"token function\">figure</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"506\"></td><td><pre><span class=\"token function\">subplot</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"507\"></td><td><pre><span class=\"token function\">cc</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cc_1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"508\"></td><td><pre><span class=\"token function\">cc</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cc_2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"509\"></td><td><pre><span class=\"token function\">cc</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cc_3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"510\"></td><td><pre><span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span>cc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"511\"></td><td><pre><span class=\"token comment\">% title (' 常规降噪 ')</span></pre></td></tr><tr><td data-num=\"512\"></td><td><pre><span class=\"token function\">subplot</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"513\"></td><td><pre><span class=\"token function\">cc_c</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cc_1_c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"514\"></td><td><pre><span class=\"token function\">cc_c</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cc_2_c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"515\"></td><td><pre><span class=\"token function\">cc_c</span><span class=\"token punctuation\">(</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> cc_3_c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"516\"></td><td><pre><span class=\"token function\">imshow</span><span class=\"token punctuation\">(</span>cc_c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"517\"></td><td><pre><span class=\"token comment\">% title (' 凸模型降噪 ')</span></pre></td></tr><tr><td data-num=\"518\"></td><td><pre></pre></td></tr><tr><td data-num=\"519\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span>\"常规方法的指标值为：\"<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"520\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token punctuation\">,</span> A0_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token punctuation\">,</span> A0_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token punctuation\">,</span> A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"521\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span>\"凸模型方法的指标值为：\"<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"522\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_1_c<span class=\"token punctuation\">,</span> A0_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_2_c<span class=\"token punctuation\">,</span> A0_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_3_c<span class=\"token punctuation\">,</span> A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"523\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span>\"性能上升百分比为\"<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"524\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_1_c<span class=\"token punctuation\">,</span> A0_1<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token punctuation\">,</span> A0_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_1_c<span class=\"token punctuation\">,</span> A0_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"525\"></td><td><pre>      <span class=\"token punctuation\">(</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_2_c<span class=\"token punctuation\">,</span> A0_2<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token punctuation\">,</span> A0_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_2_c<span class=\"token punctuation\">,</span> A0_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"526\"></td><td><pre>      <span class=\"token punctuation\">(</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_3_c<span class=\"token punctuation\">,</span> A0_3<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token punctuation\">,</span> A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_3_c<span class=\"token punctuation\">,</span> A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"527\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span>\"性能上升平均百分比为\"<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"528\"></td><td><pre><span class=\"token function\">disp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_1_c<span class=\"token punctuation\">,</span> A0_1<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_1<span class=\"token punctuation\">,</span> A0_1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_1_c<span class=\"token punctuation\">,</span> A0_1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"529\"></td><td><pre>      <span class=\"token punctuation\">(</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_2_c<span class=\"token punctuation\">,</span> A0_2<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_2<span class=\"token punctuation\">,</span> A0_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_2_c<span class=\"token punctuation\">,</span> A0_2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"530\"></td><td><pre>      <span class=\"token punctuation\">(</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_3_c<span class=\"token punctuation\">,</span> A0_3<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_3<span class=\"token punctuation\">,</span> A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">calculate_SINR</span><span class=\"token punctuation\">(</span>cc_3_c<span class=\"token punctuation\">,</span> A0_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"531\"></td><td><pre></pre></td></tr><tr><td data-num=\"532\"></td><td><pre><span class=\"token comment\">% figure(2)</span></pre></td></tr><tr><td data-num=\"533\"></td><td><pre><span class=\"token comment\">% subplot(1,2,1)</span></pre></td></tr><tr><td data-num=\"534\"></td><td><pre><span class=\"token comment\">% cc_1_l=U_rand_1(:,1:trun_1)*s0_1(1:trun_1,1:trun_1)*V_rand_1(:,1:trun_1)';</span></pre></td></tr><tr><td data-num=\"535\"></td><td><pre><span class=\"token comment\">% cc_1_l(find(cc_1_l>1))=1;</span></pre></td></tr><tr><td data-num=\"536\"></td><td><pre><span class=\"token comment\">% cc_1_l(find(cc_1_l&lt;0))=0;</span></pre></td></tr><tr><td data-num=\"537\"></td><td><pre><span class=\"token comment\">% imshow(cc_1_l)</span></pre></td></tr><tr><td data-num=\"538\"></td><td><pre><span class=\"token comment\">% title (' 理论最优降噪 ')</span></pre></td></tr><tr><td data-num=\"539\"></td><td><pre><span class=\"token comment\">% </span></pre></td></tr><tr><td data-num=\"540\"></td><td><pre><span class=\"token comment\">% subplot(1,2,2)</span></pre></td></tr><tr><td data-num=\"541\"></td><td><pre><span class=\"token comment\">% imshow(cc_1_c)</span></pre></td></tr><tr><td data-num=\"542\"></td><td><pre><span class=\"token comment\">% title (' 凸模型降噪 ')</span></pre></td></tr></table></figure>",
            "tags": [
                "最优化",
                "编程技巧",
                "matlab"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/07/04/code/python/python_QSS/",
            "url": "http://qianqiu-cell.github.io/2023/07/04/code/python/python_QSS/",
            "title": "python+QSS应用",
            "date_published": "2023-07-03T16:00:00.000Z",
            "content_html": "<p>  在使用 pyside2&amp;6 或 pyqt 设计系统界面时，可以使用 QSS 文件来一键修改系统的界面，搜集到的一些 QSS 网站如下：</p>\n<ul>\n<li>（1）<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dUUk9OSUNLL1FTUw==\">https://github.com/GTRONICK/QSS</span>（同步保存至 U 盘备份）</li>\n</ul>\n",
            "tags": [
                "编程技巧",
                "python",
                "系统设计"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/07/04/code/python/python_RMFS_pip_list/",
            "url": "http://qianqiu-cell.github.io/2023/07/04/code/python/python_RMFS_pip_list/",
            "title": "本科毕业设计使用python环境",
            "date_published": "2023-07-03T16:00:00.000Z",
            "content_html": "<pre><code>F:\\blog&gt;pip list\nPackage                       Version\n----------------------------- --------------------\nabsl-py                       1.4.0\nalabaster                     0.7.12\nanaconda-client               1.11.0\nanaconda-navigator            2.3.1\nanaconda-project              0.11.1\nanyio                         3.5.0\nappdirs                       1.4.4\nargon2-cffi                   21.3.0\nargon2-cffi-bindings          21.2.0\narrow                         1.2.2\nastroid                       2.11.7\nastropy                       5.1\nastunparse                    1.6.3\natomicwrites                  1.4.0\nattrs                         21.4.0\nAutomat                       20.2.0\nautopep8                      1.6.0\nBabel                         2.9.1\nbackcall                      0.2.0\nbackports.functools-lru-cache 1.6.4\nbackports.tempfile            1.0\nbackports.weakref             1.0.post1\nbcrypt                        3.2.0\nbeautifulsoup4                4.11.1\nbinaryornot                   0.4.4\nbitarray                      2.5.1\nbkcharts                      0.2\nblack                         22.6.0\nbleach                        4.1.0\nbokeh                         2.4.3\nboto3                         1.24.28\nbotocore                      1.27.28\nBottleneck                    1.3.5\nbrotlipy                      0.7.0\ncachetools                    5.3.0\ncertifi                       2022.9.14\ncffi                          1.15.1\nchardet                       4.0.0\ncharset-normalizer            2.0.4\nclick                         7.1.2\ncloudpickle                   2.0.0\nclyent                        1.2.2\ncolorama                      0.4.5\ncolorcet                      3.0.0\ncomtypes                      1.1.10\nconda                         22.9.0\nconda-build                   3.22.0\nconda-content-trust           0.1.3\nconda-pack                    0.6.0\nconda-package-handling        1.9.0\nconda-repo-cli                1.0.20\nconda-token                   0.4.0\nconda-verify                  3.4.2\nconstantly                    15.1.0\ncontourpy                     1.0.7\ncookiecutter                  1.7.3\ncryptography                  37.0.1\ncssselect                     1.1.0\ncycler                        0.11.0\nCython                        0.29.32\ncytoolz                       0.11.0\ndaal4py                       2021.6.0\ndask                          2022.7.0\ndatashader                    0.14.1\ndatashape                     0.5.4\ndebugpy                       1.5.1\ndecorator                     5.1.1\ndefusedxml                    0.7.1\ndiff-match-patch              20200713\ndill                          0.3.4\ndistributed                   2022.7.0\ndocutils                      0.18.1\nentrypoints                   0.4\net-xmlfile                    1.1.0\nfastjsonschema                2.16.2\nfilelock                      3.6.0\nflake8                        4.0.1\nFlask                         1.1.2\nflatbuffers                   23.3.3\nfonttools                     4.25.0\nfsspec                        2022.7.1\nfuture                        0.18.2\ngast                          0.4.0\ngensim                        4.1.2\nglob2                         0.7\ngoogle-auth                   2.17.3\ngoogle-auth-oauthlib          1.0.0\ngoogle-pasta                  0.2.0\ngreenlet                      1.1.1\ngrpcio                        1.54.0\ngurobipy                      10.0.1\nh5py                          3.7.0\nHeapDict                      1.0.1\nholoviews                     1.15.0\nhuggingface-hub               0.14.1\nhvplot                        0.8.0\nhyperlink                     21.0.0\nidna                          3.3\nimagecodecs                   2021.8.26\nimageio                       2.19.3\nimagesize                     1.4.1\nimportlib-metadata            4.11.3\nimportlib-resources           5.12.0\nincremental                   21.3.0\ninflection                    0.5.1\niniconfig                     1.1.1\nintake                        0.6.5\ninterval                      1.0.0\nintervaltree                  3.1.0\nipykernel                     6.15.2\nipython                       7.31.1\nipython-genutils              0.2.0\nipywidgets                    7.6.5\nisort                         5.9.3\nitemadapter                   0.3.0\nitemloaders                   1.0.4\nitsdangerous                  2.0.1\njax                           0.4.8\njdcal                         1.4.1\njedi                          0.18.1\njellyfish                     0.9.0\nJinja2                        2.11.3\njinja2-time                   0.2.0\njmespath                      0.10.0\njmetalpy                      1.5.5\njoblib                        1.1.0\njson5                         0.9.6\njsonschema                    4.16.0\njupyter                       1.0.0\njupyter_client                7.3.4\njupyter-console               6.4.3\njupyter_core                  4.11.1\njupyter-server                1.18.1\njupyterlab                    3.4.4\njupyterlab-pygments           0.1.2\njupyterlab-server             2.10.3\njupyterlab-widgets            1.0.0\nkeras                         2.12.0\nkeyring                       23.4.0\nkiwisolver                    1.4.2\nlazy-object-proxy             1.6.0\nlibarchive-c                  2.9\nlibclang                      16.0.0\nllvmlite                      0.38.0\nlocket                        1.0.0\nlxml                          4.9.1\nlz4                           3.1.3\nMarkdown                      3.3.4\nMarkupSafe                    2.0.1\nmatplotlib                    3.7.1\nmccabe                        0.6.1\nmenuinst                      1.4.19\nmistune                       0.8.4\nmkl-fft                       1.3.1\nmkl-random                    1.2.2\nmkl-service                   2.4.0\nml-dtypes                     0.1.0\nmock                          4.0.3\nmpmath                        1.2.1\nmsgpack                       1.0.3\nmultipledispatch              0.6.0\nmunkres                       1.1.4\nmypy-extensions               0.4.3\nnavigator-updater             0.3.0\nnbclassic                     0.3.5\nnbclient                      0.5.13\nnbconvert                     6.4.4\nnbformat                      5.5.0\nnest-asyncio                  1.5.5\nnetworkx                      2.8.4\nnltk                          3.7\nnose                          1.3.7\nnotebook                      6.4.12\nnumba                         0.55.1\nnumexpr                       2.8.3\nnumpy                         1.21.0\nnumpydoc                      1.4.0\noauthlib                      3.2.2\nolefile                       0.46\nopencv-python                 4.7.0.72\nopenpyxl                      3.0.10\nopt-einsum                    3.3.0\npackaging                     21.3\npandas                        1.4.4\npandoc                        2.3\npandocfilters                 1.5.0\npanel                         0.13.1\nparam                         1.12.0\nparamiko                      2.8.1\nparsel                        1.6.0\nparso                         0.8.3\npartd                         1.2.0\npathlib                       1.0.1\npathspec                      0.9.0\npatsy                         0.5.2\npep8                          1.7.1\npexpect                       4.8.0\npickleshare                   0.7.5\nPillow                        9.2.0\npip                           22.0.4\npkginfo                       1.8.2\nplatformdirs                  2.5.2\nplotly                        5.9.0\npluggy                        1.0.0\nplumbum                       1.8.1\nply                           3.11\npoyo                          0.5.0\nprometheus-client             0.14.1\nprompt-toolkit                3.0.20\nProtego                       0.1.16\nprotobuf                      4.22.3\npsutil                        5.9.0\nptyprocess                    0.7.0\npy                            1.11.0\npyasn1                        0.4.8\npyasn1-modules                0.2.8\npycodestyle                   2.8.0\npycosat                       0.6.3\npycparser                     2.21\npyct                          0.4.8\npycurl                        7.45.1\nPyDispatcher                  2.0.5\npydocstyle                    6.1.1\npyerfa                        2.0.0\npyflakes                      2.4.0\nPygments                      2.11.2\nPyHamcrest                    2.0.2\nPyJWT                         2.4.0\npylint                        2.14.5\npyls-spyder                   0.4.0\nPyNaCl                        1.5.0\npyodbc                        4.0.34\npyOpenSSL                     22.0.0\npyparsing                     3.0.9\nPyQt5                         5.15.4\npyqt5-plugins                 5.15.4.2.2\nPyQt5-Qt5                     5.15.2\nPyQt5-sip                     12.11.1\npyqt5-tools                   5.15.4.3.2\nPyQtChart                     5.15.6\nPyQtChart-Qt5                 5.15.2\nPyQtDataVisualization         5.15.5\nPyQtDataVisualization-Qt5     5.15.2\nPyQtWebEngine                 5.15.6\nPyQtWebEngine-Qt5             5.15.2\npyrsistent                    0.18.0\nPySide6                       6.5.0\nPySide6-Addons                6.5.0\nPySide6-Essentials            6.5.0\nPySocks                       1.7.1\npytest                        7.1.2\npython-dateutil               2.8.2\npython-dotenv                 1.0.0\npython-lsp-black              1.0.0\npython-lsp-jsonrpc            1.0.0\npython-lsp-server             1.3.3\npython-slugify                5.0.2\npython-snappy                 0.6.0\npython-version                0.0.2\npytz                          2022.1\npyviz-comms                   2.0.2\nPyWavelets                    1.3.0\npywin32                       302\npywin32-ctypes                0.2.0\npywinpty                      2.0.2\nPyYAML                        6.0\npyzmq                         23.2.0\nQDarkStyle                    3.0.2\nqstylizer                     0.1.10\nqt-material                   2.14\nqt5-applications              5.15.2.2.2\nqt5-tools                     5.15.2.1.2\nQtAwesome                     1.0.3\nqtconsole                     5.2.2\nQtPy                          2.2.0\nqueuelib                      1.5.0\nregex                         2022.7.9\nrequests                      2.28.1\nrequests-file                 1.5.1\nrequests-oauthlib             1.3.1\nrope                          0.22.0\nrsa                           4.9\nRtree                         0.9.7\nruamel-yaml-conda             0.15.100\ns3transfer                    0.6.0\nsafetensors                   0.3.1\nscikit-image                  0.19.2\nscikit-learn                  1.0.2\nscikit-learn-intelex          2021.20221004.171935\nscipy                         1.9.1\nScrapy                        2.6.2\nseaborn                       0.11.2\nSend2Trash                    1.8.0\nservice-identity              18.1.0\nsetuptools                    63.4.1\nshiboken6                     6.5.0\nsip                           4.19.13\nsix                           1.16.0\nsmart-open                    5.2.1\nsniffio                       1.2.0\nsnowballstemmer               2.2.0\nsortedcollections             2.1.0\nsortedcontainers              2.4.0\nsoundfile                     0.11.0\nsoupsieve                     2.3.1\nSphinx                        5.0.2\nsphinxcontrib-applehelp       1.0.2\nsphinxcontrib-devhelp         1.0.2\nsphinxcontrib-htmlhelp        2.0.0\nsphinxcontrib-jsmath          1.0.1\nsphinxcontrib-qthelp          1.0.3\nsphinxcontrib-serializinghtml 1.1.5\nspiral                        0.14.1.0\nspyder                        5.2.2\nspyder-kernels                2.2.1\nSQLAlchemy                    1.4.39\nstatsmodels                   0.13.2\nsympy                         1.10.1\ntables                        3.6.1\ntabulate                      0.8.10\nTBB                           0.2\ntblib                         1.7.0\ntenacity                      8.0.1\ntensorboard                   2.12.2\ntensorboard-data-server       0.7.0\ntensorboard-plugin-wit        1.8.1\ntensorflow                    2.12.0\ntensorflow-estimator          2.12.0\ntensorflow-intel              2.12.0\ntensorflow-io-gcs-filesystem  0.31.0\ntermcolor                     2.3.0\nterminado                     0.13.1\ntestpath                      0.6.0\ntext-unidecode                1.3\ntextdistance                  4.2.1\nthreadpoolctl                 2.2.0\nthree-merge                   0.1.1\ntifffile                      2021.7.2\ntimm                          0.9.2\ntinycss                       0.4\ntldextract                    3.2.0\ntoml                          0.10.2\ntomli                         2.0.1\ntomlkit                       0.11.1\ntoolz                         0.11.2\ntorch                         1.13.1+cu116\ntorchaudio                    0.13.1+cu116\ntorchvision                   0.14.1+cu116\ntornado                       6.1\ntqdm                          4.64.1\ntraitlets                     5.1.1\nTwisted                       22.2.0\ntwisted-iocpsupport           1.0.2\ntyping_extensions             4.3.0\nujson                         5.4.0\nUnidecode                     1.2.0\nurllib3                       1.26.11\nw3lib                         1.21.0\nwatchdog                      2.1.6\nwcwidth                       0.2.5\nwebencodings                  0.5.1\nwebsocket-client              0.58.0\nWerkzeug                      2.0.3\nwfdb                          4.1.0\nwheel                         0.37.1\nwidgetsnbextension            3.5.2\nwin-inet-pton                 1.1.0\nwin-unicode-console           0.5\nwincertstore                  0.2\nwrapt                         1.14.1\nxarray                        0.20.1\nxlrd                          2.0.1\nXlsxWriter                    3.0.3\nxlwings                       0.27.15\nyapf                          0.31.0\nzict                          2.1.0\nzipp                          3.8.0\nzope.interface                5.4.0\n</code></pre>\n",
            "tags": [
                "最优化",
                "多目标最优化",
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/07/04/code/python/python_plot_RMFS/",
            "url": "http://qianqiu-cell.github.io/2023/07/04/code/python/python_plot_RMFS/",
            "title": "python绘制网格分布图像以及甘特图",
            "date_published": "2023-07-03T16:00:00.000Z",
            "content_html": "<p>  毕业设计的系统中需要绘制货架在仓库中的分布以及机器人与拣货人员在调度安排的甘特图</p>\n<h1 id=\"一-使用python绘制网格分布图像\"><a class=\"markdownIt-Anchor\" href=\"#一-使用python绘制网格分布图像\">#</a> 一、使用 python 绘制网格分布图像</h1>\n<p>  绘制网格分布图像主要需要使用 <code>plt.fill()</code>  函数，毕业设计中使用的程序如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>length <span class=\"token operator\">=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>weight <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n_pod <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>loc_pod <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>loc_station <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>loc_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    x<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>loc_pod<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    y<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>loc_pod<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>plt<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'font.sans-serif'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'SimHei'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 显示中文标签</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>plt<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'axes.unicode_minus'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># 显示中文标签</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 绘制货架</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>loc_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> facecolor<span class=\"token operator\">=</span><span class=\"token string\">'green'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0.45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'货架'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 绘制拣货台</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>plt<span class=\"token punctuation\">.</span>fill<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>loc_station<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> loc_station<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> loc_station<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> loc_station<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>         np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>loc_station<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> loc_station<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> loc_station<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> loc_station<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> facecolor<span class=\"token operator\">=</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>plt<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span>loc_station<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> loc_station<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0.45</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'拣货台'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 添加网格线</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xticks<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>plt<span class=\"token punctuation\">.</span>yticks<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xlim<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> length<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>plt<span class=\"token punctuation\">.</span>ylim<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>plt<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 添加标题和标签</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"货架分布示意图\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"X\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>plt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"Y\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># 显示图像</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>plt<span class=\"token punctuation\">.</span>savefig<span class=\"token punctuation\">(</span><span class=\"token string\">\"loc.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            bbox_inches<span class=\"token operator\">=</span><span class=\"token string\">\"tight\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            pad_inches<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            transparent<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  上述程序的运行结果如下图所示：<br>\n<img data-src=\"/images/code/python/python_plot_RMFS/1.1.jpg\" alt=\"\"></p>\n<h1 id=\"二-使用python绘制甘特图\"><a class=\"markdownIt-Anchor\" href=\"#二-使用python绘制甘特图\">#</a> 二、使用 python 绘制甘特图</h1>\n<p>  绘制网格分布图像主要需要使用 <code>plt.barh()</code>  函数，毕业设计中使用的程序如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> functions <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> math</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">plt_gantt</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">,</span> human_task<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'font.sans-serif'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'SimHei'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 显示中文标签</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>rcParams<span class=\"token punctuation\">[</span><span class=\"token string\">'axes.unicode_minus'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>  <span class=\"token comment\"># 显示中文标签</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pink\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"orange\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"g\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"deeppink\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"purple\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"brown\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"black\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>human_task<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        plt<span class=\"token punctuation\">.</span>barh<span class=\"token punctuation\">(</span>y<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span>human_task<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> human_task<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> left<span class=\"token operator\">=</span>human_task<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> edgecolor<span class=\"token operator\">=</span><span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span> align<span class=\"token operator\">=</span><span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                 color<span class=\"token operator\">=</span>colors<span class=\"token punctuation\">[</span>human_task<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> human_task<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> human_task<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            plt<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>human_task<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> human_task<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'货架'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>human_task<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> j <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                plt<span class=\"token punctuation\">.</span>barh<span class=\"token punctuation\">(</span>y<span class=\"token operator\">=</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> left<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> edgecolor<span class=\"token operator\">=</span><span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span> align<span class=\"token operator\">=</span><span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span>colors<span class=\"token punctuation\">[</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                plt<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">+</span> robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'货架'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                plt<span class=\"token punctuation\">.</span>barh<span class=\"token punctuation\">(</span>y<span class=\"token operator\">=</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">=</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> left<span class=\"token operator\">=</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> edgecolor<span class=\"token operator\">=</span><span class=\"token string\">\"black\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                         align<span class=\"token operator\">=</span><span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span>colors<span class=\"token punctuation\">[</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                plt<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'货架'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    ylabels <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 生成 y 轴标签</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            ylabels<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"拣货人员\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            ylabels<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"机器人 \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>yticks<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ylabels<span class=\"token punctuation\">,</span> rotation<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"任务安排示意图\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"工作时间\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    plt<span class=\"token punctuation\">.</span>savefig<span class=\"token punctuation\">(</span><span class=\"token string\">\"result.jpg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                bbox_inches<span class=\"token operator\">=</span><span class=\"token string\">\"tight\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                pad_inches<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                transparent<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># 功能：计算目标函数 1 的值</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\"># 输入参数：货架列表 list</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># 输出参数：目标值 1 (target)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">calculate_single_target</span><span class=\"token punctuation\">(</span>pod_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_robot<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 是机器人 r 第 k 个转运的任务（0，1 变量）</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    tP <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人拿起的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    tD <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人放下的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    robot_condition <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作状态（即完成当前工作时间）</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    n_robot_work <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作数量</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    selected_pods <span class=\"token operator\">=</span> get_selected_pods<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>pod_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    selected_pods <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        selected_robot <span class=\"token operator\">=</span> select_robot<span class=\"token punctuation\">(</span>robot_condition<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        tP<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        tD<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tP<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        x<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> selected_robot<span class=\"token punctuation\">,</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    y <span class=\"token operator\">=</span> get_y<span class=\"token punctuation\">(</span>tD<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    z <span class=\"token operator\">=</span> get_z<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    tH <span class=\"token operator\">=</span> get_tH<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tD<span class=\"token punctuation\">,</span> Th<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    target1 <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>tH <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\"># if not judge_constraint (x, y, z, tP, tD, tH, selected_pods):  # 判断是否符合约束条件</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\">#     raise Exception (\"不满足约束条件\")</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>target1<span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> selected_pods</pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_x_y</span><span class=\"token punctuation\">(</span>pod_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_robot<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 是机器人 r 第 k 个转运的任务（0，1 变量）</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    tP <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人拿起的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    tD <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人放下的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    robot_condition <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作状态（即完成当前工作时间）</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    n_robot_work <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作数量</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    selected_pods_temp <span class=\"token operator\">=</span> get_selected_pods<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>pod_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    selected_pods_temp <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>selected_pods_temp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>selected_pods_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        selected_robot <span class=\"token operator\">=</span> select_robot<span class=\"token punctuation\">(</span>robot_condition<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        tP<span class=\"token punctuation\">[</span>selected_pods_temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods_temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        tD<span class=\"token punctuation\">[</span>selected_pods_temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tP<span class=\"token punctuation\">[</span>selected_pods_temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods_temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods_temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods_temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        x<span class=\"token punctuation\">[</span>selected_pods_temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> selected_robot<span class=\"token punctuation\">,</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    y <span class=\"token operator\">=</span> get_y<span class=\"token punctuation\">(</span>tD<span class=\"token punctuation\">,</span> selected_pods_temp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    z <span class=\"token operator\">=</span> get_z<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    tH <span class=\"token operator\">=</span> get_tH<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods_temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tD<span class=\"token punctuation\">,</span> Th<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> selected_pods_temp<span class=\"token punctuation\">,</span> tD<span class=\"token punctuation\">,</span> tH</pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token triple-quoted-string string\">'''优化函数'''</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token comment\"># 功能：模拟退火算法 (SA)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token comment\"># 输入参数：初始货架排序，初始温度，最终温度，降温因子，每次降温后循环次数</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token comment\"># 输出参数：最优货架排序，最优目标值 1</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">tsp_SA</span><span class=\"token punctuation\">(</span>tour<span class=\"token punctuation\">,</span> initial_temperature<span class=\"token punctuation\">,</span> final_temperature<span class=\"token punctuation\">,</span> alpha<span class=\"token punctuation\">,</span> epoch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    start_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    target1<span class=\"token punctuation\">,</span> selected_pods <span class=\"token operator\">=</span> calculate_single_target<span class=\"token punctuation\">(</span>tour<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    best_target1 <span class=\"token operator\">=</span> target1</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    best_tour <span class=\"token operator\">=</span> tour</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    T <span class=\"token operator\">=</span> initial_temperature</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    iteration <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token keyword\">while</span> T <span class=\"token operator\">></span> final_temperature<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        selected_pods_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        pod_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        random<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>selected_pods_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        random<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>pod_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> selected_pods_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pod_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        sol <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>tour<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>tour<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        sol_change <span class=\"token operator\">=</span> sol<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        sol_change<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sol_change<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sol_change<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sol_change<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        delta <span class=\"token operator\">=</span> calculate_single_target<span class=\"token punctuation\">(</span>sol_change<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> target1</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token keyword\">if</span> delta <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> math<span class=\"token punctuation\">.</span>exp<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>delta <span class=\"token operator\">/</span> T<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> rando<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            tour<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tour<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tour<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> tour<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            target1<span class=\"token punctuation\">,</span> selected_pods <span class=\"token operator\">=</span> calculate_single_target<span class=\"token punctuation\">(</span>tour<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Move accepted</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>        <span class=\"token comment\"># is there an improvement?</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token keyword\">if</span> best_target1 <span class=\"token operator\">></span> target1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            best_target1 <span class=\"token operator\">=</span> target1</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            best_tour <span class=\"token operator\">=</span> tour</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        iteration <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token keyword\">if</span> iteration <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>epoch <span class=\"token operator\">*</span> epoch<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>            T <span class=\"token operator\">*=</span> alpha  <span class=\"token comment\"># Decrease temperature</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token keyword\">if</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start_time <span class=\"token operator\">>=</span> time_constraint<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the iteration of SA is '</span><span class=\"token punctuation\">,</span> iteration <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>            time_cost <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start_time</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>best_tour<span class=\"token punctuation\">,</span> best_target1<span class=\"token punctuation\">,</span> time_cost<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>            <span class=\"token keyword\">return</span> best_tour<span class=\"token punctuation\">,</span> best_target1<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> start_time</pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    end_time <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    time_cost <span class=\"token operator\">=</span> end_time <span class=\"token operator\">-</span> start_time</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SA has been executed '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the iteration of SA is '</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>iteration <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>epoch <span class=\"token operator\">*</span> epoch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>best_tour<span class=\"token punctuation\">,</span> best_target1<span class=\"token punctuation\">,</span> time_cost<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token keyword\">return</span> best_tour<span class=\"token punctuation\">,</span> best_target1<span class=\"token punctuation\">,</span> time_cost</pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    decimal_Th <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'plot_single_target.json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        <span class=\"token comment\"># ensure_ascii=False 才能输入中文，否则是 Unicode 字符</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token comment\"># indent=2 JSON 数据的缩进，美观</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        json_datas <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    fp<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    json_data <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    length<span class=\"token punctuation\">,</span> weight <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    n_pod<span class=\"token punctuation\">,</span> pod_limitation<span class=\"token punctuation\">,</span> loc_pod<span class=\"token punctuation\">,</span> loc_station <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_pod'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'pod_limitation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'loc_pod'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'loc_station'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    n_robot<span class=\"token punctuation\">,</span> ratio_T<span class=\"token punctuation\">,</span> Tp<span class=\"token punctuation\">,</span> Td <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_robot'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'ratio_T'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Tp'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Td'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    n_commodity_type<span class=\"token punctuation\">,</span> commodity_limitation<span class=\"token punctuation\">,</span> A <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_commodity_type'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        <span class=\"token string\">'commodity_limitation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    total_order<span class=\"token punctuation\">,</span> n_order<span class=\"token punctuation\">,</span> B <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'total_order'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_order'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    Th <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>json_data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Th'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>json_data <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'th element of json file is successfully read'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    time_constraint <span class=\"token operator\">=</span> n_pod <span class=\"token operator\">*</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'time_constraint: '</span><span class=\"token punctuation\">,</span> time_constraint<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    iterations_main <span class=\"token operator\">=</span> <span class=\"token number\">456</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    pod_list_rank <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    tour_SA<span class=\"token punctuation\">,</span> target1_SA_temp_single<span class=\"token punctuation\">,</span> time_SA_temp_single <span class=\"token operator\">=</span> tsp_SA<span class=\"token punctuation\">(</span>pod_list_rank<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> n_pod<span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span> <span class=\"token operator\">*</span> n_pod<span class=\"token punctuation\">,</span> <span class=\"token number\">0.98</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token comment\"># 获取机器人及拣货人员的任务安排</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">,</span> tD<span class=\"token punctuation\">,</span> tH <span class=\"token operator\">=</span> get_x_y<span class=\"token punctuation\">(</span>tour_SA<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    robot_task <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        robot_task<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>            <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>                <span class=\"token keyword\">if</span> x<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>                    robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>        robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>            robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>tD<span class=\"token punctuation\">[</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>    transform_y <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>            <span class=\"token keyword\">if</span> y<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>                transform_y<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>    human_task <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>transform_y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>        human_task<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>transform_y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        human_task<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>tH<span class=\"token punctuation\">[</span>transform_y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>        human_task<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>tH<span class=\"token punctuation\">[</span>transform_y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">[</span>transform_y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'算法SA已经执行完毕，针对目标值'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>target1_SA_temp_single<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'求解最优值为：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>tour_SA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'对应的机器人调度安排为：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'机器人'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'调度安排：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'对应工作的完成时间为：'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'机器人'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'调度时间：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'拣货人员拣货顺序：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>human_task<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'各货架开始拣货时间为：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>human_task<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'各货架结束拣货时间为：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>human_task<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SA算法执行时间：'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>time_SA_temp_single<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>    <span class=\"token comment\"># 绘制图形</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>    <span class=\"token comment\"># （1）结果示意图</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>    plt_gantt<span class=\"token punctuation\">(</span>robot_task<span class=\"token punctuation\">,</span> human_task<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  上述程序的运行结果如下图所示：<br>\n<img data-src=\"/images/code/python/python_plot_RMFS/2.1.png\" alt=\"\"></p>\n",
            "tags": [
                "最优化",
                "多目标最优化",
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/04/02/code/python/python_thread/",
            "url": "http://qianqiu-cell.github.io/2023/04/02/code/python/python_thread/",
            "title": "Python多线程",
            "date_published": "2023-04-01T16:00:00.000Z",
            "content_html": "<p>   <code>python</code>  线程中常用的两个模块为： <code>_thread</code>  和 <code>threading</code> （推荐使用）。（注： <code>thread</code>  模块已经被废弃，用户可以使用 <code>threading</code>  模块代替，所以 <code>python3</code>  中不能再使用 <code>thread</code>  模块，为了兼容性， <code>python3</code>  将 <code>thread</code>  重命名为 <code>_thread</code> ）</p>\n<h1 id=\"一-python的线程使用方式\"><a class=\"markdownIt-Anchor\" href=\"#一-python的线程使用方式\">#</a> 一、Python 的线程使用方式</h1>\n<p>   <code>Python</code>  中使用线程有两种方式：函数或者用类来包装线程对象。（分别对应 <code>_thread</code>  和 <code>threading</code>  模块）</p>\n<h2 id=\"11-_thread-函数式线程\"><a class=\"markdownIt-Anchor\" href=\"#11-_thread-函数式线程\">#</a> 1.1 _thread - 函数式线程</h2>\n<p>  调用 <code>_thread</code>  模块中的 <code>start_new_thread()</code>  函数来产生新线程。语法如下:</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>_thread<span class=\"token punctuation\">.</span>start_new_thread <span class=\"token punctuation\">(</span> function<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> kwargs<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>参数说明：</p>\n<ul>\n<li>function - 线程函数。</li>\n<li>args - 传递给线程函数的参数，他必须是个 tuple 类型。</li>\n<li>kwargs - 可选参数。<br>\n  使用案例如下：</li>\n</ul>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> _thread</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 为线程定义一个函数</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">print_time</span><span class=\"token punctuation\">(</span>threadName<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">while</span> count <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>threadName<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 创建两个线程</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    _thread<span class=\"token punctuation\">.</span>start_new_thread<span class=\"token punctuation\">(</span>print_time<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Thread-1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    _thread<span class=\"token punctuation\">.</span>start_new_thread<span class=\"token punctuation\">(</span>print_time<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Thread-2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error: 无法启动线程\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><p>  执行以上程序输出结果如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token number\">13</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token number\">15</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token number\">17</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token number\">19</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token number\">19</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token number\">21</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token number\">23</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token number\">27</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token number\">31</span> <span class=\"token number\">2023</span></pre></td></tr></table></figure><h2 id=\"12-threading-类包装式线程\"><a class=\"markdownIt-Anchor\" href=\"#12-threading-类包装式线程\">#</a> 1.2 threading - 类包装式线程</h2>\n<p>   <code>_thread</code>  提供了低级别的、原始的线程以及一个简单的锁，它相比于 <code>threading</code>  模块的功能还是比较有限的。 <code>threading</code>  模块除了包含 <code>_thread</code>  模块中的所有方法外，还提供的其他方法：</p>\n<ul>\n<li><code>threading.currentThread()</code> : 返回当前的线程变量。</li>\n<li><code>threading.enumerate()</code> : 返回一个包含正在运行的线程的 <code>list</code> 。正在运行指线程启动后、结束前，不包括启动前和终止后的线程。</li>\n<li><code>threading.activeCount()</code> : 返回正在运行的线程数量，与 <code>len(threading.enumerate())</code>  有相同的结果。<br>\n  除了使用方法外，线程模块同样提供了 Thread 类来处理线程，Thread 类提供了以下方法:</li>\n<li><code>run()</code> : 用以表示线程活动的方法。</li>\n<li><code>start()</code> : 启动线程活动。</li>\n<li><code>join([time])</code> : 等待至线程中止。这阻塞调用线程直至线程的 <code>join()</code>  方法被调用中止 - 正常退出或者抛出未处理的异常 - 或者是可选的超时发生。</li>\n<li><code>isAlive()</code> : 返回线程是否活动的。</li>\n<li><code>getName()</code> : 返回线程名。</li>\n<li><code>setName()</code> : 设置线程名。<br>\n  我们可以通过直接从 <code>threading.Thread</code>  继承创建一个新的子类，并实例化后调用 <code>start()</code>  方法启动新线程，即它调用了线程的 <code>run()</code>  方法。使用案例如下：</li>\n</ul>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">myThread</span><span class=\"token punctuation\">(</span>threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> threadID<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>threadID <span class=\"token operator\">=</span> threadID</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>delay <span class=\"token operator\">=</span> delay</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始线程：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        print_time<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出线程：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">print_time</span><span class=\"token punctuation\">(</span>threadName<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">,</span> counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> counter<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>threadName<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        counter <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 创建新线程</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>thread1 <span class=\"token operator\">=</span> myThread<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Thread-1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>thread2 <span class=\"token operator\">=</span> myThread<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Thread-2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># 开启新线程</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>thread1<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>thread2<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>thread1<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>thread2<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出主线程\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  以上程序执行结果如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>开始线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>开始线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">34</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">36</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>退出线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">39</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">52</span><span class=\"token punctuation\">:</span><span class=\"token number\">41</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>退出线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>退出主线程</pre></td></tr></table></figure><h1 id=\"三-线程中止\"><a class=\"markdownIt-Anchor\" href=\"#三-线程中止\">#</a> 三、线程中止</h1>\n<p>  如果想要使线程在运行规定一段时间之后结束，可以通过在线程的类中添加运行状态的变量，并在其他线程中记录时间，当其他线程记录时间到达时改变子线程的运行状态变量，子线程根据判断跳出 run () 程序来结束该程序。<br>\n  ⚠️⚠️⚠️由于本人并没有在网上找到其他更加方便的中止线程的方法，故自己设计了这种效率较低的中止方法</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">myThread</span><span class=\"token punctuation\">(</span>threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> threadID<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>threadID <span class=\"token operator\">=</span> threadID</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>delay <span class=\"token operator\">=</span> delay</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>run_state <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始线程：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        self<span class=\"token punctuation\">.</span>print_time<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出线程：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        self<span class=\"token punctuation\">.</span>run_state <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">print_time</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">while</span> counter<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>run_state<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                counter <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"线程被中止：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># 创建新线程</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>thread1 <span class=\"token operator\">=</span> myThread<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Thread-1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 开启新线程</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>thread1<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># 中止子线程</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>thread1<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  以上程序执行结果如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>开始线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">:</span><span class=\"token number\">36</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>线程被中止：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>退出线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr></table></figure><h1 id=\"四-threadjoin用法详解\"><a class=\"markdownIt-Anchor\" href=\"#四-threadjoin用法详解\">#</a> 四、Thread.join 用法详解</h1>\n<p>   <code>join()</code>  方法的主要作用是阻塞主线程，其格式为 <code>thread.join(timeout)</code> 。 <code>timeout</code>  参数作为可选参数，其功能是指定 <code>thread</code>  线程最多阻塞主线程的时间（以秒为单位），如果省略，则默认直到 <code>thread</code>  执行结束（进入死亡状态）才释放主线程。简单理解为 <code>join()</code>  了多长时间，那么主线程就会被阻塞多长时间。如下展示了 <code>join()</code>  的三种情况：</p>\n<h2 id=\"41-没有使用join\"><a class=\"markdownIt-Anchor\" href=\"#41-没有使用join\">#</a> 4.1 没有使用 join</h2>\n<p>  此时主线程和子线程相当于齐头并进，主线程不会等待子线程执行完了再结束，即不会阻塞。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">myThread</span><span class=\"token punctuation\">(</span>threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> threadID<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>threadID <span class=\"token operator\">=</span> threadID</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>delay <span class=\"token operator\">=</span> delay</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始线程：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        print_time<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出线程：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">print_time</span><span class=\"token punctuation\">(</span>threadName<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">,</span> counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> counter<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>threadName<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        counter <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 创建新线程</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>thread1 <span class=\"token operator\">=</span> myThread<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Thread-1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 开启新线程</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>thread1<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出主线程\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  以上程序执行结果如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>开始线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span>退出主线程</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span><span class=\"token number\">26</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span><span class=\"token number\">27</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span><span class=\"token number\">28</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span><span class=\"token number\">29</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span><span class=\"token number\">31</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span><span class=\"token number\">33</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">:</span><span class=\"token number\">34</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>退出线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr></table></figure><h2 id=\"42-使用join但没有设置参数最常用\"><a class=\"markdownIt-Anchor\" href=\"#42-使用join但没有设置参数最常用\">#</a> 4.2 使用 join 但没有设置参数（最常用）</h2>\n<p>当主线程内的子线程都 <code>start</code>  后，主线程会阻塞并等待子线程执行完才继续执行，直观的表现是：子线程都 <code>start</code>  后，主线程若还有未执行的代码，此时不会继续执行剩余代码，而是等待子线程都执行完后再执行。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">myThread</span><span class=\"token punctuation\">(</span>threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> threadID<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>threadID <span class=\"token operator\">=</span> threadID</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>delay <span class=\"token operator\">=</span> delay</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始线程：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        print_time<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出线程：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">print_time</span><span class=\"token punctuation\">(</span>threadName<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">,</span> counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> counter<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>threadName<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        counter <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 创建新线程</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>thread1 <span class=\"token operator\">=</span> myThread<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Thread-1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 开启新线程</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>thread1<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>thread1<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出主线程\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  以上程序执行结果如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>开始线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">21</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">22</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">23</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">25</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">26</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">27</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">28</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">29</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>退出线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>退出主线程</pre></td></tr></table></figure><h2 id=\"43-有join并设置参数\"><a class=\"markdownIt-Anchor\" href=\"#43-有join并设置参数\">#</a> 4.3 有 join 并设置参数</h2>\n<p>  设置了主线程最长阻塞时间，但即使是主线程结束阻塞后执行完剩余代码，子线程也会继续执行，而不会随着主线程的结束而终止。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">myThread</span><span class=\"token punctuation\">(</span>threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> threadID<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>threadID <span class=\"token operator\">=</span> threadID</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        self<span class=\"token punctuation\">.</span>delay <span class=\"token operator\">=</span> delay</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"开始线程：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        print_time<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>delay<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出线程：\"</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">print_time</span><span class=\"token punctuation\">(</span>threadName<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">,</span> counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> counter<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>threadName<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        counter <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 创建新线程</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>thread1 <span class=\"token operator\">=</span> myThread<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Thread-1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 开启新线程</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>thread1<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>thread1<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"退出主线程\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  以上程序执行结果如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>开始线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">56</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">57</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>退出主线程</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">58</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">37</span><span class=\"token punctuation\">:</span><span class=\"token number\">59</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">38</span><span class=\"token punctuation\">:</span><span class=\"token number\">00</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">38</span><span class=\"token punctuation\">:</span><span class=\"token number\">01</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">38</span><span class=\"token punctuation\">:</span><span class=\"token number\">02</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">38</span><span class=\"token punctuation\">:</span><span class=\"token number\">03</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">38</span><span class=\"token punctuation\">:</span><span class=\"token number\">04</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Tue Apr <span class=\"token number\">11</span> <span class=\"token number\">15</span><span class=\"token punctuation\">:</span><span class=\"token number\">38</span><span class=\"token punctuation\">:</span><span class=\"token number\">05</span> <span class=\"token number\">2023</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>退出线程：Thread<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/27/code/python/python_plot/",
            "url": "http://qianqiu-cell.github.io/2023/03/27/code/python/python_plot/",
            "title": "python+matplotlib绘制图像",
            "date_published": "2023-03-26T16:00:00.000Z",
            "content_html": "<h1 id=\"一-一些常用图形\"><a class=\"markdownIt-Anchor\" href=\"#一-一些常用图形\">#</a> 一、一些常用图形</h1>\n<p>   <code>matplotlib</code>  可支持的绘图类型可以参考官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9zdGFibGUvcGxvdF90eXBlcy9pbmRleC5odG1s\">https://matplotlib.org/stable/plot_types/index.html</span></p>\n<h2 id=\"11-plot-绘制折线图曲线图\"><a class=\"markdownIt-Anchor\" href=\"#11-plot-绘制折线图曲线图\">#</a> 1.1 plot - 绘制折线图（曲线图）</h2>\n<p>  使用 <code>plt.plot()</code>  函数可以绘制折线图， <code>plot()</code>  函数的原型为 <code>plt.plot(x, y, format_string, **kwargs) </code> ，其中，仓用参数的解释如下：</p>\n<ul>\n<li>x：x 轴数据，列表或数组，可选</li>\n<li>y：y 轴数据，列表或数组</li>\n<li>format_string：控制曲线的格式字符串，可选，由颜色字符、风格字符和标记字符组成（等同于 color、marker 和 linestyle 的结合）。<br>\n使用案例如下：</li>\n</ul>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># evenly sampled time at 200ms intervals</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>t <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># red dashes, blue squares and green triangles</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> <span class=\"token string\">'r--'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> t<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bs'</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> t<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'g^'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  绘制的图形如下图所示：<br>\n<img data-src=\"/images/code/python/python_plot/1.1.png\" alt=\"\"></p>\n<h2 id=\"12-scatter-绘制散点图\"><a class=\"markdownIt-Anchor\" href=\"#12-scatter-绘制散点图\">#</a> 1.2 scatter - 绘制散点图</h2>\n<p>  使用 <code>plt.scatter()</code>  函数可以绘制散点图， <code>scatter()</code>  函数的原型为 <code>scatter(x, y, s=None, c=None, marker=None, cmap=None, norm=None, vmin=None, vmax=None, alpha=None, linewidths=None, verts=None, edgecolors=None, hold=None, data=None, **kwargs)</code> ，其中，一些常用参数的解释如下：</p>\n<ul>\n<li>x, y  # 散点的坐标，float or array-like, shape (n,)</li>\n<li>s  # 散点的面积，float or array-like, shape (n,), optional</li>\n<li>c  # 散点的颜色（默认值为蓝色，‘b’，其余颜色可参考 2.1）</li>\n<li>marker  # 散点样式（默认值为实心圆，‘o’，其余样式可参考 2.1）</li>\n<li>alpha  # 散点透明度（[0, 1] 之间的数，0 表示完全透明，1 则表示完全不透明）</li>\n<li>linewidths  # 散点的边缘线宽</li>\n<li>edgecolors  # 散点的边缘颜色<br>\n使用案例如下：</li>\n</ul>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">20</span>  <span class=\"token comment\"># 生成 20 个点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> s<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> marker<span class=\"token operator\">=</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  绘制的图形如下所示：<br>\n<img data-src=\"/images/code/python/python_plot/1.2.png\" alt=\"\"></p>\n<h1 id=\"二-一些常用操作\"><a class=\"markdownIt-Anchor\" href=\"#二-一些常用操作\">#</a> 二、一些常用操作</h1>\n<h2 id=\"21-更改曲线样式\"><a class=\"markdownIt-Anchor\" href=\"#21-更改曲线样式\">#</a> 2.1 更改曲线样式</h2>\n<p>  在绘制曲线图以及散点图时，可以通过设置线条形状 <code>linestyle</code> 、线条宽度 <code>linewidth</code>  以及线条颜色 <code>color</code>  来改变图形的样式。</p>\n<h3 id=\"线条颜色color\"><a class=\"markdownIt-Anchor\" href=\"#线条颜色color\">#</a> 线条颜色 color</h3>\n<p>  在 <code>matplotlib</code>  中有如下五种颜色的设置方式（还有其他如 <code>cmap</code>  等进阶方法暂时没有用到，故没有整理）：<br>\n（1） <code>RGB、RGBA</code> <br>\n  在 <code>matplotlib</code>  中可以使用三元组 <code>RGB</code> ，即红、蓝、绿的分量，其中每个分量在 <code>[0, 1]</code>  区间内，因此 <code>(1, 0, 0)</code>  表示纯红色。四元组 <code>RGBA</code>  的前三个元素和三元组的定义相同，第四个元素定义透明度，也在 <code>[0, 1]</code>  区间内。使用案例如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 颜色用 [0,1] 之间的浮点数表示，四个分量按顺序分别为 (red, green, blue, alpha)，其中 alpha 透明度可省略</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>（2） <code>HEX RGB</code>  或 <code>HEX RGBA</code> <br>\n   <code>matplotlib</code>  可以将 <code>HTML</code>  颜色字符串解释为实际颜色。这些字符串被定义为 <code>#RRGGBB</code> ，其中 <code>RR</code> 、 <code>GG</code>  和 <code>BB</code>  分别是使用十六进制编码的红色、绿色和蓝色分量。使用案例如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 用十六进制颜色码表示，同样最后两位表示透明度，可省略</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'#0f0f0f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'#0f0f0f80'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>（3）灰度字符串<br>\n   <code>matplotlib</code>  将浮点值的字符串表示形式解释为灰度，例如 <code>0.75</code>  表示中浅灰色。使用案例如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 当只有一个位于 [0,1] 的值时，表示灰度色阶</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'0.1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>（4）单字符基本颜色<br>\n   <code>matplotlib</code>  有八个基本颜色，可以用单字符串来表示，分别是 <code>‘b’, ‘g’, ‘r’, ‘c’, ‘m’, ‘y’, ‘k’, ‘w’</code> ，对应的是 <code>blue, green, red, cyan, magenta, yellow, black, and white</code>  的英文缩写，如下图所示：<br>\n<img data-src=\"/images/code/python/python_plot/2.1.png\" alt=\"\"><br>\n（5）颜色名称<br>\n   <code>matplotlib</code>  提供了颜色对照表，可供查询颜色对应的名称，如下图所示：<br>\n<img data-src=\"/images/code/python/python_plot/2.2.png\" alt=\"\"></p>\n<h3 id=\"线条样式\"><a class=\"markdownIt-Anchor\" href=\"#线条样式\">#</a> 线条样式</h3>\n<p>（1）折线形状</p>\n<ul>\n<li>‘-’ ：实线</li>\n<li>‘-.’：实虚线</li>\n<li>‘–’ ：虚线</li>\n<li>‘:’ ：点虚线<br>\n（2）节点形状</li>\n<li>‘s’ : 方块状</li>\n<li>‘o’ : 实心圆</li>\n<li>‘^’ : 正三角形</li>\n<li>‘v’ : 反正三角形</li>\n<li>‘+’ : 加号</li>\n<li>‘*’ : 星号</li>\n<li>‘,’ ：点</li>\n<li>‘x’ : x 号</li>\n<li>‘p’ : 五角星</li>\n<li>‘1’ : 三脚架标记</li>\n<li>‘2’ : 三脚架标记</li>\n</ul>\n<h2 id=\"22-图形显示的一些设置\"><a class=\"markdownIt-Anchor\" href=\"#22-图形显示的一些设置\">#</a> 2.2 图形显示的一些设置</h2>\n<p>  设置图像的横纵坐标轴名称、图像标题、设置图例以及横纵坐标范围的示例程序（支持 <code>latex</code> ）如下所示：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>X <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Y1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Y2 <span class=\"token operator\">=</span> X</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Y3 <span class=\"token operator\">=</span> X <span class=\"token operator\">*</span> X</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Y4 <span class=\"token operator\">=</span> X <span class=\"token operator\">*</span> X <span class=\"token operator\">*</span> X</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y1<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"lightcoral\"</span><span class=\"token punctuation\">,</span> linewidth<span class=\"token operator\">=</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span> linestyle<span class=\"token operator\">=</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">r\"$y_1=\\sqrt&#123;x&#125;$\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y2<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"burlywood\"</span><span class=\"token punctuation\">,</span> linewidth<span class=\"token operator\">=</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span> linestyle<span class=\"token operator\">=</span><span class=\"token string\">\"--\"</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">r\"$y_2=x$\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y3<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"mediumturquoise\"</span><span class=\"token punctuation\">,</span> linewidth<span class=\"token operator\">=</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span> linestyle<span class=\"token operator\">=</span><span class=\"token string\">\"-.\"</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">r\"$y_3=x^2$\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y4<span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">\"mediumpurple\"</span><span class=\"token punctuation\">,</span> linewidth<span class=\"token operator\">=</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span> linestyle<span class=\"token operator\">=</span><span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">r\"$y_4=x^3$\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 常见的 legend 的 loc 位置还有 best, upper right, upper left, lower left, lower right,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># right, center left, center right, lower center, upper center, center，</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 其中 best 表示将标签加载到 python 认为最佳的位置。</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>plt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span>loc<span class=\"token operator\">=</span><span class=\"token string\">\"best\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># x、y 坐标以及标题</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> fontsize<span class=\"token operator\">=</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>plt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span> fontsize<span class=\"token operator\">=</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">r'$f(x)=\\sqrt&#123;x&#125;,x,x^2,x^3$'</span><span class=\"token punctuation\">,</span> fontsize<span class=\"token operator\">=</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 设置坐标范围</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>plt<span class=\"token punctuation\">.</span>ylim<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xlim<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"23-子图\"><a class=\"markdownIt-Anchor\" href=\"#23-子图\">#</a> 2.3 子图</h2>\n<p>   <code>Matplotlib</code>  的可以把很多张图画到一个显示界面，在作对比分析的时候非常有用。对应的有 <code>plt</code>  的 <code>subplot</code> 、 <code>subplots</code>  和 <code>figure</code>  的 <code>add_subplol</code>  的方法，参数可以是一个三位数字（例如 <code>111</code> ），也可以是一个数组（例如 <code>[1,1,1]</code> ）， <code>3</code>  个数字分别代表：子图总行数、子图总列数、子图位置。</p>\n<h3 id=\"通过plt的subplot\"><a class=\"markdownIt-Anchor\" href=\"#通过plt的subplot\">#</a> 通过 plt 的 subplot</h3>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 画第 1 个图：折线图</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">221</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x <span class=\"token operator\">*</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 画第 2 个图：散点图</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">222</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 画第 3 个图：饼图</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">223</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>plt<span class=\"token punctuation\">.</span>pie<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> labels<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ABCD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> autopct<span class=\"token operator\">=</span><span class=\"token string\">'%.0f'</span><span class=\"token punctuation\">,</span> explode<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 画第 4 个图：条形图</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>plt<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"通过plt的subplots\"><a class=\"markdownIt-Anchor\" href=\"#通过plt的subplots\">#</a> 通过 plt 的 subplots</h3>\n<p>   <code>subplots</code>  返回的值的类型为元组，其中包含两个元素：第一个为一个画布，第二个是子图</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>fig<span class=\"token punctuation\">,</span>subs<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 画第 1 个图：折线图</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>x<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>subs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>x<span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 画第 2 个图：散点图</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>subs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 画第 3 个图：饼图</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>subs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pie<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>labels<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ABCD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>autopct<span class=\"token operator\">=</span><span class=\"token string\">'%.0f'</span><span class=\"token punctuation\">,</span>explode<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 画第 4 个图：条形图</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>subs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>color<span class=\"token operator\">=</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"通过figure的add_subplot\"><a class=\"markdownIt-Anchor\" href=\"#通过figure的add_subplot\">#</a> 通过 figure 的 add_subplot</h3>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>fig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 画第 1 个图：折线图</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ax1 <span class=\"token operator\">=</span> fig<span class=\"token punctuation\">.</span>add_subplot<span class=\"token punctuation\">(</span><span class=\"token number\">221</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>ax1<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x <span class=\"token operator\">*</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 画第 2 个图：散点图</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>ax2 <span class=\"token operator\">=</span> fig<span class=\"token punctuation\">.</span>add_subplot<span class=\"token punctuation\">(</span><span class=\"token number\">222</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ax2<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 画第 3 个图：饼图</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ax3 <span class=\"token operator\">=</span> fig<span class=\"token punctuation\">.</span>add_subplot<span class=\"token punctuation\">(</span><span class=\"token number\">223</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ax3<span class=\"token punctuation\">.</span>pie<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> labels<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ABCD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> autopct<span class=\"token operator\">=</span><span class=\"token string\">'%.0f'</span><span class=\"token punctuation\">,</span> explode<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 画第 4 个图：条形图</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ax4 <span class=\"token operator\">=</span> fig<span class=\"token punctuation\">.</span>add_subplot<span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ax4<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>以上三种方式生成的图形均如下所示：<br>\n<img data-src=\"/images/code/python/python_plot/2.3.png\" alt=\"\"></p>\n<h3 id=\"如何不规则划分\"><a class=\"markdownIt-Anchor\" href=\"#如何不规则划分\">#</a> 如何不规则划分</h3>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 画第 1 个图：折线图</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">221</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x <span class=\"token operator\">*</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 画第 2 个图：散点图</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">222</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 画第 3 个图：条形图</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 前面的两个图占了 221 和 222 的位置，如果想在下面只放一个图，得把前两个当成一列，即 2 行 1 列第 2 个位置</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">212</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>plt<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运行效果如下所示：<br>\n<img data-src=\"/images/code/python/python_plot/2.4.png\" alt=\"\"></p>\n<h1 id=\"三-其他操作\"><a class=\"markdownIt-Anchor\" href=\"#三-其他操作\">#</a> 三、其他操作</h1>\n<h2 id=\"31-绘图风格\"><a class=\"markdownIt-Anchor\" href=\"#31-绘图风格\">#</a> 3.1 绘图风格</h2>\n<p>   <code>Matplotlib</code>  库提供的 <code>style.use()</code>  函数可以为创建的图形设置合适的美学风格。官方文档中给出的可使用样式<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXRwbG90bGliLm9yZy9zdGFibGUvZ2FsbGVyeS9zdHlsZV9zaGVldHMvc3R5bGVfc2hlZXRzX3JlZmVyZW5jZS5odG1s\">戳此</span>，如下的示例中使用了 <code>classic</code>  风格的样式：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>plt<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>use<span class=\"token punctuation\">(</span><span class=\"token string\">'classic'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 画第 1 个图：折线图</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">221</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x <span class=\"token operator\">*</span> x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 画第 2 个图：散点图</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">222</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 画第 3 个图：条形图</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 前面的两个图占了 221 和 222 的位置，如果想在下面只放一个图，得把前两个当成一列，即 2 行 1 列第 2 个位置</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>plt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">212</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>plt<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运行效果如下图所示：<br>\n<img data-src=\"/images/code/python/python_plot/2.5.png\" alt=\"\"></p>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/24/code/python/python_jMetal/",
            "url": "http://qianqiu-cell.github.io/2023/03/24/code/python/python_jMetal/",
            "title": "python+jMetal应用",
            "date_published": "2023-03-23T16:00:00.000Z",
            "content_html": "<p>  有关 <code>jMetal</code>  的使用可以参考官方手册（不完整，正在完善中）：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qbWV0YWwuZ2l0aHViLmlvL2pNZXRhbFB5L2luZGV4Lmh0bWwj\">https://jmetal.github.io/jMetalPy/index.html#</span>和 GitHub 网页说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2pNZXRhbC9qTWV0YWxQeQ==\">https://github.com/jMetal/jMetalPy</span>。本文使用的 <code>jMetalpy</code>  版本为 <code>1.5.5</code></p>\n<h1 id=\"一-一些使用技巧\"><a class=\"markdownIt-Anchor\" href=\"#一-一些使用技巧\">#</a> 一、一些使用技巧</h1>\n<p>（1）在开始编写 <code>jMetal</code>  时，可以参考 <code>GitHub</code>  下载路径下的 <code>jMetal-main/examples</code>  中的案例，找到需要解决问题对应的案例，在两个（或一个）案例的基础上进行更改；<br>\n（2）第一个案例：选择单目标 / 多目标，之后选择使用的算法，找到一个案例；第二个案例：判断需要解决问题的类型（如整数规划， <code>TSP</code>  路径规划， <code>0-1</code>  规划等），在全部案例中搜索对应问题类型的案例，找到第二个案例；<br>\n（3）在找到对应案例之后，只需要将 <code>problem</code>  更改为我们的问题即可。</p>\n<h1 id=\"二-moead库文件更改\"><a class=\"markdownIt-Anchor\" href=\"#二-moead库文件更改\">#</a> 二、MOEA/D 库文件更改</h1>\n<p>  当使用 <code>MOEA/D</code>  算法求解序列问题时，如果遇到报错 <code>Exception: The number of parents is not two: 3</code> ，则需要更改 <code>jMetalpy</code>  的库代码。找到 <code>site-packages\\jmetal\\algorithm\\multiobjective\\moead.py</code> ，将第一个 <code>mating_population.append(population[self.current_subproblem])</code>  注释掉。最终代码如下</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> copy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> ceil</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> TypeVar<span class=\"token punctuation\">,</span> List<span class=\"token punctuation\">,</span> Generator</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>algorithm<span class=\"token punctuation\">.</span>singleobjective<span class=\"token punctuation\">.</span>genetic_algorithm <span class=\"token keyword\">import</span> GeneticAlgorithm</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>config <span class=\"token keyword\">import</span> store</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>operator <span class=\"token keyword\">import</span> Mutation</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>problem <span class=\"token keyword\">import</span> Problem</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>operator <span class=\"token keyword\">import</span> DifferentialEvolutionCrossover<span class=\"token punctuation\">,</span> NaryRandomSolutionSelection</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>aggregative_function <span class=\"token keyword\">import</span> AggregativeFunction</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>constraint_handling <span class=\"token keyword\">import</span> feasibility_ratio<span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    overall_constraint_violation_degree<span class=\"token punctuation\">,</span> is_feasible</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>density_estimator <span class=\"token keyword\">import</span> CrowdingDistance</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>evaluator <span class=\"token keyword\">import</span> Evaluator</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>neighborhood <span class=\"token keyword\">import</span> WeightVectorNeighborhood</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>ranking <span class=\"token keyword\">import</span> FastNonDominatedRanking</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>termination_criterion <span class=\"token keyword\">import</span> TerminationCriterion<span class=\"token punctuation\">,</span> StoppingByEvaluations</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>S <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>R <span class=\"token operator\">=</span> List<span class=\"token punctuation\">[</span>S<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MOEAD</span><span class=\"token punctuation\">(</span>GeneticAlgorithm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                 problem<span class=\"token punctuation\">:</span> Problem<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                 population_size<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                 mutation<span class=\"token punctuation\">:</span> Mutation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                 crossover<span class=\"token punctuation\">:</span> DifferentialEvolutionCrossover<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                 aggregative_function<span class=\"token punctuation\">:</span> AggregativeFunction<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                 neighbourhood_selection_probability<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                 max_number_of_replaced_solutions<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                 neighbor_size<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                 weight_files_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                 termination_criterion<span class=\"token punctuation\">:</span> TerminationCriterion <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>default_termination_criteria<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                 population_generator<span class=\"token punctuation\">:</span> Generator <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>default_generator<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                 population_evaluator<span class=\"token punctuation\">:</span> Evaluator <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>default_evaluator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        :param max_number_of_replaced_solutions: (eta in Zhang &amp; Li paper).</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        :param neighbourhood_selection_probability: Probability of mating with a solution in the neighborhood rather</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>               than the entire population (Delta in Zhang &amp; Li paper).</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MOEAD<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            problem<span class=\"token operator\">=</span>problem<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            population_size<span class=\"token operator\">=</span>population_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            offspring_population_size<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            mutation<span class=\"token operator\">=</span>mutation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            crossover<span class=\"token operator\">=</span>crossover<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            selection<span class=\"token operator\">=</span>NaryRandomSolutionSelection<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            population_evaluator<span class=\"token operator\">=</span>population_evaluator<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            population_generator<span class=\"token operator\">=</span>population_generator<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            termination_criterion<span class=\"token operator\">=</span>termination_criterion</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        self<span class=\"token punctuation\">.</span>max_number_of_replaced_solutions <span class=\"token operator\">=</span> max_number_of_replaced_solutions</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        self<span class=\"token punctuation\">.</span>fitness_function <span class=\"token operator\">=</span> aggregative_function</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        self<span class=\"token punctuation\">.</span>neighbourhood <span class=\"token operator\">=</span> WeightVectorNeighborhood<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            number_of_weight_vectors<span class=\"token operator\">=</span>population_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            neighborhood_size<span class=\"token operator\">=</span>neighbor_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            weight_vector_size<span class=\"token operator\">=</span>problem<span class=\"token punctuation\">.</span>number_of_objectives<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            weights_path<span class=\"token operator\">=</span>weight_files_path</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        self<span class=\"token punctuation\">.</span>neighbourhood_selection_probability <span class=\"token operator\">=</span> neighbourhood_selection_probability</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        self<span class=\"token punctuation\">.</span>permutation <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        self<span class=\"token punctuation\">.</span>current_subproblem <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        self<span class=\"token punctuation\">.</span>neighbor_type <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">init_progress</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        self<span class=\"token punctuation\">.</span>evaluations <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>population_size</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">for</span> solution <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            self<span class=\"token punctuation\">.</span>fitness_function<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        self<span class=\"token punctuation\">.</span>permutation <span class=\"token operator\">=</span> Permutation<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>population_size<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        observable_data <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_observable_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        self<span class=\"token punctuation\">.</span>observable<span class=\"token punctuation\">.</span>notify_all<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>observable_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">selection</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>S<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        self<span class=\"token punctuation\">.</span>current_subproblem <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>permutation<span class=\"token punctuation\">.</span>get_next_value<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        self<span class=\"token punctuation\">.</span>neighbor_type <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>choose_neighbor_type<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>neighbor_type <span class=\"token operator\">==</span> <span class=\"token string\">'NEIGHBOR'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            neighbors <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>neighbourhood<span class=\"token punctuation\">.</span>get_neighbors<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_subproblem<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            mating_population <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>selection_operator<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>neighbors<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            mating_population <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>selection_operator<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>population<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token comment\"># mating_population.append(population[self.current_subproblem])</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">return</span> mating_population</pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">reproduction</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> mating_population<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>S<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> List<span class=\"token punctuation\">[</span>S<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        self<span class=\"token punctuation\">.</span>crossover_operator<span class=\"token punctuation\">.</span>current_individual <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>current_subproblem<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        offspring_population <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>crossover_operator<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>mating_population<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        self<span class=\"token punctuation\">.</span>mutation_operator<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>offspring_population<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token keyword\">return</span> offspring_population</pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">replacement</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>S<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> offspring_population<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>S<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> List<span class=\"token punctuation\">[</span>S<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        new_solution <span class=\"token operator\">=</span> offspring_population<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        self<span class=\"token punctuation\">.</span>fitness_function<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        new_population <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>update_current_subproblem_neighborhood<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token keyword\">return</span> new_population</pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">update_current_subproblem_neighborhood</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> new_solution<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        permuted_neighbors_indexes <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>generate_permutation_of_neighbors<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_subproblem<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        replacements <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>permuted_neighbors_indexes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            k <span class=\"token operator\">=</span> permuted_neighbors_indexes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            f1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fitness_function<span class=\"token punctuation\">.</span>compute<span class=\"token punctuation\">(</span>population<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>neighbourhood<span class=\"token punctuation\">.</span>weight_vectors<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            f2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fitness_function<span class=\"token punctuation\">.</span>compute<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>neighbourhood<span class=\"token punctuation\">.</span>weight_vectors<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            <span class=\"token keyword\">if</span> f2 <span class=\"token operator\">&lt;</span> f1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                population<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>                replacements <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>            <span class=\"token keyword\">if</span> replacements <span class=\"token operator\">>=</span> self<span class=\"token punctuation\">.</span>max_number_of_replaced_solutions<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token keyword\">return</span> population</pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">generate_permutation_of_neighbors</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> subproblem_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>neighbor_type <span class=\"token operator\">==</span> <span class=\"token string\">'NEIGHBOR'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            neighbors <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>neighbourhood<span class=\"token punctuation\">.</span>get_neighborhood<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>subproblem_id<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            permuted_array <span class=\"token operator\">=</span> copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>neighbors<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            permuted_array <span class=\"token operator\">=</span> Permutation<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>population_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get_permutation<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token keyword\">return</span> permuted_array</pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">choose_neighbor_type</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        rnd <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>        <span class=\"token keyword\">if</span> rnd <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>neighbourhood_selection_probability<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            neighbor_type <span class=\"token operator\">=</span> <span class=\"token string\">'NEIGHBOR'</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            neighbor_type <span class=\"token operator\">=</span> <span class=\"token string\">'POPULATION'</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        <span class=\"token keyword\">return</span> neighbor_type</pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'MOEAD'</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_result</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>solutions</pre></td></tr><tr><td data-num=\"154\"></td><td><pre></pre></td></tr><tr><td data-num=\"155\"></td><td><pre></pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MOEAD_DRA</span><span class=\"token punctuation\">(</span>MOEAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> problem<span class=\"token punctuation\">,</span> population_size<span class=\"token punctuation\">,</span> mutation<span class=\"token punctuation\">,</span> crossover<span class=\"token punctuation\">,</span> aggregative_function<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>                 neighbourhood_selection_probability<span class=\"token punctuation\">,</span> max_number_of_replaced_solutions<span class=\"token punctuation\">,</span> neighbor_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>                 weight_files_path<span class=\"token punctuation\">,</span> termination_criterion<span class=\"token operator\">=</span>store<span class=\"token punctuation\">.</span>default_termination_criteria<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>                 population_generator<span class=\"token operator\">=</span>store<span class=\"token punctuation\">.</span>default_generator<span class=\"token punctuation\">,</span> population_evaluator<span class=\"token operator\">=</span>store<span class=\"token punctuation\">.</span>default_evaluator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MOEAD_DRA<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>problem<span class=\"token punctuation\">,</span> population_size<span class=\"token punctuation\">,</span> mutation<span class=\"token punctuation\">,</span> crossover<span class=\"token punctuation\">,</span> aggregative_function<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>                                        neighbourhood_selection_probability<span class=\"token punctuation\">,</span> max_number_of_replaced_solutions<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>                                        neighbor_size<span class=\"token punctuation\">,</span> weight_files_path<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>                                        termination_criterion<span class=\"token operator\">=</span>termination_criterion<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>                                        population_generator<span class=\"token operator\">=</span>population_generator<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>                                        population_evaluator<span class=\"token operator\">=</span>population_evaluator<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        self<span class=\"token punctuation\">.</span>saved_values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        self<span class=\"token punctuation\">.</span>utility <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1.0</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>population_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        self<span class=\"token punctuation\">.</span>frequency <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.0</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>population_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>        self<span class=\"token punctuation\">.</span>generation_counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>        self<span class=\"token punctuation\">.</span>order <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>        self<span class=\"token punctuation\">.</span>current_order_index <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">init_progress</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>init_progress<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre>        self<span class=\"token punctuation\">.</span>saved_values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>copy<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> solution <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre></pre></td></tr><tr><td data-num=\"179\"></td><td><pre>        self<span class=\"token punctuation\">.</span>evaluations <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>population_size</pre></td></tr><tr><td data-num=\"180\"></td><td><pre>        <span class=\"token keyword\">for</span> solution <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>            self<span class=\"token punctuation\">.</span>fitness_function<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>        self<span class=\"token punctuation\">.</span>order <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__tour_selection<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>        self<span class=\"token punctuation\">.</span>current_order_index <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        observable_data <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>get_observable_data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>        self<span class=\"token punctuation\">.</span>observable<span class=\"token punctuation\">.</span>notify_all<span class=\"token punctuation\">(</span><span class=\"token operator\">**</span>observable_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">update_progress</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>update_progress<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>        self<span class=\"token punctuation\">.</span>current_order_index <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>current_order_index <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>            self<span class=\"token punctuation\">.</span>order <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__tour_selection<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>            self<span class=\"token punctuation\">.</span>current_order_index <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>        self<span class=\"token punctuation\">.</span>generation_counter <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>generation_counter <span class=\"token operator\">%</span> <span class=\"token number\">30</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>            self<span class=\"token punctuation\">.</span>__utility_function<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">selection</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>S<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>        self<span class=\"token punctuation\">.</span>current_subproblem <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>current_order_index<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>        self<span class=\"token punctuation\">.</span>current_order_index <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>        self<span class=\"token punctuation\">.</span>frequency<span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>current_subproblem<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>        self<span class=\"token punctuation\">.</span>neighbor_type <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>choose_neighbor_type<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>neighbor_type <span class=\"token operator\">==</span> <span class=\"token string\">'NEIGHBOR'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>            neighbors <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>neighbourhood<span class=\"token punctuation\">.</span>get_neighbors<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_subproblem<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>            mating_population <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>selection_operator<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>neighbors<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>            mating_population <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>selection_operator<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>population<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>        mating_population<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>population<span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>current_subproblem<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>        <span class=\"token keyword\">return</span> mating_population</pre></td></tr><tr><td data-num=\"217\"></td><td><pre></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'MOEAD-DRA'</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__utility_function</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>            f1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fitness_function<span class=\"token punctuation\">.</span>compute<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>neighbourhood<span class=\"token punctuation\">.</span>weight_vectors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>            f2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fitness_function<span class=\"token punctuation\">.</span>compute<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>saved_values<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>neighbourhood<span class=\"token punctuation\">.</span>weight_vectors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>            delta <span class=\"token operator\">=</span> f2 <span class=\"token operator\">-</span> f1</pre></td></tr><tr><td data-num=\"226\"></td><td><pre>            <span class=\"token keyword\">if</span> delta <span class=\"token operator\">></span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>                self<span class=\"token punctuation\">.</span>utility<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"228\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>                utility_value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.95</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.05</span> <span class=\"token operator\">*</span> delta <span class=\"token operator\">/</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>utility<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>                self<span class=\"token punctuation\">.</span>utility<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> utility_value <span class=\"token keyword\">if</span> utility_value <span class=\"token operator\">&lt;</span> <span class=\"token number\">1.0</span> <span class=\"token keyword\">else</span> <span class=\"token number\">1.0</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>            self<span class=\"token punctuation\">.</span>saved_values<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> copy<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"233\"></td><td><pre></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__tour_selection</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>        selected <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>problem<span class=\"token punctuation\">.</span>number_of_objectives<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>        candidate <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>problem<span class=\"token punctuation\">.</span>number_of_objectives<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>population_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>selected<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>population_size <span class=\"token operator\">/</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>            best_idd <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>            best_sub <span class=\"token operator\">=</span> candidate<span class=\"token punctuation\">[</span>best_idd<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>                i2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>candidate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>                s2 <span class=\"token operator\">=</span> candidate<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>utility<span class=\"token punctuation\">[</span>s2<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>utility<span class=\"token punctuation\">[</span>best_sub<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>                    best_idd <span class=\"token operator\">=</span> i2</pre></td></tr><tr><td data-num=\"246\"></td><td><pre>                    best_sub <span class=\"token operator\">=</span> s2</pre></td></tr><tr><td data-num=\"247\"></td><td><pre>            selected<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>best_sub<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>            <span class=\"token keyword\">del</span> candidate<span class=\"token punctuation\">[</span>best_idd<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>        <span class=\"token keyword\">return</span> selected</pre></td></tr><tr><td data-num=\"251\"></td><td><pre></pre></td></tr><tr><td data-num=\"252\"></td><td><pre></pre></td></tr><tr><td data-num=\"253\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MOEADIEpsilon</span><span class=\"token punctuation\">(</span>MOEAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>                 problem<span class=\"token punctuation\">:</span> Problem<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>                 population_size<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>                 mutation<span class=\"token punctuation\">:</span> Mutation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>                 crossover<span class=\"token punctuation\">:</span> DifferentialEvolutionCrossover<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>                 aggregative_function<span class=\"token punctuation\">:</span> AggregativeFunction<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>                 neighbourhood_selection_probability<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>                 max_number_of_replaced_solutions<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>                 neighbor_size<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre>                 weight_files_path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>                 termination_criterion<span class=\"token punctuation\">:</span> TerminationCriterion <span class=\"token operator\">=</span> StoppingByEvaluations<span class=\"token punctuation\">(</span><span class=\"token number\">300000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>                 population_generator<span class=\"token punctuation\">:</span> Generator <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>default_generator<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>                 population_evaluator<span class=\"token punctuation\">:</span> Evaluator <span class=\"token operator\">=</span> store<span class=\"token punctuation\">.</span>default_evaluator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>        <span class=\"token triple-quoted-string string\">\"\"\"</pre></td></tr><tr><td data-num=\"268\"></td><td><pre>        :param max_number_of_replaced_solutions: (eta in Zhang &amp; Li paper).</pre></td></tr><tr><td data-num=\"269\"></td><td><pre>        :param neighbourhood_selection_probability: Probability of mating with a solution in the neighborhood rather</pre></td></tr><tr><td data-num=\"270\"></td><td><pre>               than the entire population (Delta in Zhang &amp; Li paper).</pre></td></tr><tr><td data-num=\"271\"></td><td><pre>        \"\"\"</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>MOEADIEpsilon<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>            problem<span class=\"token operator\">=</span>problem<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>            population_size<span class=\"token operator\">=</span>population_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>            mutation<span class=\"token operator\">=</span>mutation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>            crossover<span class=\"token operator\">=</span>crossover<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>            aggregative_function<span class=\"token operator\">=</span>aggregative_function<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>            neighbourhood_selection_probability<span class=\"token operator\">=</span>neighbourhood_selection_probability<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>            max_number_of_replaced_solutions<span class=\"token operator\">=</span>max_number_of_replaced_solutions<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>            neighbor_size<span class=\"token operator\">=</span>neighbor_size<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>            weight_files_path<span class=\"token operator\">=</span>weight_files_path<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>            population_evaluator<span class=\"token operator\">=</span>population_evaluator<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>            population_generator<span class=\"token operator\">=</span>population_generator<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>            termination_criterion<span class=\"token operator\">=</span>termination_criterion</pre></td></tr><tr><td data-num=\"285\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>        self<span class=\"token punctuation\">.</span>constraints <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>        self<span class=\"token punctuation\">.</span>epsilon_k <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>        self<span class=\"token punctuation\">.</span>phi_max <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1e30</span></pre></td></tr><tr><td data-num=\"289\"></td><td><pre>        self<span class=\"token punctuation\">.</span>epsilon_zero <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>        self<span class=\"token punctuation\">.</span>tc <span class=\"token operator\">=</span> <span class=\"token number\">800</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>        self<span class=\"token punctuation\">.</span>tao <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>        self<span class=\"token punctuation\">.</span>rk <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>        self<span class=\"token punctuation\">.</span>generation_counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>        self<span class=\"token punctuation\">.</span>archive <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">init_progress</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>init_progress<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>        <span class=\"token comment\"># for i in range(self.population_size):</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>        <span class=\"token comment\">#    self.constraints[i] = get_overall_constraint_violation_degree(self.permutation[i])</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>        self<span class=\"token punctuation\">.</span>constraints <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>overall_constraint_violation_degree<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>                            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>population_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>        <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>        self<span class=\"token punctuation\">.</span>epsilon_zero <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>ceil<span class=\"token punctuation\">(</span><span class=\"token number\">0.05</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>population_size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>phi_max <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"308\"></td><td><pre>            self<span class=\"token punctuation\">.</span>phi_max <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>constraints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"309\"></td><td><pre></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>        self<span class=\"token punctuation\">.</span>rk <span class=\"token operator\">=</span> feasibility_ratio<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>        self<span class=\"token punctuation\">.</span>epsilon_k <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>epsilon_zero</pre></td></tr><tr><td data-num=\"312\"></td><td><pre></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">update_progress</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>update_progress<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>evaluations <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>population_size <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>            self<span class=\"token punctuation\">.</span>update_external_archive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>            self<span class=\"token punctuation\">.</span>generation_counter <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>            self<span class=\"token punctuation\">.</span>rk <span class=\"token operator\">=</span> feasibility_ratio<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>generation_counter <span class=\"token operator\">>=</span> self<span class=\"token punctuation\">.</span>tc<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>                self<span class=\"token punctuation\">.</span>epsilon_k <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>rk <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.95</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>epsilon_k <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>tao<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>epsilon_k</pre></td></tr><tr><td data-num=\"325\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>epsilon_k <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>phi_max <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>tao<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">update_current_subproblem_neighborhood</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> new_solution<span class=\"token punctuation\">,</span> population<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>phi_max <span class=\"token operator\">&lt;</span> overall_constraint_violation_degree<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"330\"></td><td><pre>            self<span class=\"token punctuation\">.</span>phi_max <span class=\"token operator\">=</span> overall_constraint_violation_degree<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>        permuted_neighbors_indexes <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>generate_permutation_of_neighbors<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>current_subproblem<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>        replacements <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>permuted_neighbors_indexes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>            k <span class=\"token operator\">=</span> permuted_neighbors_indexes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>            f1 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fitness_function<span class=\"token punctuation\">.</span>compute<span class=\"token punctuation\">(</span>population<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>neighbourhood<span class=\"token punctuation\">.</span>weight_vectors<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre>            f2 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>fitness_function<span class=\"token punctuation\">.</span>compute<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>neighbourhood<span class=\"token punctuation\">.</span>weight_vectors<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>            cons1 <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>overall_constraint_violation_degree<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>            cons2 <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>overall_constraint_violation_degree<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>            <span class=\"token keyword\">if</span> cons1 <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>epsilon_k <span class=\"token keyword\">and</span> cons2 <span class=\"token operator\">&lt;=</span> self<span class=\"token punctuation\">.</span>epsilon_k<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>                <span class=\"token keyword\">if</span> f2 <span class=\"token operator\">&lt;</span> f1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>                    population<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre>                    replacements <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>            <span class=\"token keyword\">elif</span> cons1 <span class=\"token operator\">==</span> cons2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>                <span class=\"token keyword\">if</span> f2 <span class=\"token operator\">&lt;</span> f1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>                    population<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>                    replacements <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>            <span class=\"token keyword\">elif</span> cons2 <span class=\"token operator\">&lt;</span> cons1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>                population<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>new_solution<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>                replacements <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>            <span class=\"token keyword\">if</span> replacements <span class=\"token operator\">>=</span> self<span class=\"token punctuation\">.</span>max_number_of_replaced_solutions<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>        <span class=\"token keyword\">return</span> population</pre></td></tr><tr><td data-num=\"360\"></td><td><pre></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">update_external_archive</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>        feasible_solutions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>        <span class=\"token keyword\">for</span> solution <span class=\"token keyword\">in</span> self<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>            <span class=\"token keyword\">if</span> is_feasible<span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>                feasible_solutions<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>feasible_solutions<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>            feasible_solutions <span class=\"token operator\">=</span> feasible_solutions <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>archive</pre></td></tr><tr><td data-num=\"369\"></td><td><pre>            ranking <span class=\"token operator\">=</span> FastNonDominatedRanking<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>            ranking<span class=\"token punctuation\">.</span>compute_ranking<span class=\"token punctuation\">(</span>feasible_solutions<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>            first_rank_solutions <span class=\"token operator\">=</span> ranking<span class=\"token punctuation\">.</span>get_subfront<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>first_rank_solutions<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> self<span class=\"token punctuation\">.</span>population_size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>                self<span class=\"token punctuation\">.</span>archive <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>                <span class=\"token keyword\">for</span> solution <span class=\"token keyword\">in</span> first_rank_solutions<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>archive<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>                crowding_distance <span class=\"token operator\">=</span> CrowdingDistance<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>                <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>first_rank_solutions<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>population_size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>                    crowding_distance<span class=\"token punctuation\">.</span>compute_density_estimator<span class=\"token punctuation\">(</span>first_rank_solutions<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>                    first_rank_solutions <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>first_rank_solutions<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">[</span><span class=\"token string\">'crowding_distance'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>                                                  reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>                    first_rank_solutions<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>                self<span class=\"token punctuation\">.</span>archive <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre>                <span class=\"token keyword\">for</span> solution <span class=\"token keyword\">in</span> first_rank_solutions<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre>                    self<span class=\"token punctuation\">.</span>archive<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">.</span>deepcopy<span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"388\"></td><td><pre></pre></td></tr><tr><td data-num=\"389\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_result</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>archive</pre></td></tr><tr><td data-num=\"391\"></td><td><pre></pre></td></tr><tr><td data-num=\"392\"></td><td><pre></pre></td></tr><tr><td data-num=\"393\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Permutation</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"394\"></td><td><pre></pre></td></tr><tr><td data-num=\"395\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"396\"></td><td><pre>        self<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"397\"></td><td><pre>        self<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> length</pre></td></tr><tr><td data-num=\"398\"></td><td><pre>        self<span class=\"token punctuation\">.</span>permutation <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>permutation<span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_next_value</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre>        next_value <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>permutation<span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>counter<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>        self<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre>            self<span class=\"token punctuation\">.</span>permutation <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>permutation<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>            self<span class=\"token punctuation\">.</span>counter <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>        <span class=\"token keyword\">return</span> next_value</pre></td></tr><tr><td data-num=\"409\"></td><td><pre></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_permutation</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>permutation<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"三-成功使用案例\"><a class=\"markdownIt-Anchor\" href=\"#三-成功使用案例\">#</a> 三、成功使用案例</h1>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"><span>NSGA-II</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>lab<span class=\"token punctuation\">.</span>visualization <span class=\"token keyword\">import</span> Plot</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>algorithm<span class=\"token punctuation\">.</span>multiobjective<span class=\"token punctuation\">.</span>nsgaii <span class=\"token keyword\">import</span> NSGAII</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>problem <span class=\"token keyword\">import</span> PermutationProblem</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>solution <span class=\"token keyword\">import</span> PermutationSolution</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> parameter <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> functions <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>operator <span class=\"token keyword\">import</span> BinaryTournamentSelection</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>operator<span class=\"token punctuation\">.</span>crossover <span class=\"token keyword\">import</span> PMXCrossover</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>operator<span class=\"token punctuation\">.</span>mutation <span class=\"token keyword\">import</span> PermutationSwapMutation</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>comparator <span class=\"token keyword\">import</span> MultiComparator</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>density_estimator <span class=\"token keyword\">import</span> CrowdingDistance</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>ranking <span class=\"token keyword\">import</span> FastNonDominatedRanking</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>termination_criterion <span class=\"token keyword\">import</span> StoppingByEvaluations</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>solution <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    get_non_dominated_solutions<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    print_function_values_to_file<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    print_variables_to_file<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"  </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>Program to  configure and run the NSGA-II algorithm configured with standard settings.</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">RMFS</span><span class=\"token punctuation\">(</span>PermutationProblem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Class representing TSP Problem.\"\"\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> objectives_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>RMFS<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_objectives <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        self<span class=\"token punctuation\">.</span>objectives_list <span class=\"token operator\">=</span> objectives_list</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        self<span class=\"token punctuation\">.</span>obj_directions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>MINIMIZE <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>number_of_objectives<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_variables <span class=\"token operator\">=</span> n_pod</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_constraints <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> solution<span class=\"token punctuation\">:</span> PermutationSolution<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> PermutationSolution<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_robot<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 是机器人 r 第 k 个转运的任务（0，1 变量）</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        tP <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人拿起的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        tD <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人放下的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        robot_condition <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作状态（即完成当前工作时间）</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        n_robot_work <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作数量</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        selected_pods <span class=\"token operator\">=</span> get_selected_pods<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> solution<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            selected_robot <span class=\"token operator\">=</span> select_robot<span class=\"token punctuation\">(</span>robot_condition<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            tP<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            tD<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tP<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            x<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> selected_robot<span class=\"token punctuation\">,</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        y <span class=\"token operator\">=</span> get_y<span class=\"token punctuation\">(</span>tD<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        z <span class=\"token operator\">=</span> get_z<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        tH <span class=\"token operator\">=</span> get_tH<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">,</span> tD<span class=\"token punctuation\">,</span> Th<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        tO <span class=\"token operator\">=</span> get_tO<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> Th<span class=\"token punctuation\">,</span> tH<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        target <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>tH <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                  <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>tH <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                  <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>g_target4<span class=\"token punctuation\">(</span>Tp<span class=\"token punctuation\">,</span> Td<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>tO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token comment\"># if not judge_constraint (x, y, z, tP, tD, tH, selected_pods):  # 判断是否符合约束条件</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token comment\">#     raise Exception (\"不满足约束条件\")</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> objective <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>objectives_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            solution<span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>objective <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">return</span> solution</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">create_solution</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> PermutationSolution<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        new_solution <span class=\"token operator\">=</span> PermutationSolution<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            number_of_variables<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">,</span> number_of_objectives<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_objectives</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        new_solution<span class=\"token punctuation\">.</span>variables <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">return</span> new_solution</pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@property</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">number_of_cities</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>number_of_variables</pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"RMFS\"</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    objectives_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    problem <span class=\"token operator\">=</span> RMFS<span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 参数为目标值 1-5</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n_pod: \"</span><span class=\"token punctuation\">,</span> problem<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    max_evaluations <span class=\"token operator\">=</span> <span class=\"token number\">10000</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    algorithm <span class=\"token operator\">=</span> NSGAII<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        problem<span class=\"token operator\">=</span>problem<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        population_size<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        offspring_population_size<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        mutation<span class=\"token operator\">=</span>PermutationSwapMutation<span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> problem<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        crossover<span class=\"token operator\">=</span>PMXCrossover<span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        selection<span class=\"token operator\">=</span>BinaryTournamentSelection<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            MultiComparator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>FastNonDominatedRanking<span class=\"token punctuation\">.</span>get_comparator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CrowdingDistance<span class=\"token punctuation\">.</span>get_comparator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        termination_criterion<span class=\"token operator\">=</span>StoppingByEvaluations<span class=\"token punctuation\">(</span>max_evaluations<span class=\"token operator\">=</span>max_evaluations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    algorithm<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    front <span class=\"token operator\">=</span> get_non_dominated_solutions<span class=\"token punctuation\">(</span>algorithm<span class=\"token punctuation\">.</span>get_result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token comment\"># Save results to file</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    print_function_values_to_file<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> <span class=\"token string\">\"FUN.\"</span> <span class=\"token operator\">+</span> algorithm<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    print_variables_to_file<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> <span class=\"token string\">\"VAR.\"</span> <span class=\"token operator\">+</span> algorithm<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        plot_front <span class=\"token operator\">=</span> Plot<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'Pareto front approximation'</span><span class=\"token punctuation\">,</span> axis_labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        plot_front<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'NSGAII-ZDT1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Algorithm: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>algorithm<span class=\"token punctuation\">.</span>get_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Problem: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>problem<span class=\"token punctuation\">.</span>get_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Solution: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fitness: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Computing time: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>algorithm<span class=\"token punctuation\">.</span>total_computing_time<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight py\"><figcaption data-lang=\"Python\"><span>NSGA-III</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>lab<span class=\"token punctuation\">.</span>visualization <span class=\"token keyword\">import</span> Plot</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>problem <span class=\"token keyword\">import</span> PermutationProblem</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>solution <span class=\"token keyword\">import</span> PermutationSolution</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> parameter <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> functions <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>operator<span class=\"token punctuation\">.</span>crossover <span class=\"token keyword\">import</span> PMXCrossover</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>operator<span class=\"token punctuation\">.</span>mutation <span class=\"token keyword\">import</span> PermutationSwapMutation</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>termination_criterion <span class=\"token keyword\">import</span> StoppingByEvaluations</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>solution <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    get_non_dominated_solutions<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    print_function_values_to_file<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    print_variables_to_file<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>algorithm<span class=\"token punctuation\">.</span>multiobjective<span class=\"token punctuation\">.</span>nsgaiii <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    NSGAIII<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    UniformReferenceDirectionFactory<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">RMFS</span><span class=\"token punctuation\">(</span>PermutationProblem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Class representing TSP Problem.\"\"\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> objectives_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>RMFS<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_objectives <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        self<span class=\"token punctuation\">.</span>objectives_list <span class=\"token operator\">=</span> objectives_list</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        self<span class=\"token punctuation\">.</span>obj_directions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>MINIMIZE <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>number_of_objectives<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_variables <span class=\"token operator\">=</span> n_pod</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_constraints <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> solution<span class=\"token punctuation\">:</span> PermutationSolution<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> PermutationSolution<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_robot<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 是机器人 r 第 k 个转运的任务（0，1 变量）</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        tP <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人拿起的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        tD <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人放下的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        robot_condition <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作状态（即完成当前工作时间）</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        n_robot_work <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作数量</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        selected_pods <span class=\"token operator\">=</span> get_selected_pods<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> solution<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            selected_robot <span class=\"token operator\">=</span> select_robot<span class=\"token punctuation\">(</span>robot_condition<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            tP<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            tD<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tP<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            x<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> selected_robot<span class=\"token punctuation\">,</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        y <span class=\"token operator\">=</span> get_y<span class=\"token punctuation\">(</span>tD<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        z <span class=\"token operator\">=</span> get_z<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        tH <span class=\"token operator\">=</span> get_tH<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">,</span> tD<span class=\"token punctuation\">,</span> Th<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        tO <span class=\"token operator\">=</span> get_tO<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> Th<span class=\"token punctuation\">,</span> tH<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        target <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>tH <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                  <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>tH <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                  <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>g_target4<span class=\"token punctuation\">(</span>Tp<span class=\"token punctuation\">,</span> Td<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>tO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token comment\"># if not judge_constraint (x, y, z, tP, tD, tH, selected_pods):  # 判断是否符合约束条件</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token comment\">#     raise Exception (\"不满足约束条件\")</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> objective <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>objectives_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            solution<span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>objective <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">return</span> solution</pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">create_solution</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> PermutationSolution<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        new_solution <span class=\"token operator\">=</span> PermutationSolution<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            number_of_variables<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">,</span> number_of_objectives<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_objectives</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        new_solution<span class=\"token punctuation\">.</span>variables <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">return</span> new_solution</pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@property</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">number_of_cities</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>number_of_variables</pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"RMFS\"</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    objectives_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    problem <span class=\"token operator\">=</span> RMFS<span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 参数为目标值 1-5</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n_pod: \"</span><span class=\"token punctuation\">,</span> problem<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    max_evaluations <span class=\"token operator\">=</span> <span class=\"token number\">20000</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    algorithm <span class=\"token operator\">=</span> NSGAIII<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        problem<span class=\"token operator\">=</span>problem<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        population_size<span class=\"token operator\">=</span><span class=\"token number\">92</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        reference_directions<span class=\"token operator\">=</span>UniformReferenceDirectionFactory<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n_points<span class=\"token operator\">=</span><span class=\"token number\">91</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        mutation<span class=\"token operator\">=</span>PermutationSwapMutation<span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> problem<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        crossover<span class=\"token operator\">=</span>PMXCrossover<span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        termination_criterion<span class=\"token operator\">=</span>StoppingByEvaluations<span class=\"token punctuation\">(</span>max_evaluations<span class=\"token operator\">=</span>max_evaluations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    algorithm<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    front <span class=\"token operator\">=</span> get_non_dominated_solutions<span class=\"token punctuation\">(</span>algorithm<span class=\"token punctuation\">.</span>get_result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token comment\"># Save results to file</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    print_function_values_to_file<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> <span class=\"token string\">\"FUN.\"</span> <span class=\"token operator\">+</span> algorithm<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    print_variables_to_file<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> <span class=\"token string\">\"VAR.\"</span> <span class=\"token operator\">+</span> algorithm<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        plot_front <span class=\"token operator\">=</span> Plot<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'Pareto front approximation'</span><span class=\"token punctuation\">,</span> axis_labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        plot_front<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'NSGAII-ZDT1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Algorithm: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>algorithm<span class=\"token punctuation\">.</span>get_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Problem: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>problem<span class=\"token punctuation\">.</span>get_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Solution: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fitness: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Computing time: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>algorithm<span class=\"token punctuation\">.</span>total_computing_time<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight py\"><figcaption data-lang=\"Python\"><span>MOEA/D</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>lab<span class=\"token punctuation\">.</span>visualization <span class=\"token keyword\">import</span> Plot</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>problem <span class=\"token keyword\">import</span> PermutationProblem</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>solution <span class=\"token keyword\">import</span> PermutationSolution</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> parameter <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> functions <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>operator<span class=\"token punctuation\">.</span>crossover <span class=\"token keyword\">import</span> PMXCrossover</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>operator<span class=\"token punctuation\">.</span>mutation <span class=\"token keyword\">import</span> PermutationSwapMutation</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>termination_criterion <span class=\"token keyword\">import</span> StoppingByEvaluations</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>solution <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    get_non_dominated_solutions<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    print_function_values_to_file<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    print_variables_to_file<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>algorithm<span class=\"token punctuation\">.</span>multiobjective<span class=\"token punctuation\">.</span>moead <span class=\"token keyword\">import</span> MOEAD</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>aggregative_function <span class=\"token keyword\">import</span> Tschebycheff</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">RMFS</span><span class=\"token punctuation\">(</span>PermutationProblem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Class representing TSP Problem.\"\"\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> objectives_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>RMFS<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_objectives <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        self<span class=\"token punctuation\">.</span>objectives_list <span class=\"token operator\">=</span> objectives_list</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        self<span class=\"token punctuation\">.</span>obj_directions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>MINIMIZE <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>number_of_objectives<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_variables <span class=\"token operator\">=</span> n_pod</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_constraints <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> solution<span class=\"token punctuation\">:</span> PermutationSolution<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> PermutationSolution<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_robot<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 是机器人 r 第 k 个转运的任务（0，1 变量）</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        tP <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人拿起的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        tD <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人放下的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        robot_condition <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作状态（即完成当前工作时间）</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        n_robot_work <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作数量</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        selected_pods <span class=\"token operator\">=</span> get_selected_pods<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> solution<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            selected_robot <span class=\"token operator\">=</span> select_robot<span class=\"token punctuation\">(</span>robot_condition<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            tP<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            tD<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tP<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            x<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> selected_robot<span class=\"token punctuation\">,</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        y <span class=\"token operator\">=</span> get_y<span class=\"token punctuation\">(</span>tD<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        z <span class=\"token operator\">=</span> get_z<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        tH <span class=\"token operator\">=</span> get_tH<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">,</span> tD<span class=\"token punctuation\">,</span> Th<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        tO <span class=\"token operator\">=</span> get_tO<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> Th<span class=\"token punctuation\">,</span> tH<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        target <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>tH <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                  <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>tH <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                  <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>g_target4<span class=\"token punctuation\">(</span>Tp<span class=\"token punctuation\">,</span> Td<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>tO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\"># if not judge_constraint (x, y, z, tP, tD, tH, selected_pods):  # 判断是否符合约束条件</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\">#     raise Exception (\"不满足约束条件\")</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> objective <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>objectives_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            solution<span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>objective <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">return</span> solution</pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">create_solution</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> PermutationSolution<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        new_solution <span class=\"token operator\">=</span> PermutationSolution<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            number_of_variables<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">,</span> number_of_objectives<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_objectives</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        new_solution<span class=\"token punctuation\">.</span>variables <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">return</span> new_solution</pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@property</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">number_of_cities</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>number_of_variables</pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"RMFS\"</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    objectives_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token comment\"># objectives_list = [1, 2, 3, 5]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    problem <span class=\"token operator\">=</span> RMFS<span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 参数为目标值 1-5</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n_pod: \"</span><span class=\"token punctuation\">,</span> problem<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    max_evaluations <span class=\"token operator\">=</span> <span class=\"token number\">10000</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    algorithm <span class=\"token operator\">=</span> MOEAD<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        problem<span class=\"token operator\">=</span>problem<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        population_size<span class=\"token operator\">=</span><span class=\"token number\">2500</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        crossover<span class=\"token operator\">=</span>PMXCrossover<span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># noqa</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token comment\"># crossover=DifferentialEvolutionCrossover(CR=1.0, F=0.5),</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token comment\"># mutation=PolynomialMutation(probability=1.0 / problem.number_of_variables, distribution_index=20),</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        mutation<span class=\"token operator\">=</span>PermutationSwapMutation<span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> problem<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        aggregative_function<span class=\"token operator\">=</span>Tschebycheff<span class=\"token punctuation\">(</span>dimension<span class=\"token operator\">=</span>problem<span class=\"token punctuation\">.</span>number_of_objectives<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        neighbor_size<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        neighbourhood_selection_probability<span class=\"token operator\">=</span><span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        max_number_of_replaced_solutions<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        weight_files_path<span class=\"token operator\">=</span><span class=\"token string\">\"E:/python/RMFS/jMetalPy-main/resources/MOEAD_weights\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        termination_criterion<span class=\"token operator\">=</span>StoppingByEvaluations<span class=\"token punctuation\">(</span>max_evaluations<span class=\"token operator\">=</span>max_evaluations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    algorithm<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    front <span class=\"token operator\">=</span> get_non_dominated_solutions<span class=\"token punctuation\">(</span>algorithm<span class=\"token punctuation\">.</span>get_result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token comment\"># Save results to file</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    print_function_values_to_file<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> <span class=\"token string\">\"FUN.\"</span> <span class=\"token operator\">+</span> algorithm<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    print_variables_to_file<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> <span class=\"token string\">\"VAR.\"</span> <span class=\"token operator\">+</span> algorithm<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        plot_front <span class=\"token operator\">=</span> Plot<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'Pareto front approximation'</span><span class=\"token punctuation\">,</span> axis_labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        plot_front<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'NSGAII-ZDT1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Algorithm: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>algorithm<span class=\"token punctuation\">.</span>get_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Problem: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>problem<span class=\"token punctuation\">.</span>get_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Solution: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fitness: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Computing time: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>algorithm<span class=\"token punctuation\">.</span>total_computing_time<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight py\"><figcaption data-lang=\"Python\"><span>SPEA-II</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>lab<span class=\"token punctuation\">.</span>visualization <span class=\"token keyword\">import</span> Plot</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>problem <span class=\"token keyword\">import</span> PermutationProblem</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>solution <span class=\"token keyword\">import</span> PermutationSolution</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> parameter <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> functions <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>operator<span class=\"token punctuation\">.</span>crossover <span class=\"token keyword\">import</span> PMXCrossover</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>operator<span class=\"token punctuation\">.</span>mutation <span class=\"token keyword\">import</span> PermutationSwapMutation</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>termination_criterion <span class=\"token keyword\">import</span> StoppingByEvaluations</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>solution <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    get_non_dominated_solutions<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    print_function_values_to_file<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    print_variables_to_file<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">from</span> jmetal<span class=\"token punctuation\">.</span>algorithm<span class=\"token punctuation\">.</span>multiobjective<span class=\"token punctuation\">.</span>spea2 <span class=\"token keyword\">import</span> SPEA2</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\"  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Program to  configure and run the NSGA-II algorithm configured with standard settings.</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\"\"\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">RMFS</span><span class=\"token punctuation\">(</span>PermutationProblem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Class representing TSP Problem.\"\"\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> objectives_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>RMFS<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_objectives <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        self<span class=\"token punctuation\">.</span>objectives_list <span class=\"token operator\">=</span> objectives_list</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        self<span class=\"token punctuation\">.</span>obj_directions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>MINIMIZE <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>number_of_objectives<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_variables <span class=\"token operator\">=</span> n_pod</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        self<span class=\"token punctuation\">.</span>number_of_constraints <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">evaluate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> solution<span class=\"token punctuation\">:</span> PermutationSolution<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> PermutationSolution<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_robot<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 是机器人 r 第 k 个转运的任务（0，1 变量）</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        tP <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人拿起的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        tD <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人放下的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        robot_condition <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作状态（即完成当前工作时间）</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        n_robot_work <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 每个机器人的工作数量</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        selected_pods <span class=\"token operator\">=</span> get_selected_pods<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> solution<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            selected_robot <span class=\"token operator\">=</span> select_robot<span class=\"token punctuation\">(</span>robot_condition<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            tP<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            tD<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tP<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> robot_condition<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Td<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            x<span class=\"token punctuation\">[</span>selected_pods<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> selected_robot<span class=\"token punctuation\">,</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> n_robot_work<span class=\"token punctuation\">[</span>selected_robot<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        y <span class=\"token operator\">=</span> get_y<span class=\"token punctuation\">(</span>tD<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        z <span class=\"token operator\">=</span> get_z<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        tH <span class=\"token operator\">=</span> get_tH<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">,</span> tD<span class=\"token punctuation\">,</span> Th<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        tO <span class=\"token operator\">=</span> get_tO<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">,</span> Th<span class=\"token punctuation\">,</span> tH<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        target <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>tH <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                  <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>tH <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                  <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>g_target4<span class=\"token punctuation\">(</span>Tp<span class=\"token punctuation\">,</span> Td<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>tO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> decimal_Th<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token comment\"># if not judge_constraint (x, y, z, tP, tD, tH, selected_pods):  # 判断是否符合约束条件</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token comment\">#     raise Exception (\"不满足约束条件\")</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> objective <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>objectives_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            solution<span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>objective <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">return</span> solution</pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">create_solution</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> PermutationSolution<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        new_solution <span class=\"token operator\">=</span> PermutationSolution<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            number_of_variables<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">,</span> number_of_objectives<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_objectives</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        new_solution<span class=\"token punctuation\">.</span>variables <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k<span class=\"token operator\">=</span>self<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">return</span> new_solution</pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token decorator annotation punctuation\">@property</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">number_of_cities</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>number_of_variables</pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">get_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"RMFS\"</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    objectives_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    problem <span class=\"token operator\">=</span> RMFS<span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 参数为目标值 1-5</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n_pod: \"</span><span class=\"token punctuation\">,</span> problem<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    max_evaluations <span class=\"token operator\">=</span> <span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    algorithm <span class=\"token operator\">=</span> SPEA2<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        problem<span class=\"token operator\">=</span>problem<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        population_size<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        offspring_population_size<span class=\"token operator\">=</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        mutation<span class=\"token operator\">=</span>PermutationSwapMutation<span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> problem<span class=\"token punctuation\">.</span>number_of_variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        crossover<span class=\"token operator\">=</span>PMXCrossover<span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        termination_criterion<span class=\"token operator\">=</span>StoppingByEvaluations<span class=\"token punctuation\">(</span>max_evaluations<span class=\"token operator\">=</span>max_evaluations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    algorithm<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    front <span class=\"token operator\">=</span> get_non_dominated_solutions<span class=\"token punctuation\">(</span>algorithm<span class=\"token punctuation\">.</span>get_result<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token comment\"># Save results to file</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    print_function_values_to_file<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> <span class=\"token string\">\"FUN.\"</span> <span class=\"token operator\">+</span> algorithm<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    print_variables_to_file<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> <span class=\"token string\">\"VAR.\"</span> <span class=\"token operator\">+</span> algorithm<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        plot_front <span class=\"token operator\">=</span> Plot<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span><span class=\"token string\">'Pareto front approximation'</span><span class=\"token punctuation\">,</span> axis_labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        plot_front<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'NSGAII-ZDT1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Algorithm: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>algorithm<span class=\"token punctuation\">.</span>get_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Problem: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>problem<span class=\"token punctuation\">.</span>get_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>objectives_list<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Solution: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Fitness: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>front<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>objectives<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Computing time: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>algorithm<span class=\"token punctuation\">.</span>total_computing_time<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "最优化",
                "多目标最优化",
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/23/code/python/python_problem/",
            "url": "http://qianqiu-cell.github.io/2023/03/23/code/python/python_problem/",
            "title": "python一些报错的处理",
            "date_published": "2023-03-22T16:00:00.000Z",
            "content_html": "<details class=\"success\"><summary>AttributeError: 'FigureCanvasTkAgg' object has no attribute 'set_window_title'</summary><div>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fig<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>set_window_title<span class=\"token punctuation\">(</span>window_title<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>上述代码运行报错，原因是 <code>matplotlib</code>  版本变动，主要是在前面加一个 <code>manager</code>  就可以了</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fig<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>manager<span class=\"token punctuation\">.</span>set_window_title<span class=\"token punctuation\">(</span>window_title<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></div></details>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/23/code/python/python_type_hints/",
            "url": "http://qianqiu-cell.github.io/2023/03/23/code/python/python_type_hints/",
            "title": "python类型提示",
            "date_published": "2023-03-22T16:00:00.000Z",
            "content_html": "<p>参考链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMzODAxNjQxL2FydGljbGUvZGV0YWlscy8xMTk3OTMxMDQ=\">https://blog.csdn.net/qq_33801641/article/details/119793104</span></p>\n<h1 id=\"一-python类型提示概述\"><a class=\"markdownIt-Anchor\" href=\"#一-python类型提示概述\">#</a> 一、python 类型提示概述</h1>\n<p>   <code>python</code>  是一种<mark>动态类型语言</mark>，这意味着我们在编写代码的时候更为自由，运行时不需要指定变量类型。但是与此同时 <code>IDE</code>  无法像<mark>静态类型语言</mark>那样分析代码，进而反馈响应的提示。如在下面的代码中</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">split_str</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    strs <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> strs</pre></td></tr></table></figure><p>  由于不知道参数 <code>s</code>  是什么类型，所以当在 <code>pycharm</code>  中输入<span class=\"kbd red\"> s.</span> 的时候不会出现 <code>split</code>  的语法提示。可以使用如下的程序进行类型提示，从而在程序编写时可 <code>IDE</code>  可以预设输入参数和输出参数类型</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">split_str2</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    strs <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> strs</pre></td></tr></table></figure><p>  如果传入的参数类型错误，并不影响程序的运行，但是 <code>IDE</code>  会有 <code>warning</code> ，如下图所示，故类型提示更像是一个规范约束，并不是一个语法限制<br>\n<img data-src=\"/images/code/python/python_type_hints/1.1.png\" alt=\"\"></p>\n<h1 id=\"二-常用类型提示\"><a class=\"markdownIt-Anchor\" href=\"#二-常用类型提示\">#</a> 二、常用类型提示</h1>\n<ul>\n<li>int, long, float: 整形，长整型，浮点型；</li>\n<li>bool, str: 布尔型，字符串类型；</li>\n<li>List, Tuple, Dict, Set: 列表，元组，字典，集合；</li>\n<li>Iterable, Iterator: 可迭代类型，迭代器类型；</li>\n<li>Generator: 生成器类型；<br>\n  前两行小写的不需要调用库即可使用，后三行都需要通过如 <code>from typing import List</code>  格式进行模块的导入。<br>\n  如下程序是较为复杂的类型提示方式</li>\n</ul>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Tuple<span class=\"token punctuation\">,</span> List<span class=\"token punctuation\">,</span> Dict</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 输入第一个参数是 int 类型的数据，第二个参数是 string，第三个是 float，第四个是 bool 或 str；返回一个 Tuple 类型的数据，第一个元素是 List，第二个元素是 Tuple，第三个元素是 Dict，第四个元素可以是字符串或布尔</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span> <span class=\"token keyword\">or</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Tuple<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">,</span> Tuple<span class=\"token punctuation\">,</span> Dict<span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span> <span class=\"token keyword\">or</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    list1 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    tup <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">,</span> string<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    d <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">:</span> f<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    bl <span class=\"token operator\">=</span> b</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> list1<span class=\"token punctuation\">,</span> tup<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> bl</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>add<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># ([0], ('2', '2', '2'), &#123;'a': 123&#125;, True)</span></pre></td></tr></table></figure><p>⚠️⚠️⚠️在使用类型提示时一些需要注意的地方：<br>\n（1）指定类型时可以使用 <code>list</code> 、 <code>set</code> 、 <code>dict</code> 、 <code>tuple</code> ，但是不能像上述例子中一样指定里面元素的数据类型；<br>\n（2） <code>List[T]</code>  和 <code>Set[T]</code>  只能传入一个参数类型，传入多个会报错，但是 <code>Tuple</code>  可以传入多个类型；<br>\n（3）在使用 <code>Tuple[T]</code>  的时候，元素的数量必须和类型提示的元素数量一致，如果想要像 <code>List[T]</code>  一样指定一个类型，可以对所有元素生效，则需要在类型后添加 <code>...</code>  即可，如 <code>Tuple[int, ...]</code> 。</p>\n<h1 id=\"三-类型别名\"><a class=\"markdownIt-Anchor\" href=\"#三-类型别名\">#</a> 三、类型别名</h1>\n<p>  可以将复杂的类型赋予一个简单的别名，如下所示</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 别名</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>vector <span class=\"token operator\">=</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>var<span class=\"token punctuation\">:</span> vector <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 等价写法</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>var<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">float</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><h1 id=\"四-自定义新类型\"><a class=\"markdownIt-Anchor\" href=\"#四-自定义新类型\">#</a> 四、自定义新类型</h1>\n<p>  可以使用 <code>NewType(name, tp)</code>  创建一个新类型，这个函数返回其原本的值，静态类型检查器会将新类型看作是原始类型的一个子类， <code>tp</code>  就是原始类型，如下程序所示</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> NewType</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>UserId <span class=\"token operator\">=</span> NewType<span class=\"token punctuation\">(</span><span class=\"token string\">'UserId'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">name_by_id</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">:</span> UserId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>name_by_id<span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Fails type check</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>name_by_id<span class=\"token punctuation\">(</span>UserId<span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># OK</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>UserId<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 42</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 42</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># &lt;class 'int'></span></pre></td></tr></table></figure><h1 id=\"六-typevar类型\"><a class=\"markdownIt-Anchor\" href=\"#六-typevar类型\">#</a> 六、TypeVar 类型</h1>\n<p>   <code>TypeVar</code>  类型的源码解释（部分）如下所示</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">TypeVar</span><span class=\"token punctuation\">(</span>_Final<span class=\"token punctuation\">,</span> _Immutable<span class=\"token punctuation\">,</span> _root<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"\"</span>\"Type variable<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Usage<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      T <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">'T'</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Can be anything</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      A <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Must be str or bytes</span></pre></td></tr></table></figure><p>  使用方法如下所示</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 可以是任意类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>T <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">'T'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> T<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> T<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> name</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>test<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>test<span class=\"token punctuation\">(</span><span class=\"token string\">\"aa\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 11</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># aa</span></pre></td></tr></table></figure><figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 可以是 int，也可以是 str 类型</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>AA <span class=\"token operator\">=</span> TypeVar<span class=\"token punctuation\">(</span><span class=\"token string\">'AA'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>num1<span class=\"token punctuation\">:</span> AA <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>num2<span class=\"token punctuation\">:</span> AA <span class=\"token operator\">=</span> <span class=\"token string\">\"123\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 1 123</span></pre></td></tr></table></figure><h1 id=\"七-任意类型any-type\"><a class=\"markdownIt-Anchor\" href=\"#七-任意类型any-type\">#</a> 七、任意类型（Any Type）</h1>\n<p>  一种特殊的写法是 <code>Any</code> ，静态类型检查器会将每种类型都是为与 Any 兼容，将 Any 是为与每种类型兼容，使用方法如下</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Any</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># Typechecks; 'item' 可以是任意类型</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">legacy_parser</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 上述写法等价于下述写法</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 所有没有返回类型或参数类型的函数将隐式默认使用 Any</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">legacy_parser</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">:</span> Any<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Any<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> data</pre></td></tr></table></figure><h1 id=\"八-联合类型union\"><a class=\"markdownIt-Anchor\" href=\"#八-联合类型union\">#</a> 八、联合类型（Union）</h1>\n<p>  联合类型， <code>Union[int, str]</code>  表示既可以是 <code>int</code> ，也可以是 <code>str</code> ，程序解释如下</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">vars</span><span class=\"token punctuation\">:</span> Union<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 等价于</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin\">vars</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span> <span class=\"token keyword\">or</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin\">vars</span><span class=\"token punctuation\">:</span> Union<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 等价于</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin\">vars</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span></pre></td></tr></table></figure><h1 id=\"九-参数可none类型optional\"><a class=\"markdownIt-Anchor\" href=\"#九-参数可none类型optional\">#</a> 九、参数可 None 类型（Optional）</h1>\n<p>  使用 <code>Optional</code>  是为了让 <code>IDE</code>  识别到该参数有一个类型提示，可以传指定的类型和 None，即参数是可选单非必要的， <code>Optional[int]</code>  等价于 <code>Union[int, None]</code> ，使用案例如下</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">foo_func</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">:</span> Optional<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>foo_func<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>foo_func<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 输出结果</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># None</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 1</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/12/code/python/python_class_inherit/",
            "url": "http://qianqiu-cell.github.io/2023/03/12/code/python/python_class_inherit/",
            "title": "python类的继承",
            "date_published": "2023-03-11T16:00:00.000Z",
            "content_html": "<h1 id=\"情况1子类需要自动调用父类的方法\"><a class=\"markdownIt-Anchor\" href=\"#情况1子类需要自动调用父类的方法\">#</a> 情况 1：子类需要自动调用父类的方法</h1>\n<p>  如果在子类中需要父类的构造方法就需要显式地调用父类的构造方法，或者不重写父类的构造方法。子类不重写 <code>__init__</code> ，实例化子类时，会自动调用父类定义的 <code>__init__</code> ，实例如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"name: %s\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Father '</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">(</span>Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Son '</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    son<span class=\"token operator\">=</span>Son<span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> son<span class=\"token punctuation\">.</span>getName<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>输出结果为：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>name<span class=\"token punctuation\">:</span> runoob</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Son runoob</pre></td></tr></table></figure><h1 id=\"情况2子类不需要自动调用父类的方法\"><a class=\"markdownIt-Anchor\" href=\"#情况2子类不需要自动调用父类的方法\">#</a> 情况 2：子类不需要自动调用父类的方法</h1>\n<p>  如果重写了 <code>__init__</code> 时，实例化子类，就不会调用父类已经定义的 <code>__init__</code> ，语法格式如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"name: %s\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Father '</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">(</span>Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"hi\"</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span>  name</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Son '</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    son<span class=\"token operator\">=</span>Son<span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> son<span class=\"token punctuation\">.</span>getName<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>输出结果为：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hi</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Son runoob</pre></td></tr></table></figure><h1 id=\"情况3子类需要重写init方法又需要调用父类的方法\"><a class=\"markdownIt-Anchor\" href=\"#情况3子类需要重写init方法又需要调用父类的方法\">#</a> 情况 3：子类需要重写 ——<strong>init</strong> () 方法，又需要调用父类的方法</h1>\n<p>  如果重写了 <code>__init__</code> 时，要继承父类的构造方法，可以使用 <code>super</code>  关键字：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>子类，self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>参数<span class=\"token number\">1</span>，参数<span class=\"token number\">2</span>，<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>  还有一种经典写法：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>父类名称<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>参数<span class=\"token number\">1</span>，参数<span class=\"token number\">2</span>，<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>实例如下：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Father</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"name: %s\"</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">(</span> self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Father '</span> <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Son</span><span class=\"token punctuation\">(</span>Father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span>Son<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span>  name</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">'Son '</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>name</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    son<span class=\"token operator\">=</span>Son<span class=\"token punctuation\">(</span><span class=\"token string\">'runoob'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> son<span class=\"token punctuation\">.</span>getName<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>输出结果为：</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>name<span class=\"token punctuation\">:</span> runoob</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hi</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Son runoob</pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/12/code/python/python_enumerate/",
            "url": "http://qianqiu-cell.github.io/2023/03/12/code/python/python_enumerate/",
            "title": "python使用enumerate()给列表添加序号",
            "date_published": "2023-03-11T16:00:00.000Z",
            "content_html": "<p>   <code>enumerate(iteration, start)</code>  函数默认包含两个参数，其中 <code>iteration</code>  参数为需要遍历的参数，比如<mark>字典、列表、元组</mark>等， <code>start</code>  参数为开始的参数，默认为 <code>0</code> 。 <code>enumerate</code>  函数有两个返回值，第一个返回值为从 <code>start</code>  参数开始的数，第二个参数为 <code>iteration</code>  参数中的值。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Carl\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span>value <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>index<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> index<span class=\"token punctuation\">,</span>value <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>names<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>index<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运行结果如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0</span><span class=\"token punctuation\">:</span> Alice</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Bob</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Carl</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> Alice</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">2</span><span class=\"token punctuation\">:</span> Bob</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">:</span> Carl</pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/03/code/python/python_json/",
            "url": "http://qianqiu-cell.github.io/2023/03/03/code/python/python_json/",
            "title": "python读取及保存json文件",
            "date_published": "2023-03-02T16:00:00.000Z",
            "content_html": "<h1 id=\"一-读取json文件\"><a class=\"markdownIt-Anchor\" href=\"#一-读取json文件\">#</a> 一、读取 json 文件</h1>\n<h2 id=\"loads传入一个json格式的字符串解码为python对象\"><a class=\"markdownIt-Anchor\" href=\"#loads传入一个json格式的字符串解码为python对象\">#</a>  <code>loads</code>  传入一个 <code>JSON</code>  格式的字符串，解码为 <code>python</code>  对象</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># loads 传入一个 JSON 格式的字符串，解码成 python 对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token string\">'[&#123;\"姓名\":\"张三\",\"年龄\":\"18\"&#125;,&#123;\"姓名\":\"李四\",\"年龄\":\"20\"&#125;]'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#返回 & lt;class'str'></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>new_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>new_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>new_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"load把json格式文件转换成python类型的数据\"><a class=\"markdownIt-Anchor\" href=\"#load把json格式文件转换成python类型的数据\">#</a>  <code>load</code>  把 <code>JSON</code>  格式文件，转换成 <code>python</code>  类型的数据</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'demo.json'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">#加载文件的对象</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    py_list <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>py_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>py_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"二-存储json文件\"><a class=\"markdownIt-Anchor\" href=\"#二-存储json文件\">#</a> 二、存储 json 文件</h1>\n<h2 id=\"dumps把python类型数据转换成json字符串\"><a class=\"markdownIt-Anchor\" href=\"#dumps把python类型数据转换成json字符串\">#</a>  <code>dumps</code>  把 <code>python</code>  类型数据转换成 <code>JSON</code>  字符串</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token string\">'[&#123;\"姓名\":\"张三\",\"年龄\":\"18\"&#125;,&#123;\"姓名\":\"李四\",\"年龄\":\"20\"&#125;]'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>new_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title.json'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># ensure_ascii=False 才能输入中文，否则是 Unicode 字符</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># indent=2 JSON 数据的缩进，美观</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>new_data<span class=\"token punctuation\">,</span>f2<span class=\"token punctuation\">,</span>ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>indent<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"dump把python类型的数据以json格式存储到文件中\"><a class=\"markdownIt-Anchor\" href=\"#dump把python类型的数据以json格式存储到文件中\">#</a>  <code>dump</code>  把 <code>python</code>  类型的数据以 <code>JSON</code>  格式存储到文件中</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token string\">'[&#123;\"姓名\":\"张三\",\"年龄\":\"18\"&#125;,&#123;\"姓名\":\"李四\",\"年龄\":\"20\"&#125;]'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>new_data <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title.json'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># ensure_ascii=False 才能输入中文，否则是 Unicode 字符</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\"># indent=2 JSON 数据的缩进，美观</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>new_data<span class=\"token punctuation\">,</span>f2<span class=\"token punctuation\">,</span>ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>indent<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"三-成功使用案例\"><a class=\"markdownIt-Anchor\" href=\"#三-成功使用案例\">#</a> 三、成功使用案例</h1>\n<h2 id=\"读取json文件\"><a class=\"markdownIt-Anchor\" href=\"#读取json文件\">#</a> 读取 json 文件</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 需要保存的数据有：</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 仓库系列 (2)：仓库长度 (length)、仓库宽度 (weight)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 货架系列 (2)：货架数量 (n_pod)、货架容量限制 (pod_limitation)、货架位置 (loc_pod)、拣货口位置（loc_station）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 机器人系列 (4)：机器人数量 (n_robot)、机器人空载与负载速度比 (ratio_T)、机器人到达货架时间 (Tp、Td)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 商品系列 (3)：商品类型数量 (n_commodity_type)、每种商品总数量 (commodity_limitation)、货架 i 上包含商品 c 的数量 (A)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 订单系列 (3)：商品总需求量 (total_order)、订单数量 (n_order)、订单 i 中包含商品 c 的数量 (B)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 拣货系列 (1)：拣取一个商品所需时间 (Th)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token triple-quoted-string string\">'''读取json文件'''</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'datas/6p_2r.json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\"># ensure_ascii=False 才能输入中文，否则是 Unicode 字符</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># indent=2 JSON 数据的缩进，美观</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    json_datas <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>fp<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>json_datas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    length<span class=\"token punctuation\">,</span> weight <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'weight'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    n_pod<span class=\"token punctuation\">,</span> pod_limitation<span class=\"token punctuation\">,</span> loc_pod<span class=\"token punctuation\">,</span> loc_station <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_pod'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'pod_limitation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'loc_pod'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \\</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'loc_station'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    n_robot<span class=\"token punctuation\">,</span> ratio_T<span class=\"token punctuation\">,</span> Tp<span class=\"token punctuation\">,</span> Td <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_robot'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'ratio_T'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Tp'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Td'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    n_commodity_type<span class=\"token punctuation\">,</span> commodity_limitation<span class=\"token punctuation\">,</span> A <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_commodity_type'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'commodity_limitation'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    total_order<span class=\"token punctuation\">,</span> n_order<span class=\"token punctuation\">,</span> B <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'total_order'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'n_order'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    Th <span class=\"token operator\">=</span> json_datas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Th'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'th element of json file is successfully read'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"存储json文件\"><a class=\"markdownIt-Anchor\" href=\"#存储json文件\">#</a> 存储 json 文件</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> parameter <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 功能：以轮盘赌的方式选取选中的商品</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 输入参数：剩余商品数组，随机数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 输出参数：选中的商品类型</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_selected_commodity</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    array_sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    selected_index <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> array_sum <span class=\"token operator\">&lt;</span> number <span class=\"token operator\">&lt;=</span> array_sum <span class=\"token operator\">+</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            selected_index <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            array_sum <span class=\"token operator\">+=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> selected_index</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 功能：随机选取货架来放置商品</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 输入参数：货架状态数组</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 输出参数：选中的货架</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_selected_pod</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    random_index <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">if</span> array<span class=\"token punctuation\">[</span>random_index<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            random_index <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">return</span> random_index</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 函数功能：根据输入参数设计仓库布局（货架位置）</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 输出参数：机器人行走到每个货架所需时间（空载与负载）</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">g_pod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">if</span> length <span class=\"token operator\">*</span> weight <span class=\"token operator\">&lt;</span> n_pod<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\"># 仓库布局违法</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"仓库布局违法\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        Tp<span class=\"token punctuation\">,</span> Td <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        loc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 记录每个货架的位置</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        mark_numbers <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>length <span class=\"token operator\">*</span> weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 记录每个位置的编号</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        random<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>mark_numbers<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 随机打乱所有编号后取前 n 个作为货架位置</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            Tp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>c_tp<span class=\"token punctuation\">(</span>mark_numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            Td<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ratio_T <span class=\"token operator\">*</span> c_tp<span class=\"token punctuation\">(</span>mark_numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            loc<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>g_loc<span class=\"token punctuation\">(</span>mark_numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\"># print (\"每个货架的位置为：\", loc)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\"># print (\"拣货站台的位置为：\", [(weight - 1) / 2, length])</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">return</span> Tp<span class=\"token punctuation\">,</span> Td<span class=\"token punctuation\">,</span> loc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>weight <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># 函数功能：计算 Tp</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># 输入参数：仓库长度，仓库宽度，货架位置记号</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># 输出参数：机器人空载到达货架位置所需时间 Tp</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">c_tp</span><span class=\"token punctuation\">(</span>mark_number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    terminus <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>weight <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> g_loc<span class=\"token punctuation\">(</span>mark_number<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> terminus<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> terminus<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\"># 函数功能：根据标记获取货架位置</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\"># 输入参数：仓库长度，货架位置记号</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\"># 输出参数：货架位置（x, y）</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">g_loc</span><span class=\"token punctuation\">(</span>mark_number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    x <span class=\"token operator\">=</span> mark_number <span class=\"token operator\">//</span> length</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    y <span class=\"token operator\">=</span> mark_number <span class=\"token operator\">%</span> length</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">,</span> y</pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''检测布局是否合法'''</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">if</span> n_pod <span class=\"token operator\">></span> length <span class=\"token operator\">*</span> weight<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"****货架数量与仓库布局不匹配****\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token punctuation\">(</span>pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>commodity_limitation<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> n_pod <span class=\"token operator\">&lt;</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"总商品存货数量与货架数量不匹配\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">if</span> total_order <span class=\"token operator\">&lt;</span> n_order <span class=\"token keyword\">or</span> total_order <span class=\"token operator\">></span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>commodity_limitation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"订单数量与订单总需求商品不匹配\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    json_datas <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># json 字符串格式变量，用来保存生成数据</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">for</span> n_data <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_datas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''生成货架分布'''</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        Tp<span class=\"token punctuation\">,</span> Td<span class=\"token punctuation\">,</span> loc_pod<span class=\"token punctuation\">,</span> loc_station <span class=\"token operator\">=</span> g_pod<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 生成仓库布局</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token comment\"># Tp, Td = np.array(Tp), np.array(Td)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token comment\"># print(Tp.tolist(), sep=',')</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token comment\"># print(Td.tolist(), sep=',')</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''生成商品分布'''</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        commodities_distribution <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 存储货架上商品数量</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        remain_commodity <span class=\"token operator\">=</span> commodity_limitation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 剩余商品</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># noqa, 剩余商品汇总</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        pod_commodity_sum <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n_pod</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        pod_state <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n_pod  <span class=\"token comment\"># 货架存货状态，0 表示还未到达最小容量，1 表示达到最小容量，2 表示在最小容量及最大容量之间，3 表示已经达到最大容量</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token comment\"># 首先保证每个货架都满足最低限制</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            selected_pod <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                random_number <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> remain_commodity_sum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                selected_commodity <span class=\"token operator\">=</span> get_selected_commodity<span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">,</span> random_number<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                commodities_distribution<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">,</span> selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                remain_commodity<span class=\"token punctuation\">[</span>selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                pod_state<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                    <span class=\"token number\">1</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                        <span class=\"token number\">2</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token keyword\">while</span> remain_commodity_sum <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            selected_pod <span class=\"token operator\">=</span> get_selected_pod<span class=\"token punctuation\">(</span>pod_state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            random_number <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> remain_commodity_sum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            selected_commodity <span class=\"token operator\">=</span> get_selected_commodity<span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">,</span> random_number<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            commodities_distribution<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">,</span> selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>            remain_commodity<span class=\"token punctuation\">[</span>selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            pod_state<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>                <span class=\"token number\">1</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>                    <span class=\"token number\">2</span> <span class=\"token keyword\">if</span> pod_commodity_sum<span class=\"token punctuation\">[</span>selected_pod<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> pod_limitation<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token comment\"># print(commodities_distribution.tolist(), sep=',')</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''生成订单分布'''</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        orders <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_order<span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 订单 o 中商品 c 的数量</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        remain_commodity <span class=\"token operator\">=</span> commodity_limitation<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 剩余商品</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 剩余商品汇总</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        remain_order <span class=\"token operator\">=</span> total_order  <span class=\"token comment\"># 剩余订单需求商品数量</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_order<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>            selected_order <span class=\"token operator\">=</span> i</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>            random_number <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> remain_commodity_sum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            selected_commodity <span class=\"token operator\">=</span> get_selected_commodity<span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">,</span> random_number<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            orders<span class=\"token punctuation\">[</span>selected_order<span class=\"token punctuation\">,</span> selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            remain_commodity<span class=\"token punctuation\">[</span>selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            remain_order <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        <span class=\"token keyword\">while</span> remain_order <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>            selected_order <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n_order <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>            random_number <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> remain_commodity_sum<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            selected_commodity <span class=\"token operator\">=</span> get_selected_commodity<span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">,</span> random_number<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            orders<span class=\"token punctuation\">[</span>selected_order<span class=\"token punctuation\">,</span> selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            remain_commodity<span class=\"token punctuation\">[</span>selected_commodity<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>            remain_commodity_sum <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>remain_commodity<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            remain_order <span class=\"token operator\">-=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        <span class=\"token comment\"># print (\"随机生成订单矩阵为：\")</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        <span class=\"token comment\"># print(orders.tolist(), sep=',')</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>        <span class=\"token triple-quoted-string string\">'''生成json格式数据'''</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>        <span class=\"token comment\"># 需要保存的数据有：</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>        <span class=\"token comment\"># 仓库系列 (2)：仓库长度 (length)、仓库宽度 (weight)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        <span class=\"token comment\"># 货架系列 (2)：货架数量 (n_pod)、货架容量限制 (pod_limitation)、 货架位置 (loc_pod)、拣货口位置（loc_station）</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>        <span class=\"token comment\"># 机器人系列 (4)：机器人数量 (n_robot)、机器人空载与负载速度比 (ratio_T)、机器人到达货架时间 (Tp、Td)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>        <span class=\"token comment\"># 商品系列 (3)：商品类型数量 (n_commodity_type)、每种商品总数量 (commodity_limitation)、货架 i 上包含商品 c 的数量 (A)</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        <span class=\"token comment\"># 订单系列 (3)：商品总需求量 (total_order)、订单数量 (n_order)、订单 i 中包含商品 c 的数量 (B)</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token comment\"># 拣货系列 (1)：拣取一个商品所需时间 (Th)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        json_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">:</span> length<span class=\"token punctuation\">,</span> <span class=\"token string\">'weight'</span><span class=\"token punctuation\">:</span> weight<span class=\"token punctuation\">,</span> <span class=\"token string\">'n_pod'</span><span class=\"token punctuation\">:</span> n_pod<span class=\"token punctuation\">,</span> <span class=\"token string\">'pod_limitation'</span><span class=\"token punctuation\">:</span> pod_limitation<span class=\"token punctuation\">,</span> <span class=\"token string\">'loc_pod'</span><span class=\"token punctuation\">:</span> loc_pod<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>                     <span class=\"token string\">'loc_station'</span><span class=\"token punctuation\">:</span> loc_station<span class=\"token punctuation\">,</span> <span class=\"token string\">'n_robot'</span><span class=\"token punctuation\">:</span> n_robot<span class=\"token punctuation\">,</span> <span class=\"token string\">'ratio_T'</span><span class=\"token punctuation\">:</span> ratio_T<span class=\"token punctuation\">,</span> <span class=\"token string\">'Tp'</span><span class=\"token punctuation\">:</span> Tp<span class=\"token punctuation\">,</span> <span class=\"token string\">'Td'</span><span class=\"token punctuation\">:</span> Td<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>                     <span class=\"token string\">'n_commodity_type'</span><span class=\"token punctuation\">:</span> n_commodity_type<span class=\"token punctuation\">,</span> <span class=\"token string\">'commodity_limitation'</span><span class=\"token punctuation\">:</span> commodity_limitation<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>                     <span class=\"token string\">'A'</span><span class=\"token punctuation\">:</span> commodities_distribution<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'total_order'</span><span class=\"token punctuation\">:</span> total_order<span class=\"token punctuation\">,</span> <span class=\"token string\">'n_order'</span><span class=\"token punctuation\">:</span> n_order<span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">:</span> orders<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Th'</span><span class=\"token punctuation\">:</span> Th<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        json_datas<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>json_data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token triple-quoted-string string\">'''生成json文件'''</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'datas/'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'p_'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'r_'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_datas<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> fp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        <span class=\"token comment\"># ensure_ascii=False 才能输入中文，否则是 Unicode 字符</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token comment\"># indent=2 JSON 数据的缩进，美观</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        json<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>json_datas<span class=\"token punctuation\">,</span> fp<span class=\"token punctuation\">,</span> ensure_ascii<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> indent<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    fp<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'json file \\''</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'p_'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'r_'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n_datas<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.json\\''</span> <span class=\"token operator\">+</span> <span class=\"token string\">' generates succeed'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/02/code/python/python_gurobi/",
            "url": "http://qianqiu-cell.github.io/2023/03/02/code/python/python_gurobi/",
            "title": "python+gurobi应用",
            "date_published": "2023-03-01T16:00:00.000Z",
            "content_html": "<p>  有关 <code>gurobi</code>  的使用可以参考官方手册（ <code>Gurobi</code>  安装路径 <code>\\win64\\docs</code>  下的 <code>quickstart_windows.pdf</code>  和 <code>refman.pdf</code> ）</p>\n<h1 id=\"一-一些使用技巧\"><a class=\"markdownIt-Anchor\" href=\"#一-一些使用技巧\">#</a> 一、一些使用技巧</h1>\n<h2 id=\"11-gurobi无穷大值\"><a class=\"markdownIt-Anchor\" href=\"#11-gurobi无穷大值\">#</a> 1.1 gurobi 无穷大值</h2>\n<p>  参考 <code>refman.pdf</code>  的 <code>13.2</code>  中的 <code>FeasRelaxBigM</code>  和 <code>29.3</code>  中的 <code>Dealing with big-M constraints</code> <br>\n<img data-src=\"/images/code/python/python_gurobi/1.1.png\" alt=\"\"></p>\n<h2 id=\"12-gurobi最大值\"><a class=\"markdownIt-Anchor\" href=\"#12-gurobi最大值\">#</a> 1.2 gurobi 最大值</h2>\n<p>  在模型中遇到如下所示求最小化数组中最大值的目标函数<br>\n<img data-src=\"https://i.postimg.cc/Nf2QFypg/1-2.jpg\"  style=\"zoom: 33%;\" /><br>\n  可构造辅助变量，令改变量大于数组中的所有分量，最后对辅助变量进行最大 / 最小化</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>obj1 <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addVar<span class=\"token punctuation\">(</span>vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>CONTINUOUS<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'obj1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>obj1 <span class=\"token operator\">>=</span> tH<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>m<span class=\"token punctuation\">.</span>setObjective<span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">,</span> GRB<span class=\"token punctuation\">.</span>MINIMIZE<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"二-成功使用案例\"><a class=\"markdownIt-Anchor\" href=\"#二-成功使用案例\">#</a> 二、成功使用案例</h1>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> parameter <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gurobipy <span class=\"token keyword\">as</span> gp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> gurobipy <span class=\"token keyword\">import</span> GRB</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># Create optimization model</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    m <span class=\"token operator\">=</span> gp<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">(</span><span class=\"token string\">'RMFS'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># Create variables</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    x <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addMVar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_robot<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>BINARY<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 是机器人 r 第 k 个转运的任务（0，1 变量）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    y <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addMVar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>BINARY<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 是拣货人第 k 个处理的货架（0，1 变量）</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    z <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addMVar<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> n_order<span class=\"token punctuation\">,</span> n_commodity_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>INTEGER<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"z\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 为订单 o 提供的商品 c 的数量（自然数）</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    tP <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addVars<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>CONTINUOUS<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"tP\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人拿起的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    tD <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addVars<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>CONTINUOUS<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"tD\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被机器人放下的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    tH <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addVars<span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">,</span> vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>CONTINUOUS<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"tH\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 货架 i 被拣货人开始拣货的时间，-1 表示未搬运货架</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># Create auxiliary variable</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    obj1 <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>addVar<span class=\"token punctuation\">(</span>vtype<span class=\"token operator\">=</span>GRB<span class=\"token punctuation\">.</span>CONTINUOUS<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'obj1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    m<span class=\"token punctuation\">.</span>setParam<span class=\"token punctuation\">(</span>GRB<span class=\"token punctuation\">.</span>Param<span class=\"token punctuation\">.</span>FeasRelaxBigM<span class=\"token punctuation\">,</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>Td<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> n_pod<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># Set objective</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>obj1 <span class=\"token operator\">>=</span> tH<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    m<span class=\"token punctuation\">.</span>setObjective<span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">,</span> GRB<span class=\"token punctuation\">.</span>MINIMIZE<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># Add constraint</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># 1. 每个货架提供给所有订单的每种商品不超过其所包含的该商品的数量</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_commodity_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># 2. 所有货架提供给某一订单的某种商品数等于该订单所需求的该种商品的数量</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_order<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_commodity_type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\"># 3. 每个货架最多被安排给一个转运机器人的一个顺序号</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># 4. 每个机器人的每个顺序号最多安排一个货架</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\"># 5. 若机器人的后序顺序号被安排了一个货架，则其前序顺序号一定被安排了一个货架</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\"># 6. 若某一货架为订单提供了商品，则必须为该货架安排一个转运机器人</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>total_order <span class=\"token operator\">*</span> x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token comment\"># 7. 某一货架被机器人放下的时间等于其被拿起的时间与转运时间之和</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>tD<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> tP<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>Td<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\"># 8. 机器人拿起下一货架的时间不小于机器人放下上一货架和运行至下一货架的时间和</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>tP<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> tD<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Tp<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">.</span>Params<span class=\"token punctuation\">.</span>FeasRelaxBigM <span class=\"token keyword\">for</span> i1 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i2 <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                 <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token comment\"># 9. 每个货架最多被安排给一个拣货顺序号</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\"># 10. 每个拣货顺序号最多安排一个货架</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\"># 11. 当前拣货顺序号被安排了一个货架，则其前序拣货顺序号一定被安排了一个货架</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> y<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token comment\"># 12. 若货架被分配了一个转运机器人，则一定为其安排了拣货</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> x<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\"># 13. 货架的拣货时间不早于其被机器人送到拣货站的时间</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>tH<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> tD<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token comment\"># 14. 拣货人拣取下一货架的时间不小于拣货人开始拣取上一货架和拣取上一货架的时间和</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>tH<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> tH<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> Th <span class=\"token operator\">*</span> z<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">[</span>i1<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> y<span class=\"token punctuation\">[</span>i2<span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">.</span>Params<span class=\"token punctuation\">.</span>FeasRelaxBigM <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                 <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i2 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i1 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token comment\"># 15. 机器人拿起的第一个货架等于机器人空载运行到该货架的时间</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    m<span class=\"token punctuation\">.</span>addConstrs<span class=\"token punctuation\">(</span>tP<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> Tp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">.</span>Params<span class=\"token punctuation\">.</span>FeasRelaxBigM <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_robot<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n_pod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token comment\"># Optimize model</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    m<span class=\"token punctuation\">.</span>optimize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">.</span>getVars<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'%s %g'</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>VarName<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Obj: %g'</span> <span class=\"token operator\">%</span> m<span class=\"token punctuation\">.</span>ObjVal<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "最优化",
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/02/code/python/python_numba/",
            "url": "http://qianqiu-cell.github.io/2023/03/02/code/python/python_numba/",
            "title": "使用numba对python进行加速",
            "date_published": "2023-03-01T16:00:00.000Z",
            "content_html": "<h1 id=\"一-numba简介\"><a class=\"markdownIt-Anchor\" href=\"#一-numba简介\">#</a> 一、Numba 简介</h1>\n<p>  计算机只能执行二进制的机器码， <code>C</code> 、 <code>C++</code>  等<mark>编译型语言</mark>依靠编译器将源代码转化为可执行文件后才能运行， <code>Python</code> 、 <code>Java</code>  等<mark>解释型语言</mark>使用解释器将源代码翻译后在虚拟机上执行。对于 <code>Python</code> ，由于解释器的存在，其执行效率比 <code>C</code>  语言慢几倍甚至几十倍。通过下图对各种编程语言比较情况可见 <code>python</code>  在消耗电量、速度以及内存使用情况上与 <code>C</code> 、 <code>C++</code>  的差距。<br>\n<img data-src=\"/images/code/python/python_numba/1.1.jpg\" alt=\"\"><br>\n   <code>Numba</code>  是一个针对 <code>Python</code>  的开源 <code>JIT</code>  编译器，由 <code>Anaconda</code>  公司主导开发，可以对原生代码进行 <code>CPU</code>  和 <code>GPU</code>  加速。在使用 <code>Python</code>  进行高性能计算时， <code>Numba</code>  提供的加速效果可以比肩原生的 <code>C/C++</code>  程序。</p>\n<h1 id=\"二-numba的使用方式\"><a class=\"markdownIt-Anchor\" href=\"#二-numba的使用方式\">#</a> 二、numba 的使用方式</h1>\n<p>  通常，在对 <code>Python</code>  函数应用<mark>函数装饰器</mark>后，便可启用 <code>Numba</code>  编译器。装饰器即为函数修改器，使用十分简单的语法来转换所装饰的 <code>Python</code>  函数。</p>\n<h2 id=\"21-jit\"><a class=\"markdownIt-Anchor\" href=\"#21-jit\">#</a> 2.1 @jit</h2>\n<p>  我们只需要在原来的代码上添加一行 <code>@jit</code> ，即可将一个函数编译成机器码，其他地方都不需要更改。 <code>@</code> 符号装饰了原来的代码，所以称类似写法为装饰器。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> numba <span class=\"token keyword\">import</span> jit</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token decorator annotation punctuation\">@jit</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"22-njit\"><a class=\"markdownIt-Anchor\" href=\"#22-njit\">#</a> 2.2 @njit</h2>\n<p>   <code>@jit</code>  装饰器有一个参数 <code>nopython</code> ， 用于区分 <code>numba</code>  的运行模式， <code>numba</code>  有两种运行模式：一个是 <code>nopython</code>  模式，另一个就是 <code>object</code>  模式。只有在 <code>nopython</code>  模式下，才会获得最好的加速效果，如果 <code>numba</code>  发现代码有不能理解的东西，就会自动进入 <code>object</code>  模式，确保程序能够运行的。将装饰器改为 <code>@jit(nopython=True)</code>  或者 <code>@njit</code> ， <code>numba</code>  会强制使用加速的方式，不进入 <code>object</code>  模式，如编译不成功，则直接抛出异常。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> numba <span class=\"token keyword\">import</span> jit</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token decorator annotation punctuation\">@njit</span>  <span class=\"token comment\"># 相当于 @jit (nonpyhon=True)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"23-vectorize\"><a class=\"markdownIt-Anchor\" href=\"#23-vectorize\">#</a> 2.3 @vectorize</h2>\n<p>  通过使用 <code>@vectorize</code>  装饰器，你可以对仅能对标量操作的函数进行转换，例如，如果你使用的是仅适用于标量的 <code>python</code>  的 <code>math</code>  库，则转换后就可以用于数组。这提供了类似于 <code>numpy</code>  数组运算。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> numba <span class=\"token keyword\">import</span> jit<span class=\"token punctuation\">,</span> int32</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token decorator annotation punctuation\">@vectorize</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\"># Some operation on scalars</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> result</pre></td></tr></table></figure><h1 id=\"三-使用注意事项\"><a class=\"markdownIt-Anchor\" href=\"#三-使用注意事项\">#</a> 三、使用注意事项</h1>\n<p>（1） <code>Numba</code>  简单到只需要在函数上加一个装饰就能加速程序，但也有缺点。目前 <code>Numba</code>  只支持了 <code>Python</code>  原生函数和部分 <code>NumPy</code>  函数，其他一些场景可能不适用。<br>\n  比如类似 <code>pandas</code>  这样的库是更高层次的封装， <code>Numba</code>  其实不能理解它里面做了什么，所以无法对其加速。一些大家经常用的机器学习框架，如 <code>scikit-learn</code> ， <code>tensorflow</code> ， <code>pytorch</code>  等，已经做了大量的优化，不适合再使用 <code>Numba</code>  做加速。<br>\n（2）原生 <code>Python</code>  速度慢的另一个重要原因是变量类型不确定。声明一个变量的语法很简单，如 <code>a = 1</code> ，但没有指定 <code>a</code>  到底是一个整数和一个浮点小数。 <code>Python</code>  解释器要进行大量的类型推断，会非常耗时。 引入 <code>Numba</code>  后， <code>Numba</code>  也要推断输入输出的类型，才能转化为机器码。针对这个问题， <code>Numba</code>  给出了名为 <code>Eager Compilation</code>  的优化方式。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> numba <span class=\"token keyword\">import</span> jit<span class=\"token punctuation\">,</span> int32</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token decorator annotation punctuation\">@jit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"int32(int32, int32)\"</span><span class=\"token punctuation\">,</span> nopython<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y</pre></td></tr></table></figure><p>   <code>@jit(int32(int32, int32))</code>  告知 <code>Numba</code>  你的函数在使用什么样的输入和输出，括号内是输入，括号左侧是输出。这样不会加快执行速度，但是会加快编译速度，可以更快将函数编译到机器码上。</p>\n<h1 id=\"四-成功使用案例\"><a class=\"markdownIt-Anchor\" href=\"#四-成功使用案例\">#</a> 四、成功使用案例</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 功能：根据输入参数获得 z（货架 i 为订单 o 提供的商品 c 的数量）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 输入参数：各参数同 parameter.py</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 输出参数：z</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token decorator annotation punctuation\">@nb<span class=\"token punctuation\">.</span>njit</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    nb<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nb<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                     nb<span class=\"token punctuation\">.</span>types<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">(</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_z</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> selected_pods<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    z <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>nb<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    transform_y <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">if</span> y<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                transform_y<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    remaining_orders <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 所有订单剩余量（n_order*n_commodity_type）</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>selected_pods<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 第 i 个货架</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        remaining_A <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span>transform_y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 当前货架的剩余量（1*n_commodity_type）</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 第 j 个订单</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 第 k 种商品</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">if</span> remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                    <span class=\"token keyword\">if</span> remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 货架 i 足够为订单 k 提供 z 种商品</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                        z<span class=\"token punctuation\">[</span>transform_y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                        remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                        remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 货架 i 不足够为订单 k 提供 z 种商品</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        <span class=\"token comment\"># z[transform_y[i]][j][k] = remaining_A[k]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                        z<span class=\"token punctuation\">[</span>transform_y<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                        remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> remaining_orders<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        remaining_A<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> z</pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/02/code/python/python_try_except/",
            "url": "http://qianqiu-cell.github.io/2023/03/02/code/python/python_try_except/",
            "title": "python下的try-except处理异常",
            "date_published": "2023-03-01T16:00:00.000Z",
            "content_html": "<h1 id=\"一-什么是异常\"><a class=\"markdownIt-Anchor\" href=\"#一-什么是异常\">#</a> 一、什么是异常</h1>\n<p>  异常即是一个事件，该事件会在程序执行过程中发生，影响了程序的正常执行。 <code>python</code>  的标准异常及异常处理详解<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9weXRob24vcHl0aG9uLWV4Y2VwdGlvbnMuaHRtbA==\">戳此</span></p>\n<h1 id=\"二-异常处理\"><a class=\"markdownIt-Anchor\" href=\"#二-异常处理\">#</a> 二、异常处理</h1>\n<p>  捕捉异常可以使用 <code>try/except</code>  语句。 <code>try/except</code>  语句用来检测 <code>try</code>  语句块中的错误，从而让 <code>except</code>  语句捕获异常信息并处理。如果不想在异常发生时结束程序，只需在 <code>try</code>  里捕获它。</p>\n<h1 id=\"三-语法\"><a class=\"markdownIt-Anchor\" href=\"#三-语法\">#</a> 三、语法：</h1>\n<h2 id=\"31-try-except-else\"><a class=\"markdownIt-Anchor\" href=\"#31-try-except-else\">#</a> 3.1 try-except-else</h2>\n<p>  以下为简单的 <code>try....except...else</code>  的语法：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span>        <span class=\"token comment\">#运行别的代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">except</span> NameError：</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span>        <span class=\"token comment\">#如果在 try 部份引发了 'name' 异常，执行此语句</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span>        <span class=\"token comment\">#其他类型异常执行此语句</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span>        <span class=\"token comment\">#如果没有异常发生</span></pre></td></tr></table></figure><h2 id=\"32-try-finally\"><a class=\"markdownIt-Anchor\" href=\"#32-try-finally\">#</a> 3.2 try-finally</h2>\n<p>   <code>try-finally</code>  语句无论是否发生异常都将执行最后的代码，即便 <code>try</code>  中发生了异常， <code>finally</code>  中的命令也会执行。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">&lt;</span>语句<span class=\"token operator\">></span>    <span class=\"token comment\">#退出 try 时总会执行</span></pre></td></tr></table></figure><h1 id=\"四-自定义异常\"><a class=\"markdownIt-Anchor\" href=\"#四-自定义异常\">#</a> 四、自定义异常</h1>\n<p>  在 <code>Python</code>  中，用户可以通过创建新类来定义此类异常。该异常类必须直接或间接地从 <code>Exception</code>  该类派生。大多数内置异常也是从此类派生的。</p>\n<figure class=\"highlight py\"><figcaption data-lang=\"Python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 定义 Python 用户定义的异常</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token triple-quoted-string string\">\"\"\"其他异常的基类\"\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ValueTooSmallError</span><span class=\"token punctuation\">(</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token triple-quoted-string string\">\"\"\"当输入值太小时引发\"\"\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">ValueTooLargeError</span><span class=\"token punctuation\">(</span>Error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token triple-quoted-string string\">\"\"\"当输入值过大时引发\"\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 我们的主程序</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 用户猜出一个数字，直到他 / 她猜对为止</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 你需要猜这个数字</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>number <span class=\"token operator\">=</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>       i_num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入数字: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>       <span class=\"token keyword\">if</span> i_num <span class=\"token operator\">&lt;</span> number<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>           <span class=\"token keyword\">raise</span> ValueTooSmallError</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>       <span class=\"token keyword\">elif</span> i_num <span class=\"token operator\">></span> number<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>           <span class=\"token keyword\">raise</span> ValueTooLargeError</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>       <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token keyword\">except</span> ValueTooSmallError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这个值太小，请再试一次!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token keyword\">except</span> ValueTooLargeError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这个值太大，请再试一次!\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"恭喜你！ 你猜对了.\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/01/code/Cplusplus/CplusplusGetTime/",
            "url": "http://qianqiu-cell.github.io/2023/03/01/code/Cplusplus/CplusplusGetTime/",
            "title": "C++获取程序运行时间",
            "date_published": "2023-02-28T16:00:00.000Z",
            "content_html": "<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;chrono></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token double-colon punctuation\">::</span>chrono<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> time1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token comment\">/*cout &lt;&lt; \"秒:\" &lt;&lt; duration_cast&lt;seconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tcout &lt;&lt; \"毫秒:\" &lt;&lt; duration_cast&lt;milliseconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tcout &lt;&lt; \"微秒:\" &lt;&lt; duration_cast&lt;microseconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\tcout &lt;&lt; \"纳秒:\" &lt;&lt; duration_cast&lt;nanoseconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;*/</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> t1 <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">duration_cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>microseconds<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>system_clock<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">time_since_epoch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token comment\">//cout &lt;&lt; \"微秒:\" &lt;&lt; duration_cast&lt;microseconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">120000</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">%</span> <span class=\"token number\">3</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">%</span> <span class=\"token number\">9</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t\tcount <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t\tcount <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">int</span> t2 <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">duration_cast</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>microseconds<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span>system_clock<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">time_since_epoch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\tcout <span class=\"token operator\">&lt;&lt;</span> t2 <span class=\"token operator\">-</span> t1 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token comment\">//cout &lt;&lt; \"微秒:\" &lt;&lt; duration_cast&lt;microseconds>(system_clock::now ().time_since_epoch ()).count () &lt;&lt; endl;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "C++"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/03/01/code/python/python_test/",
            "url": "http://qianqiu-cell.github.io/2023/03/01/code/python/python_test/",
            "title": "Python test in xxx问题",
            "date_published": "2023-02-28T16:00:00.000Z",
            "content_html": "<h1 id=\"一-问题描述\"><a class=\"markdownIt-Anchor\" href=\"#一-问题描述\">#</a> 一、问题描述</h1>\n<p><code>pycharm</code>  运行程序时，不是 <code>run xxx</code>  的格式。而是 <code>python tests in xxx</code>  的格式，如下图所示<br>\n<img data-src=\"/images/code/python/python_test/1.1.png\" alt=\"\"></p>\n<h1 id=\"二-问题原因\"><a class=\"markdownIt-Anchor\" href=\"#二-问题原因\">#</a> 二、问题原因</h1>\n<p>程序的文件名格式为 <code>test_.py</code>  或 <code>_test.py</code> ，在 <code>pycharm</code>  中自动进入了 <code>pytest</code>  的模式</p>\n<h1 id=\"三-解决方案\"><a class=\"markdownIt-Anchor\" href=\"#三-解决方案\">#</a> 三、解决方案</h1>\n<p>（1）将 <code>py</code>  文件的文件名称更改为其他格式<br>\n（2）进入 <code>File→Settings→Tools→Python integrated Tools</code> ，在 <code>Testing</code>  中将 <code>Default test runner</code>  选项由 <code>pytest</code>  更改为 <code>Unittests</code> <br>\n<img data-src=\"/images/code/python/python_test/3.1.png\" alt=\"\"></p>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_bitwise_operators/",
            "url": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_bitwise_operators/",
            "title": "Python按位运算符",
            "date_published": "2023-02-05T16:00:00.000Z",
            "content_html": "<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Bitwise Operator</th>\n<th style=\"text-align:center\">Description</th>\n<th style=\"text-align:center\">Simple Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">Bitwise OR Operator</td>\n<td style=\"text-align:center\">10 &amp; 7 = 2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">|</td>\n<td style=\"text-align:center\">Bitwise XOR Operator</td>\n<td style=\"text-align:center\">10 | 7 = 15</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">Bitwise AND Operator</td>\n<td style=\"text-align:center\">10 ^ 7 = 13</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">~</td>\n<td style=\"text-align:center\">Bitwise Ones’ Compliment Operator</td>\n<td style=\"text-align:center\">~10 = -11</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;&lt;</td>\n<td style=\"text-align:center\">Bitwise Left Shift operator</td>\n<td style=\"text-align:center\">10&lt;&lt;2 = 40</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;&gt;</td>\n<td style=\"text-align:center\">Bitwise Right Shift Operator</td>\n<td style=\"text-align:center\">10&gt;&gt;1 = 5</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_array_asarray/",
            "url": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_array_asarray/",
            "title": "np.array和np.asarray区别",
            "date_published": "2023-02-05T16:00:00.000Z",
            "content_html": "<p><code>np.array</code>  和 <code>np.asarray</code>  都可将结构数据转换为 <code>ndarray</code>  类型<br>\n但是主要区别就是当数据源是 <code>ndarray</code>  时：<br>\n <code>np.array</code>  占用新的内存，即<mark>转换后的变量与原始变量相互独立</mark><br>\n但 <code>np.asarray</code>  不会占用新的内存，即<mark>转换后的变量与原始变量无关</mark></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#example 1:  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>data1<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>arr2<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>arr3<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>data1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'data1:\\n'</span><span class=\"token punctuation\">,</span>data1  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'arr2:\\n'</span><span class=\"token punctuation\">,</span>arr2  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'arr3:\\n'</span><span class=\"token punctuation\">,</span>arr3</pre></td></tr></table></figure><p>输出结果为：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>data1<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>arr2<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>arr3<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#example 2:  </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>arr1<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>arr2<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>arr3<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>arr1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">2</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'arr1:\\n'</span><span class=\"token punctuation\">,</span>arr1  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'arr2:\\n'</span><span class=\"token punctuation\">,</span>arr2  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">'arr3:\\n'</span><span class=\"token punctuation\">,</span>arr3</pre></td></tr></table></figure><p>输出结果为</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>arr1<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">2.</span>  <span class=\"token number\">2.</span>  <span class=\"token number\">2.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>arr2<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>arr3<span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">2.</span>  <span class=\"token number\">2.</span>  <span class=\"token number\">2.</span><span class=\"token punctuation\">]</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token punctuation\">[</span> <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span>  <span class=\"token number\">1.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_float/",
            "url": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_float/",
            "title": "Python浮点数运算不精确问题",
            "date_published": "2023-02-05T16:00:00.000Z",
            "content_html": "<p>由于 <code>Python</code>  的浮点数以二进制形式表示，计算机在进行浮点运算时会产生浮点误差，如下场景所示</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">100.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100.9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 输出：201.60000000000002</span></pre></td></tr></table></figure><p>解决方法： <code>round()</code>  是 <code>python</code>  自带的一个函数，用于数字的四舍五入</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.214</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 输出：5.21</span></pre></td></tr></table></figure>",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_multiply/",
            "url": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_multiply/",
            "title": "python字符串、列表、元组乘法",
            "date_published": "2023-02-05T16:00:00.000Z",
            "content_html": "<p><code>python</code>  中，支持相乘的有字符串，列表，元组，相乘是内容相乘 <code>n</code> ，新的内容会重复 <code>n</code>  次</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>str_a <span class=\"token operator\">=</span> <span class=\"token string\">\"我\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>str_a <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>list_a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list_a <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>list_b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"我\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"爱\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"python\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list_b <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运行结果为<br>\n<img data-src=\"/images/code/python/python_multiply/1.png\" alt=\"\"></p>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_note/",
            "url": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_note/",
            "title": "Pycharm中的特殊注释",
            "date_published": "2023-02-05T16:00:00.000Z",
            "content_html": "<p>在 <code>Pycharm</code>  中， <code>Python</code>  的注释存在一些特殊的用法，比如  <code># noqa</code> ，  <code># todo</code> ，  <code># type</code></p>\n<div class=\"tab\" data-id=\"id1\" data-title=\"# noqa\">\n<p><code>noqa</code>  指 <code>no quality assurance</code> ，用在一行代码后，表示这一行代码自动检查忽略错误，由 <code>IDE</code>  支持<br>\n比如以下命名拼写问题，不会出现下划线提醒：<br>\n<img data-src=\"/images/code/python/python_note/1.png\" alt=\"\"><br>\n也可以用作  <code># noqa: &lt;error&gt;</code> ，表示忽略某一特定类型的错误，例如<br>\n<img data-src=\"/images/code/python/python_note/2.jpg\" alt=\"\"><br>\n如上表示忽略了 <code>numpy</code>  引用但未使用的问题，不会出现提示</p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"# todo\">\n<p>作为助记符，表示将要完成的功能或任务，由 <code>IDE</code>  支持，比如在 <code>PyCharm</code>  中会高亮表示，并可快速查询<br>\n<img data-src=\"/images/code/python/python_note/3.png\" alt=\"\"></p>\n</div>\n<div class=\"tab\" data-id=\"id1\" data-title=\"# type\">\n<p>用于指定期望的数据类型<br>\n<img data-src=\"/images/code/python/python_note/4.jpg\" alt=\"\"><br>\n上图中为 <code>a</code>  指定的类型为 <code>dict</code> ，但被赋予数字 <code>5</code> ，因此 <code>IDE</code>  会提示该问题<br>\n但 <code>a</code>  可使用 <code>dict</code>  的相关方法和属性</p>\n</div>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_special_func/",
            "url": "http://qianqiu-cell.github.io/2023/02/06/code/python/python_special_func/",
            "title": "特定功能函数",
            "date_published": "2023-02-05T16:00:00.000Z",
            "content_html": "<details class=\"success\"><summary>生成n个随机数，其和为固定值</summary><div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        a <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 生成 n-1 个随机节点</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        list1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    list1<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 节点排序</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    list1<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 设置第 n 个节点为 amount，即总金额</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    list2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>list1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            b <span class=\"token operator\">=</span> list1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 第一段长度为第 1 个节点 - 0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            b <span class=\"token operator\">=</span> list1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> list1<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 其余段为第 n 个节点 - 第 n-1 个节点</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        list2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> list2</pre></td></tr></table></figure></div></details>\n",
            "tags": [
                "编程技巧",
                "python"
            ]
        }
    ]
}