{
    "version": "https://jsonfeed.org/version/1",
    "title": "Welcome to my tiny world • All posts by \"硬件开发\" tag",
    "description": "小樊&小小樊的学习笔记🌸",
    "home_page_url": "http://qianqiu-cell.github.io",
    "items": [
        {
            "id": "http://qianqiu-cell.github.io/2023/01/30/hardware/Quartus/",
            "url": "http://qianqiu-cell.github.io/2023/01/30/hardware/Quartus/",
            "title": "Quartus基础教程",
            "date_published": "2023-01-29T16:00:00.000Z",
            "content_html": "<h1 id=\"一-quartus及驱动安装\"><a class=\"markdownIt-Anchor\" href=\"#一-quartus及驱动安装\">#</a> 一、Quartus 及驱动安装</h1>\n<h2 id=\"11-quartus安装\"><a class=\"markdownIt-Anchor\" href=\"#11-quartus安装\">#</a> 1.1 Quartus 安装</h2>\n<p>根据百度网盘中的安装包及教程进行软件安装<br>\n<img data-src=\"/images/Quartus/1.1.png\" alt=\"\"></p>\n<h2 id=\"12-驱动安装\"><a class=\"markdownIt-Anchor\" href=\"#12-驱动安装\">#</a> 1.2 驱动安装</h2>\n<p><code>FPGA</code>  与计算机共有<mark>两条</mark>数据线进行连接，<ins>一条用于供电及通讯，另一条用于程序的烧录</ins>。将 FPGA 开发板正确连接至电脑后，可在设备管理器中看到如 <code>USB-SERIAL CH340</code>  及 <code>Altera USB-Blaster</code>  则证明 <code>FPGA</code>  与计算机连接成功。（⚠️若小图标处有感叹号，则证明缺少驱动，可根据安装教程进行驱动安装，本次安装的电脑为重装后的电脑，没有安装任何驱动即可正确识别）<br>\n<img data-src=\"/images/Quartus/1.2.png\" alt=\"\"></p>\n<h1 id=\"二-modelsim安装\"><a class=\"markdownIt-Anchor\" href=\"#二-modelsim安装\">#</a> 二、Modelsim 安装</h1>\n<p>安装 <code>Modelsim</code> ，安装包及教程见百度网盘<br>\n<img data-src=\"/images/Quartus/2.1.png\" alt=\"\"><br>\n安装完成 <code>Modelsim</code>  后，在 <code>Quartus</code>  中依次点击 <code>Tools→Options→General→EDA Tool Options</code>  选择 <code>Modelsim</code>  的安装路径里面的 <code>win64</code> <br>\n<img data-src=\"/images/Quartus/2.2.png\" alt=\"\"></p>\n<h1 id=\"三-编辑及仿真\"><a class=\"markdownIt-Anchor\" href=\"#三-编辑及仿真\">#</a> 三、编辑及仿真</h1>\n<p>进入 <code>Quartus</code>  软件，点击 <code>start compilation</code>  进行程序编译<br>\n<img data-src=\"/images/Quartus/3.1.png\" alt=\"\"><br>\n编译完成之后点击 <code>Tools→Run Simulation Tool→RTL Simulation</code>  进行仿真<br>\n<img data-src=\"/images/Quartus/3.2.png\" alt=\"\"><br>\n仿真完成后可显示如下界面（点击 <code>Zoom full</code>  可显示波形）<br>\n<img data-src=\"/images/Quartus/3.3.png\" alt=\"\"></p>\n<h1 id=\"四-程序下载至fpga\"><a class=\"markdownIt-Anchor\" href=\"#四-程序下载至fpga\">#</a> 四、程序下载至 FPGA</h1>\n<p>依次点击 <code>Tools→Programmer</code>  打开如下界面<br>\n<img data-src=\"/images/Quartus/4.1.png\" alt=\"\"><br>\n点击 <code>Start</code>  即可开始程序下载，若未识别到硬件，可点击 <code>Hardware Setup</code>  进行设置，如下图所示<br>\n<img data-src=\"/images/Quartus/4.2.png\" alt=\"\"></p>\n",
            "tags": [
                "硬件开发"
            ]
        },
        {
            "id": "http://qianqiu-cell.github.io/2022/11/16/hardware/stm32cubemx/",
            "url": "http://qianqiu-cell.github.io/2022/11/16/hardware/stm32cubemx/",
            "title": "使用stm32cubemx新建工程",
            "date_published": "2022-11-15T16:00:00.000Z",
            "content_html": "<p>参考视频：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMThYNHkxTTc2My8/cD0xNSZhbXA7dmRfc291cmNlPTlhZWNiM2JkMWM5Mzg2MjM5MzA0MzNmODYwZjRhNTU1\">https://www.bilibili.com/video/BV18X4y1M763/?p=15&amp;vd_source=9aecb3bd1c938623930433f860f4a555</span></p>\n<h1 id=\"一-新建工程\"><a class=\"markdownIt-Anchor\" href=\"#一-新建工程\">#</a> 一、新建工程</h1>\n<p>点击 <code>ACCESS TO MCU SELECTOR</code> （如红框所示）<br>\n<img data-src=\"/images/stm32cubemx/1.1.png\" alt=\"\"><br>\n在搜索框内输入所需要的芯片型号，在右边搜索结果中双击自己的板子型号，这里我们使用的是 <code>stm32f103zet6</code> <br>\n<img data-src=\"/images/stm32cubemx/1.2.png\" alt=\"\"></p>\n<h1 id=\"二-一些必要的工作\"><a class=\"markdownIt-Anchor\" href=\"#二-一些必要的工作\">#</a> 二、一些必要的工作</h1>\n<p>选择 <code>system core</code>  中的 <code>RCC</code> ，将 <code>High Speed Clock(HSE)</code>  定义为 <code>Crystal/Ceramic Resonator</code> <br>\n<img data-src=\"/images/stm32cubemx/2.1.png\" alt=\"\"><br>\n 选择 <code>system core</code>  中的 <code>SYS</code> ，将 <code>debug</code>  定义为 <code>Serial Wire</code> <br>\n<img data-src=\"/images/stm32cubemx/2.2.png\" alt=\"\"></p>\n<h1 id=\"三-定义io端口\"><a class=\"markdownIt-Anchor\" href=\"#三-定义io端口\">#</a> 三、定义 IO 端口</h1>\n<p>定义 IO 端口，即定义自己使用哪一个引脚作为 IO 输入与输出。选择 <code>system core</code>  中的 <code>GPIO</code> <br>\n<img data-src=\"/images/stm32cubemx/3.1.png\" alt=\"\"><br>\n 在右下方输入我们要定义的引脚，输入完成后对应引脚会闪烁，之后定位到我们所需要的引脚并进行设置，这里我们定义 <code>PB3</code>  为输入端口<br>\n<img data-src=\"/images/stm32cubemx/3.2.png\" alt=\"\"><br>\n完成设置后会在左侧显示已经配置好的引脚信息<br>\n<img data-src=\"/images/stm32cubemx/3.3.png\" alt=\"\"></p>\n<h1 id=\"四-配置usart1串口通讯\"><a class=\"markdownIt-Anchor\" href=\"#四-配置usart1串口通讯\">#</a> 四、配置 usart1 串口通讯</h1>\n<p>打开 <code>connectivity</code>  下的 <code>usart1</code>  界面，将 <code>mode</code>  设置为 <code>asynchronous</code> <br>\n<img data-src=\"/images/stm32cubemx/4.1.png\" alt=\"\"><br>\n 打开 <code>NVIC Settings</code> ，选择 <code>Enable</code> <br>\n<img data-src=\"/images/stm32cubemx/4.2.png\" alt=\"\"><br>\n 在下面的 <code>parameter settings</code>  中会显示配置后串口通讯的一些信息<br>\n<img data-src=\"/images/stm32cubemx/4.3.png\" alt=\"\"></p>\n<h1 id=\"五-配置时钟\"><a class=\"markdownIt-Anchor\" href=\"#五-配置时钟\">#</a> 五、配置时钟</h1>\n<p>打开 <code>clock configuration</code> ，将时钟配置为 <code>72MHz</code> ，如下图所示<br>\n<img data-src=\"/images/stm32cubemx/5.1.png\" alt=\"\"></p>\n<h1 id=\"六-生成程序前的一些配置\"><a class=\"markdownIt-Anchor\" href=\"#六-生成程序前的一些配置\">#</a> 六、生成程序前的一些配置</h1>\n<p>点击 <code>project manager</code> ，并按照下列图片进行配置<br>\n<img data-src=\"/images/stm32cubemx/6.1.png\" alt=\"\"><br>\n<img data-src=\"/images/stm32cubemx/6.2.png\" alt=\"\"></p>\n<h1 id=\"七-生成代码\"><a class=\"markdownIt-Anchor\" href=\"#七-生成代码\">#</a> 七、生成代码</h1>\n<p>点击 <code>generate code</code> ，进行代码的生成，如下图所示<br>\n<img data-src=\"/images/stm32cubemx/7.1.png\" alt=\"\"><br>\n完成代码生成后即可生成如下界面，三个选项分别是打开文件夹，打开工程（使用 <code>keil MDK</code> ），关闭当前窗口<br>\n<img data-src=\"/images/stm32cubemx/7.2.png\" alt=\"\"></p>\n",
            "tags": [
                "硬件开发"
            ]
        }
    ]
}